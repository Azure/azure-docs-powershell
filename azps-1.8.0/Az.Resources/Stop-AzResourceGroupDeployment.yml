### YamlMime:PowershellCmdlet
summary: |-
  Cancels a resource group deployment.
module: Az.Resources
notes: ""
inputs:
- name: <xref href="System.String" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="System.Boolean" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Get-AzResourceGroupDeployment
  href: ./Get-AzResourceGroupDeployment.yml
- text: New-AzResource
  href: ./New-AzResource.yml
- text: New-AzResourceGroup
  href: ./New-AzResourceGroup.yml
- text: New-AzResourceGroupDeployment
  href: ./New-AzResourceGroupDeployment.yml
- text: Remove-AzResourceGroupDeployment
  href: ./Remove-AzResourceGroupDeployment.yml
- text: Test-AzResourceGroupDeployment
  href: ./Test-AzResourceGroupDeployment.yml
syntaxes:
- >-
  Stop-AzResourceGroupDeployment [-ResourceGroupName] <String> [-Name] <String> [-ApiVersion <String>] [-Pre]

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Stop-AzResourceGroupDeployment -Id <String> [-ApiVersion <String>] [-Pre]

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: 'Example 1: Starting and stopping a resource group deployment'
  code: |-
    PS C:\> New-AzResourceGroupDeployment -Name mynewstorageaccount -ResourceGroupName myrg -TemplateFile .\storage-account-create-azdeploy.json -TemplateParameterFile .\storage-account-create-azdeploy.parameters.json -AsJob

    Id     Name            PSJobTypeName   State         HasMoreData     Location             Command
    --     ----            -------------   -----         -----------     --------             -------
    1      Long Running... AzureLongRun... Running       True            localhost            New-AzResourceGro...

    PS C:\> Stop-AzResourceGroupDeployment -Name mynewstorageaccount -ResourceGroupName myrg
    True

    PS C:\> Get-Job 1

    Id     Name            PSJobTypeName   State         HasMoreData     Location             Command
    --     ----            -------------   -----         -----------     --------             -------
    1      Long Running... AzureLongRun... Failed        True            localhost            New-AzResourceGro...
  description: ""
  summary: ""
parameters:
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ApiVersion
  description: |+
    Specifies the API version that is supported by the resource Provider.
    You can specify a different version than the default version.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Common.Authentication.Abstractions.Core.IAzureContextContainer" data-throw-if-not-resolved="False" />
  name: DefaultProfile
  description: |+
    The credentials, account, tenant, and subscription used for communication with azure

  defaultValue: None
  position: Named
  aliases: AzContext, AzureRmContext, AzureCredential
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Id
  isRequired: true
  description: |+
    Specifies the ID of the resource group deployment to stop.

  defaultValue: None
  position: Named
  aliases: DeploymentId, ResourceId
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Name
  isRequired: true
  description: |+
    Specifies the name of the resource group deployment to stop.
    If you do not specify this parameter, this cmdlet searches for a running deployment in the resource group and stops it.
    If it finds more than one running deployment, the command fails.
    To get the deployment name, use the Get-AzResourceGroupDeployment cmdlet.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: DeploymentName
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Pre
  description: |+
    Indicates that this cmdlet considers pre-release API versions when it automatically determines which version to use.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ResourceGroupName
  isRequired: true
  description: |+
    Specifies the name of the resource group.
    This cmdlet stops the deployment of the resource group that this parameter specifies.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Az.Resources.Stop-AzResourceGroupDeployment
name: Stop-AzResourceGroupDeployment
description: |-
  The **Stop-AzResourceGroupDeployment** cmdlet cancels an Azure resource group deployment that has started but not completed.
  To stop a deployment, the deployment must have an incomplete provisioning state, such as Provisioning, and not a completed state, such as Provisioned or Failed.
  An Azure resource is a user-managed entity, such as a website, database, or database server.
  A resource group is a collection of resources that are deployed as a unit.
  To deploy a resource group, use the New-AzResourceGroupDeployment cmdlet.
  The New-AzResource cmdlet creates a new resource, but it does not trigger a resource group deployment operation that this cmdlet can stop.
  This cmdlet stops only one running deployment.
  Use the *Name* parameter to stop a specific deployment.
  If you omit the *Name* parameter, **Stop-AzResourceGroupDeployment** searches for a running deployment and stops it.
  If the cmdlet finds more than one running deployment, the command fails.
metadata:
  external help file: Microsoft.Azure.PowerShell.Cmdlets.ResourceManager.dll-Help.xml
  Module Name: Az.Resources
  ms.assetid: 089954C3-7F3E-46C2-AA93-C0151EACDA2F
  online version: https://docs.microsoft.com/en-us/powershell/module/az.resources/stop-azresourcegroupdeployment
  schema: 2.0.0
  content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Resources/Resources/help/Stop-AzResourceGroupDeployment.md
  original_content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Resources/Resources/help/Stop-AzResourceGroupDeployment.md
