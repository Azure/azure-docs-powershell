### YamlMime:PowershellCmdlet
summary: |-
  Adds a credential to an existing application.
module: Az.Resources
notes: ""
inputs:
- name: <xref href="System.String" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="System.Guid" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="Microsoft.Azure.Commands.ActiveDirectory.PSADApplication" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="System.Security.SecureString" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="System.DateTime" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Azure.Commands.ActiveDirectory.PSADCredential" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Get-AzADAppCredential
  href: ./Get-AzADAppCredential.yml
- text: Remove-AzADAppCredential
  href: ./Remove-AzADAppCredential.yml
- text: Get-AzADApplication
  href: ./Get-AzADApplication.yml
syntaxes:
- >-
  New-AzADAppCredential -ObjectId <String> -Password <SecureString> [-StartDate <DateTime>] [-EndDate <DateTime>]

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  New-AzADAppCredential -ObjectId <String> -CertValue <String> [-StartDate <DateTime>] [-EndDate <DateTime>]

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  New-AzADAppCredential -ApplicationId <Guid> -CertValue <String> [-StartDate <DateTime>] [-EndDate <DateTime>]

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  New-AzADAppCredential -ApplicationId <Guid> -Password <SecureString> [-StartDate <DateTime>]

   [-EndDate <DateTime>] [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  New-AzADAppCredential -DisplayName <String> -Password <SecureString> [-StartDate <DateTime>]

   [-EndDate <DateTime>] [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  New-AzADAppCredential -DisplayName <String> -CertValue <String> [-StartDate <DateTime>] [-EndDate <DateTime>]

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  New-AzADAppCredential -ApplicationObject <PSADApplication> -CertValue <String> [-StartDate <DateTime>]

   [-EndDate <DateTime>] [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  New-AzADAppCredential -ApplicationObject <PSADApplication> -Password <SecureString> [-StartDate <DateTime>]

   [-EndDate <DateTime>] [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: Example 1 - Create a new application credential using a password
  code: |-
    PS C:\> $SecureStringPassword = ConvertTo-SecureString -String "password" -AsPlainText -Force
    PS C:\> New-AzADAppCredential -ObjectId 1f89cf81-0146-4f4e-beae-2007d0668416 -Password $SecureStringPassword
  description: |-
    A new password credential is added to the existing appplication with object id '1f89cf81-0146-4f4e-beae-2007d0668416'.
  summary: ""
- title: Example 2 - Create a new application credential using a certificate
  code: |-
    PS C:\> $cer = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2
    PS C:\> $cer.Import("C:\myapp.cer")
    PS C:\> $binCert = $cer.GetRawCertData()
    PS C:\> $credValue = [System.Convert]::ToBase64String($binCert)
    PS C:\> New-AzADAppCredential -ApplicationId 4589cd6b-3d79-4bb4-93b8-a0b99f3bfc58 -CertValue $credValue -StartDate $cer.NotBefore -EndDate $cer.NotAfter
  description: |-
    The supplied base64 encoded public X509 certificate ("myapp.cer") is added to the existing application with application id '4589cd6b-3d79-4bb4-93b8-a0b99f3bfc58'.
  summary: ""
- title: Example 3 - Create a new application credential using piping
  code: |-
    PS C:\> $SecureStringPassword = ConvertTo-SecureString -String "password" -AsPlainText -Force
    PS C:\> Get-AzADApplication -ObjectId 1f89cf81-0146-4f4e-beae-2007d0668416 | New-AzADAppCredential -Password $SecureStringPassword
  description: |-
    Gets the application with object id '1f89cf81-0146-4f4e-beae-2007d0668416' and pipes that to the New-AzADAppCredential to create a new application credential for that application with the given password.
  summary: ""
parameters:
- type: <xref href="System.Guid" data-throw-if-not-resolved="False" />
  name: ApplicationId
  isRequired: true
  description: |+
    The application id of the application to add the credentials to.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.ActiveDirectory.PSADApplication" data-throw-if-not-resolved="False" />
  name: ApplicationObject
  isRequired: true
  description: |+
    The application object to add the credentials to.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: CertValue
  isRequired: true
  description: |+
    The value of the "asymmetric" credential type. It represents the base 64 encoded certificate.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Common.Authentication.Abstractions.Core.IAzureContextContainer" data-throw-if-not-resolved="False" />
  name: DefaultProfile
  description: |+
    The credentials, account, tenant, and subscription used for communication with azure

  defaultValue: None
  position: Named
  aliases: AzContext, AzureRmContext, AzureCredential
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: DisplayName
  isRequired: true
  description: |+
    The display name of the application.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.DateTime" data-throw-if-not-resolved="False" />
  name: EndDate
  description: |+
    The effective end date of the credential usage. The default end date value is one year from today.  For an "asymmetric" type credential, this must be set to on or before the date that the X509 certificate is valid.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ObjectId
  isRequired: true
  description: |+
    The object id of the application to add the credentials to.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Security.SecureString" data-throw-if-not-resolved="False" />
  name: Password
  isRequired: true
  description: |+
    The password to be associated with the application.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.DateTime" data-throw-if-not-resolved="False" />
  name: StartDate
  description: |+
    The effective start date of the credential usage. The default start date value is today. For an "asymmetric" type credential, this must be set to on or after the date that the X509 certificate is valid from.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Az.Resources.New-AzADAppCredential
name: New-AzADAppCredential
description: |-
  The New-AzADAppCredential cmdlet can be used to add a new credential or to roll credentials for an application.
  The application is identified by supplying either the application object id or application Id.
metadata:
  external help file: Microsoft.Azure.PowerShell.Cmdlets.Resources.dll-Help.xml
  Module Name: Az.Resources
  ms.assetid: 98836BC0-AB4F-4F24-88BE-E7DD350B71E8
  online version: https://docs.microsoft.com/en-us/powershell/module/az.resources/new-azadappcredential
  schema: 2.0.0
  content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Resources/Resources/help/New-AzADAppCredential.md
  original_content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Resources/Resources/help/New-AzADAppCredential.md
