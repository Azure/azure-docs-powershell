### YamlMime:PowershellCmdlet
summary: |-
  Sets the CORS rules for a type of Storage service.
module: Az.Storage
notes: ""
inputs:
- name: <xref href="Microsoft.Azure.Commands.Common.Authentication.Abstractions.IStorageContext" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.WindowsAzure.Commands.Storage.Model.ResourceModel.PSCorsRule" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Get-AzStorageCORSRule
  href: ./Get-AzStorageCORSRule.yml
- text: New-AzStorageContext
  href: ./New-AzStorageContext.yml
- text: Remove-AzStorageCORSRule
  href: ./Remove-AzStorageCORSRule.yml
syntaxes:
- >-
  Set-AzStorageCORSRule [-ServiceType] <StorageServiceType> -CorsRules <PSCorsRule[]> [-PassThru]

   [-Context <IStorageContext>] [-ServerTimeoutPerRequest <Int32>] [-ClientTimeoutPerRequest <Int32>]

   [-DefaultProfile <IAzureContextContainer>] [-ConcurrentTaskCount <Int32>] [<CommonParameters>]
examples:
- title: 'Example 1: Assign CORS rules to the blob service'
  code: |-
    PS C:\>$CorsRules = (@{
        AllowedHeaders=@("x-ms-blob-content-type","x-ms-blob-content-disposition");
        AllowedOrigins=@("*");
        MaxAgeInSeconds=30;
        AllowedMethods=@("Get","Connect")},
        @{
        AllowedOrigins=@("http://www.fabrikam.com","http://www.contoso.com"); 
        ExposedHeaders=@("x-ms-meta-data*","x-ms-meta-customheader"); 
        AllowedHeaders=@("x-ms-meta-target*","x-ms-meta-customheader");
        MaxAgeInSeconds=30;
        AllowedMethods=@("Put")})
    PS C:\> Set-AzStorageCORSRule -ServiceType Blob -CorsRules $CorsRules
  description: |-
    The first command assigns an array of rules to the $CorsRules variable.
    This command uses standard extends over several lines in this code block.
    The second command assigns the rules in $CorsRules to the Blob service type.
  summary: ""
- title: 'Example 2: Change properties of a CORS rule for blob service'
  code: |-
    PS C:\>$CorsRules = Get-AzStorageCORSRule -ServiceType Blob
    PS C:\> $CorsRules[0].AllowedHeaders = @("x-ms-blob-content-type", "x-ms-blob-content-disposition")
    PS C:\> $CorsRules[0].AllowedMethods = @("Get", "Connect", "Merge")
    PS C:\> Set-AzStorageCORSRule -ServiceType Blob -CorsRules $CorsRules
  description: |-
    The first command gets the current CORS rules for the Blob type by using the **Get-AzStorageCORSRule** cmdlet.
    The command stores the rules in the $CorsRules array variable.
    The second and third commands modify the first rule in $CorsRules.
    The final command assigns the rules in $CorsRules to the Blob service type.
    The revised rules overwrite the current CORS rules.
  summary: ""
parameters:
- type: <xref href="System.Nullable`1" data-throw-if-not-resolved="False" /><span>[</span><xref href="System.Int32" data-throw-if-not-resolved="False" /><span>]</span>
  name: ClientTimeoutPerRequest
  description: |+
    Specifies the client-side time-out interval, in seconds, for one service request.
    If the previous call fails in the specified interval, this cmdlet retries the request.
    If this cmdlet does not receive a successful response before the interval elapses, this cmdlet returns an error.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Nullable`1" data-throw-if-not-resolved="False" /><span>[</span><xref href="System.Int32" data-throw-if-not-resolved="False" /><span>]</span>
  name: ConcurrentTaskCount
  description: |+
    Specifies the maximum concurrent network calls.
    You can use this parameter to limit the concurrency to throttle local CPU and bandwidth usage by specifying the maximum number of concurrent network calls.
    The specified value is an absolute count and is not multiplied by the core count.
    This parameter can help reduce network connection problems in low bandwidth environments, such as 100 kilobits per second.
    The default value is 10.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Common.Authentication.Abstractions.IStorageContext" data-throw-if-not-resolved="False" />
  name: Context
  description: |+
    Specifies an Azure Storage context.
    To obtain a context, use the New-AzStorageContext cmdlet.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.WindowsAzure.Commands.Storage.Model.ResourceModel.PSCorsRule" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: CorsRules
  isRequired: true
  description: |+
    Specifies an array of CORS rules.
    You can retrieve the existing rules using the Get-AzStorageCORSRule cmdlet.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Common.Authentication.Abstractions.Core.IAzureContextContainer" data-throw-if-not-resolved="False" />
  name: DefaultProfile
  description: |+
    The credentials, account, tenant, and subscription used for communication with Azure.

  defaultValue: None
  position: Named
  aliases: AzureRmContext, AzureCredential
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: PassThru
  description: |+
    Indicates that this cmdlet returns a Boolean that reflects the success of the operation.
    By default, this cmdlet does not return a value.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Nullable`1" data-throw-if-not-resolved="False" /><span>[</span><xref href="System.Int32" data-throw-if-not-resolved="False" /><span>]</span>
  name: ServerTimeoutPerRequest
  description: |+
    Specifies the length of the time-out period for the server part of a request.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.WindowsAzure.Commands.Storage.Common.StorageServiceType" data-throw-if-not-resolved="False" />
  name: ServiceType
  isRequired: true
  description: |+
    Specifies the Azure Storage service type for which this cmdlet assigns rules.
    The acceptable values for this parameter are:
    - Blob 
    - Table 
    - Queue 
    - File

  defaultValue: None
  position: "0"
  aliases: ""
  parameterValueGroup: Blob, Table, Queue, File
uid: Az.Storage.Set-AzStorageCORSRule
name: Set-AzStorageCORSRule
description: |-
  The **Set-AzStorageCORSRule** cmdlet sets the Cross-Origin Resource Sharing (CORS) rules for a type of Azure Storage service.
  The types of storage services for this cmdlet are Blob, Table, Queue, and File.
  This cmdlet overwrites the existing rules.
  To see the current rules, use the Get-AzStorageCORSRule cmdlet.
metadata:
  external help file: Microsoft.Azure.PowerShell.Cmdlets.Storage.dll-Help.xml
  Module Name: Az.Storage
  ms.assetid: 288B7B56-B934-45AF-BF56-4EB0DD827522
  online version: https://docs.microsoft.com/en-us/powershell/module/az.storage/set-azstoragecorsrule
  schema: 2.0.0
  content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Storage/Storage.Management/help/Set-AzStorageCORSRule.md
  original_content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Storage/Storage.Management/help/Set-AzStorageCORSRule.md
