### YamlMime:PowershellCmdlet
summary: |-
  Updates the properties of a DNS zone.
module: Az.Dns
notes: |-
  You can use the *Confirm* parameter to control whether this cmdlet prompts you for confirmation.
  By default, the cmdlet prompts you for confirmation if the $ConfirmPreference Windows PowerShell variable has a value of Medium or lower.
  If you specify *Confirm* or *Confirm:$True*, this cmdlet prompts you for confirmation before it runs.
  If you specify *Confirm:$False*, the cmdlet does not prompt you for confirmation.
inputs:
- name: <xref href="System.String" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="System.Collections.Generic.List`1" data-throw-if-not-resolved="False" /><span>[</span><xref href="" data-throw-if-not-resolved="False" /><span>[</span><xref href="System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e" data-throw-if-not-resolved="False" /><span>]</span><span>]</span>
  description: ""
- name: <xref href="System.Collections.Generic.List`1" data-throw-if-not-resolved="False" /><span>[</span><xref href="" data-throw-if-not-resolved="False" /><span>[</span><xref href="Microsoft.Azure.Management.Internal.Network.Common.IResourceReference, Microsoft.Azure.PowerShell.Clients.Network, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" data-throw-if-not-resolved="False" /><span>]</span><span>]</span>
  description: ""
- name: <xref href="Microsoft.Azure.Commands.Dns.DnsZone" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Azure.Commands.Dns.DnsZone" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Get-AzDnsZone
  href: ./Get-AzDnsZone.yml
- text: New-AzDnsZone
  href: ./New-AzDnsZone.yml
- text: Remove-AzDnsZone
  href: ./Remove-AzDnsZone.yml
syntaxes:
- >-
  Set-AzDnsZone -Name <String> -ResourceGroupName <String> [-Tag <Hashtable>]

   [-RegistrationVirtualNetworkId <System.Collections.Generic.List`1[System.String]>]

   [-ResolutionVirtualNetworkId <System.Collections.Generic.List`1[System.String]>]

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Set-AzDnsZone -Name <String> -ResourceGroupName <String> [-Tag <Hashtable>]

   [-RegistrationVirtualNetwork <System.Collections.Generic.List`1[Microsoft.Azure.Management.Internal.Network.Common.IResourceReference]>]

   [-ResolutionVirtualNetwork <System.Collections.Generic.List`1[Microsoft.Azure.Management.Internal.Network.Common.IResourceReference]>]

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Set-AzDnsZone -Zone <DnsZone> [-Overwrite] [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm]

   [<CommonParameters>]
examples:
- title: 'Example 1: Update a DNS zone'
  code: |-
    PS C:\>$Zone = Get-AzDnsZone -Name "myzone.com" -ResourceGroupName "MyResourceGroup"
    PS C:\> $Zone.Tags = @(@{"Name"="Dept"; "Value"="Electrical"})
    PS C:\> Set-AzDnsZone -Zone $Zone
  description: |-
    The first command gets the zone named myzone.com from the specified resource group, and then stores
    it in the $Zone variable.
    The second command updates the tags for $Zone.
    The final command commits the change.
  summary: ""
- title: 'Example 2: Update tags for a zone'
  code: |-
    PS C:\>Set-AzDNSZone -ResourceGroupName "MyResourceGroup" -Name "myzone.com" -Tag @(@{"Name"="Dept"; "Value"="Electrical"})
  description: |-
    This command updates the tags for the zone named myzone.com without first explicitly getting the
    zone.
  summary: ""
- title: 'Example 3: Associating a private zone with a virtual network by specifying its ID'
  code: |-
    PS C:\>$vnet = Get-AzVirualNetwork -ResourceGroupName "MyResourceGroup" -Name "myvnet"
    PS C:\>Set-AzDNSZone -ResourceGroupName "MyResourceGroup" -Name "myprivatezone.com" -RegistrationVirtualNetworkId @($vnet.Id)
  description: |-
    This command associates the Private DNS zone myprivatezone.com with the virtual network myvnet as a registration network
    by specifying its ID.
  summary: ""
- title: 'Example 4: Associating a private zone with a virtual network by specifying the network object.'
  code: |-
    PS C:\>$vnet = Get-AzVirualNetwork -ResourceGroupName "MyResourceGroup" -Name "myvnet"
    PS C:\>Set-AzDNSZone -ResourceGroupName "MyResourceGroup" -Name "myprivatezone.com" -RegistrationVirtualNetwork @($vnet)
  description: |-
    This command associates the Private DNS zone myprivatezone.com with the virtual network myvnet as a registration network
    by passing the virtual network object represented by $vnet variable to the Set-AzDnsZone cmdlet.
  summary: ""
parameters:
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Common.Authentication.Abstractions.Core.IAzureContextContainer" data-throw-if-not-resolved="False" />
  name: DefaultProfile
  description: |+
    The credentials, account, tenant, and subscription used for communication with azure

  defaultValue: None
  position: Named
  aliases: AzContext, AzureRmContext, AzureCredential
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Name
  isRequired: true
  description: |+
    Specifies the name of the DNS zone to update.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Overwrite
  description: |+
    When passing a DNS zone as an object (using the Zone object or via the pipeline), it is not updated
    if it has been changed in Azure DNS since the local DnsZone object was retrieved. This provides
    protection for concurrent changes. You can suppress this behavior with the *Overwrite* parameter,
    which updates the zone regardless of concurrent changes.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Collections.Generic.List`1" data-throw-if-not-resolved="False" /><span>[</span><xref href="Microsoft.Azure.Management.Internal.Network.Common.IResourceReference" data-throw-if-not-resolved="False" /><span>]</span>
  name: RegistrationVirtualNetwork
  description: |+
    The list of virtual networks that will register virtual machine hostnames records in this DNS zone, only available for private zones.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Collections.Generic.List`1" data-throw-if-not-resolved="False" /><span>[</span><xref href="System.String" data-throw-if-not-resolved="False" /><span>]</span>
  name: RegistrationVirtualNetworkId
  description: |+
    The list of virtual network IDs that will register virtual machine hostnames records in this DNS zone, only available for private zones.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Collections.Generic.List`1" data-throw-if-not-resolved="False" /><span>[</span><xref href="Microsoft.Azure.Management.Internal.Network.Common.IResourceReference" data-throw-if-not-resolved="False" /><span>]</span>
  name: ResolutionVirtualNetwork
  description: |+
    The list of virtual networks able to resolve records in this DNS zone, only available for private zones.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Collections.Generic.List`1" data-throw-if-not-resolved="False" /><span>[</span><xref href="System.String" data-throw-if-not-resolved="False" /><span>]</span>
  name: ResolutionVirtualNetworkId
  description: |+
    The list of virtual network IDs able to resolve records in this DNS zone, only available for private zones.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ResourceGroupName
  isRequired: true
  description: |+
    Specifies the name of the resource group that contains the zone to update.
    You must also specify the ZoneName parameter.
    Alternatively, you can specify the zone using a DnsZone object with the *Zone* parameter or the pipeline.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="False" />
  name: Tag
  description: |+
    Key-value pairs in the form of a hash table. For example:
    @{key0="value0";key1=$null;key2="value2"}

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: Tags
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs. The cmdlet is not run.Shows what would happen if the cmdlet runs. The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Dns.DnsZone" data-throw-if-not-resolved="False" />
  name: Zone
  isRequired: true
  description: |+
    Specifies the DNS zone to update.
    Alternatively, you can specify the zone using the *ZoneName* and *ResourceGroupName* parameters.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
uid: Az.Dns.Set-AzDnsZone
name: Set-AzDnsZone
description: |-
  The **Set-AzDnsZone** cmdlet updates the specified DNS zone in the Azure DNS service.
  This cmdlet does not update the record sets in the zone.
  You can pass a **DnsZone** object as a parameter or by using the pipeline operator, or
  alternatively you can specify the *ZoneName* and *ResourceGroupName* parameters.
  You can use the *Confirm* parameter and $ConfirmPreference Windows PowerShell variable to control
  whether the cmdlet prompts you for confirmation.
  When passing a DNS zone as an object (using the Zone object or via the pipeline), it is not updated
  if it has been changed in Azure DNS since the local DnsZone object was retrieved. This provides
  protection for concurrent changes. You can suppress this behavior with the *Overwrite* parameter,
  which updates the zone regardless of concurrent changes.
metadata:
  external help file: Microsoft.Azure.PowerShell.Cmdlets.Dns.dll-Help.xml
  Module Name: Az.Dns
  ms.assetid: E37ADC54-A37B-41BF-BE94-9E4052C234BB
  online version: https://docs.microsoft.com/en-us/powershell/module/az.dns/set-azdnszone
  schema: 2.0.0
  content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Dns/Dns/help/Set-AzDnsZone.md
  original_content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Dns/Dns/help/Set-AzDnsZone.md
