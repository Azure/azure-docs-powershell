### YamlMime:PowershellCmdlet
summary: |-
  Creates an integration account.
module: Az.LogicApp
notes: ""
inputs:
- name: <xref href="System.String" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Azure.Management.Logic.Models.IntegrationAccount" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Get-AzIntegrationAccount
  href: ./Get-AzIntegrationAccount.yml
- text: Remove-AzIntegrationAccount
  href: ./Remove-AzIntegrationAccount.yml
- text: Set-AzIntegrationAccount
  href: ./Set-AzIntegrationAccount.yml
syntaxes:
- >-
  New-AzIntegrationAccount -ResourceGroupName <String> -Name <String> -Location <String> [-Sku <String>]

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: 'Example 1: Create an integration account'
  code: |-
    PS C:\>New-AzIntegrationAccount -ResourceGroupName "ResourceGroup11" -Name "IntegrationAccount31" -Location "brazilsouth" -Sku "Standard"
    Id          : /subscriptions/<SubscriptionId>/resourceGroups/ResourceGroup11/providers/Microsoft.Logic/integrationAccounts/IntegrationAccount31
    Name        : IntegrationAccount31
    Type        : Microsoft.Logic/integrationAccounts
    Location    : brazilsouth
    Sku         : 
    CreatedTime : 3/26/2016 4:26:07 PM
    ChangedTime : 3/26/2016 4:26:07 PM
  description: |-
    This command creates an integration account named IntegrationAccount31 in the specified resource group.
  summary: ""
parameters:
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Common.Authentication.Abstractions.Core.IAzureContextContainer" data-throw-if-not-resolved="False" />
  name: DefaultProfile
  description: |+
    The credentials, account, tenant, and subscription used for communication with azure

  defaultValue: None
  position: Named
  aliases: AzContext, AzureRmContext, AzureCredential
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Location
  isRequired: true
  description: |+
    Specifies a location for the integration account.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Name
  isRequired: true
  description: |+
    Specifies a name for the integration account.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: IntegrationAccountName, ResourceName
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ResourceGroupName
  isRequired: true
  description: |+
    Specifies the name of a resource group.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Sku
  description: |+
    Specifies a SKU name for the integration account.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: Free, Basic, Standard
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Az.LogicApp.New-AzIntegrationAccount
name: New-AzIntegrationAccount
description: |-
  The **New-AzIntegrationAccount** cmdlet creates an integration account.
  This cmdlet returns an object that represents the integration account.Specify a name, location, resource group name, and SKU name.
  Template parameter file values that you specify at the command line take precedence over template parameter values in a template parameter object.
  This module supports dynamic parameters.
  To use a dynamic parameter, type it in the command.
  To discover the names of dynamic parameters, type a hyphen (-) after the cmdlet name, and then press the Tab key repeatedly to cycle through the available parameters.
  If you omit a required template parameter, the cmdlet prompts you for the value.
metadata:
  external help file: Microsoft.Azure.PowerShell.Cmdlets.LogicApp.dll-Help.xml
  Module Name: Az.LogicApp
  ms.assetid: 5F1A4FE0-CB57-45D3-9F08-879469A61E1E
  online version: https://docs.microsoft.com/en-us/powershell/module/az.logicapp/new-azintegrationaccount
  schema: 2.0.0
  content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/LogicApp/LogicApp/help/New-AzIntegrationAccount.md
  original_content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/LogicApp/LogicApp/help/New-AzIntegrationAccount.md
