### YamlMime:PowershellCmdlet
summary: |-
  Creates a new or sets an existing activity log alert.
module: Az.Monitor
notes: ""
inputs:
- name: <xref href="System.String" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="System.Collections.Generic.List`1" data-throw-if-not-resolved="False" /><span>[</span><xref href="" data-throw-if-not-resolved="False" /><span>[</span><xref href="System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e" data-throw-if-not-resolved="False" /><span>]</span><span>]</span>
  description: ""
- name: <xref href="System.Collections.Generic.List`1" data-throw-if-not-resolved="False" /><span>[</span><xref href="" data-throw-if-not-resolved="False" /><span>[</span><xref href="Microsoft.Azure.Management.Monitor.Management.Models.ActivityLogAlertLeafCondition, Microsoft.Azure.PowerShell.Cmdlets.Monitor, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" data-throw-if-not-resolved="False" /><span>]</span><span>]</span>
  description: ""
- name: <xref href="System.Collections.Generic.List`1" data-throw-if-not-resolved="False" /><span>[</span><xref href="" data-throw-if-not-resolved="False" /><span>[</span><xref href="Microsoft.Azure.Management.Monitor.Management.Models.ActivityLogAlertActionGroup, Microsoft.Azure.PowerShell.Cmdlets.Monitor, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" data-throw-if-not-resolved="False" /><span>]</span><span>]</span>
  description: ""
- name: <xref href="System.Collections.Generic.Dictionary`2" data-throw-if-not-resolved="False" /><span>[</span><xref href="" data-throw-if-not-resolved="False" /><span>[</span><xref href="System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e" data-throw-if-not-resolved="False" /><span>]</span><span>]</span>
  description: ""
- name: <xref href="Microsoft.Azure.Commands.Insights.OutputClasses.PSActivityLogAlertResource" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Azure.Commands.Insights.OutputClasses.PSActivityLogAlertResource" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Enable-AzActivityLogAlert
  href: ./Enable-AzActivityLogAlert.yml
- text: Disable-AzActivityLogAlert
  href: ./Disable-AzActivityLogAlert.yml
- text: Get-AzActivityLogAlert
  href: ./Get-AzActivityLogAlert.yml
- text: Remove-AzActivityLogAlert
  href: ./Remove-AzActivityLogAlert.yml
- text: New-AzActionGroup
  href: ./New-AzActionGroup.yml
syntaxes:
- >-
  Set-AzActivityLogAlert -Location <String> -Name <String> -ResourceGroupName <String>

   -Scope <System.Collections.Generic.List`1[System.String]>

   -Condition <System.Collections.Generic.List`1[Microsoft.Azure.Management.Monitor.Management.Models.ActivityLogAlertLeafCondition]>

   -Action <System.Collections.Generic.List`1[Microsoft.Azure.Management.Monitor.Management.Models.ActivityLogAlertActionGroup]>

   [-DisableAlert] [-Description <String>]

   [-Tag <System.Collections.Generic.Dictionary`2[System.String,System.String]>]

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Set-AzActivityLogAlert [-Location <String>] [-Scope <System.Collections.Generic.List`1[System.String]>]

   [-Condition <System.Collections.Generic.List`1[Microsoft.Azure.Management.Monitor.Management.Models.ActivityLogAlertLeafCondition]>]

   [-Action <System.Collections.Generic.List`1[Microsoft.Azure.Management.Monitor.Management.Models.ActivityLogAlertActionGroup]>]

   [-DisableAlert] [-Description <String>]

   [-Tag <System.Collections.Generic.Dictionary`2[System.String,System.String]>] -ResourceId <String>

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Set-AzActivityLogAlert [-Scope <System.Collections.Generic.List`1[System.String]>]

   [-Condition <System.Collections.Generic.List`1[Microsoft.Azure.Management.Monitor.Management.Models.ActivityLogAlertLeafCondition]>]

   [-Action <System.Collections.Generic.List`1[Microsoft.Azure.Management.Monitor.Management.Models.ActivityLogAlertActionGroup]>]

   [-Description <String>] [-Tag <System.Collections.Generic.Dictionary`2[System.String,System.String]>]

   -InputObject <PSActivityLogAlertResource> [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm]

   [<CommonParameters>]
examples:
- title: 'Example 1: Create an Activity Log Alert'
  code: |-
    PS C:\>$location = 'Global'
    PS C:\>$alertName = 'myAlert'
    PS C:\>$resourceGroupName = 'theResourceGroupName'
    PS C:\>$condition1 = New-AzActivityLogAlertCondition -Field 'field1' -Equals 'equals1'
    PS C:\>$condition2 = New-AzActivityLogAlertCondition -Field 'field2' -Equals 'equals2'
    PS C:\>$dict = New-Object "System.Collections.Generic.Dictionary``2[System.String,System.String]"
    PS C:\>$dict.Add('key1', 'value1')
    PS C:\>$actionGrp1 = New-AzActionGroup -ActionGroupId 'actiongr1' -WebhookProperties $dict
    PS C:\>Set-AzActivityLogAlert -Location $location -Name $alertName -ResourceGroupName $resourceGroupName -Scope 'scope1','scope2' -Action $actionGrp1 -Condition $condition1, $condition2
  description: |-
    The first four commands create leaf condition and action group.
    The final command creates an Activity Log Alert using the condition and the action group.
  summary: ""
- title: 'Example 2: Create an Activity Log Alert disabled'
  code: |-
    PS C:\>$location = 'Global'
    PS C:\>$alertName = 'myAlert'
    PS C:\>$resourceGroupName = 'theResourceGroupName'
    PS C:\>$condition1 = New-AzActivityLogAlertCondition -Field 'field1' -Equals 'equals1'
    PS C:\>$condition2 = New-AzActivityLogAlertCondition -Field 'field2' -Equals 'equals2'
    PS C:\>$dict = New-Object "System.Collections.Generic.Dictionary``2[System.String,System.String]"
    PS C:\>$dict.Add('key1', 'value1')
    PS C:\>$actionGrp1 = New-AzActionGroup -ActionGroupId 'actiongr1' -WebhookProperties $dict
    PS C:\>Set-AzActivityLogAlert -Location $location -Name $alertName -ResourceGroupName $resourceGroupName -Scope 'scope1','scope2' -Action $actionGrp1 -Condition $condition1, $condition2 -DisableAlert
  description: |-
    The first four commands create leaf condition and action group.
    The final command creates an Activity Log Alert using the condition and the action group, but it creates the alert disabled.
  summary: ""
- title: 'Example 3: Set an activity log alert based using a value from the pipe or the InputObject parameter'
  code: |-
    PS C:\>Get-AzActivityLogAlert -Name $alertName -ResourceGroupName $resourceGroupName | Set-AzActivityLogAlert
    PS C:\>$alert = Get-AzActivityLogAlert -Name $alertName -ResourceGroupName $resourceGroupName
    PS C:\>$alert.Description = 'Changing the description'
    PS C:\>$alert.Enabled = $false
    PS C:\>Set-AzActivityLogAlert -InputObject $alert
  description: |-
    The first command is similar to a nop, it sets the alert with the same values it already contained
    The rest of the commands retrieve the alert rule, change the description and disable it, then use the InputObject parameter to persist those changes
  summary: ""
- title: 'Example 4: Set an activity log alert based using the ResourceId value from the pipe'
  code: |-
    PS C:\>Find-AzResource -ResourceGroupEquals "myResourceGroup" -ResourceNameEquals "myLogAlert" | Set-AzActivityLogAlert -DisableAlert
  description: |-
    If the given log alert rule exists this command disables it.
  summary: ""
parameters:
- type: <xref href="System.Collections.Generic.List`1" data-throw-if-not-resolved="False" /><span>[</span><xref href="Microsoft.Azure.Management.Monitor.Management.Models.ActivityLogAlertActionGroup" data-throw-if-not-resolved="False" /><span>]</span>
  name: Action
  isRequired: true
  description: |+
    The list of action groups for the activity log alert.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Collections.Generic.List`1" data-throw-if-not-resolved="False" /><span>[</span><xref href="Microsoft.Azure.Management.Monitor.Management.Models.ActivityLogAlertLeafCondition" data-throw-if-not-resolved="False" /><span>]</span>
  name: Condition
  isRequired: true
  description: |+
    The list of conditions for the activity log alert.
    **NOTE**: In the list of conditions there must be at least one with the Field equal to "Category". The backend responds with 400 (BadRequest) if this condition is not present.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: None
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Common.Authentication.Abstractions.Core.IAzureContextContainer" data-throw-if-not-resolved="False" />
  name: DefaultProfile
  description: |+
    The credentials, account, tenant, and subscription used for communication with azure

  defaultValue: None
  position: Named
  aliases: AzContext, AzureRmContext, AzureCredential
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Description
  description: |+
    The description of the alert resource.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: DisableAlert
  description: |+
    Allows the user to create a disabled the activity log alert. If not given, the alerts are created enabled.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Insights.OutputClasses.PSActivityLogAlertResource" data-throw-if-not-resolved="False" />
  name: InputObject
  isRequired: true
  description: |+
    Sets the InputObject tags property of the call to extract the required name, and resource group name properties.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Location
  isRequired: true
  description: |+
    The location where the activity log alert will exist.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Name
  isRequired: true
  description: |+
    The name of the activity log alert.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ResourceGroupName
  isRequired: true
  description: |+
    The name of the resource group where the alert resource is going to exist.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ResourceId
  isRequired: true
  description: |+
    Sets the ResourceId tags property of the call to extract the required name, resource group name properties.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Collections.Generic.List`1" data-throw-if-not-resolved="False" /><span>[</span><xref href="System.String" data-throw-if-not-resolved="False" /><span>]</span>
  name: Scope
  isRequired: true
  description: |+
    The list of scopes for the activity log alert.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Collections.Generic.Dictionary`2" data-throw-if-not-resolved="False" /><span>[</span><xref href="System.String,System.String" data-throw-if-not-resolved="False" /><span>]</span>
  name: Tag
  description: |+
    Sets the tags property of the activity log alert resource.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs. The cmdlet is not run.

  defaultValue: None
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Az.Monitor.Set-AzActivityLogAlert
name: Set-AzActivityLogAlert
description: |-
  The **Set-AzActivityLogAlert** cmdlet creates a new or sets an existing activity log alert.
  For tags, conditions, and actions the objects must be created in advance and passed as parameters in this call as a comma separated (see the example below).
  This cmdlet implements the ShouldProcess pattern, i.e. it might request confirmation from the user before actually creating/modifying the resource.
  **NOTE**: This cmdlet and its related ones replaces the deprecated (November 2017) **Add-AzLogAlertRule**.
metadata:
  external help file: Microsoft.Azure.PowerShell.Cmdlets.Monitor.dll-Help.xml
  Module Name: Az.Monitor
  ms.assetid: 7436F31F-9DCB-4365-BA6D-41BDB5D7FCB6
  online version: https://docs.microsoft.com/en-us/powershell/module/az.monitor/set-azactivitylogalert
  schema: 2.0.0
  content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Monitor/Monitor/help/Set-AzActivityLogAlert.md
  original_content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Monitor/Monitor/help/Set-AzActivityLogAlert.md
