### YamlMime:PowershellCmdlet
summary: |-
  Gets the auditing settings of an Azure SQL database.
module: Az.Sql
notes: ""
inputs:
- name: <xref href="System.String" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="Microsoft.Azure.Commands.Sql.Database.Model.AzureSqlDatabaseModel" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Azure.Commands.Sql.Auditing.Model.DatabaseBlobAuditingSettingsModel" data-throw-if-not-resolved="False" />
  description: ""
syntaxes:
- >-
  Get-AzSqlDatabaseAuditing [-ResourceGroupName] <String> [-ServerName] <String> [-DatabaseName] <String>

   [-BlobStorage] [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Get-AzSqlDatabaseAuditing [-ResourceGroupName] <String> [-ServerName] <String> [-DatabaseName] <String>

   [-EventHub] [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Get-AzSqlDatabaseAuditing [-ResourceGroupName] <String> [-ServerName] <String> [-DatabaseName] <String>

   [-LogAnalytics] [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Get-AzSqlDatabaseAuditing -InputObject <AzureSqlDatabaseModel> [-BlobStorage]

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Get-AzSqlDatabaseAuditing -InputObject <AzureSqlDatabaseModel> [-EventHub]

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Get-AzSqlDatabaseAuditing -InputObject <AzureSqlDatabaseModel> [-LogAnalytics]

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: 'Example 1: Get the blob storage auditing settings of an Azure SQL database'
  code: |-
    PS C:\>Get-AzSqlDatabaseAuditing -ResourceGroupName "ResourceGroup01" -ServerName "Server01" -DatabaseName "Database01"
    DatabaseName                 : database01
    AuditAction                  : {}
    AuditActionGroup             : {SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP, FAILED_DATABASE_AUTHENTICATION_GROUP,
                                    BATCH_COMPLETED_GROUP, ...}
    ResourceGroupName            : resourcegroup01
    ServerName                   : server01
    AuditState                   : Enabled
    StorageAccountName           : mystorage
    StorageKeyType               : Primary
    RetentionInDays              : 0
    StorageAccountSubscriptionId : 7fe3301d-31d3-4668-af5e-211a890ba6e3
    PredicateExpression          : statement <> 'select 1'
  description: ""
  summary: ""
- title: 'Example 2: Get the blob storage auditing settings of an Azure SQL database'
  code: |-
    PS C:\>Get-AzSqlDatabaseAuditing -ResourceGroupName "ResourceGroup01" -ServerName "Server01" -DatabaseName "Database01" -BlobStorage
    DatabaseName                 : database01
    AuditAction                  : {}
    AuditActionGroup             : {SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP, FAILED_DATABASE_AUTHENTICATION_GROUP,
                                    BATCH_COMPLETED_GROUP, ...}
    ResourceGroupName            : resourcegroup01
    ServerName                   : server01
    AuditState                   : Enabled
    StorageAccountName           : mystorage
    StorageKeyType               : Primary
    RetentionInDays              : 0
    StorageAccountSubscriptionId : 7fe3301d-31d3-4668-af5e-211a890ba6e3
    PredicateExpression          : statement <> 'select 1'
  description: ""
  summary: ""
- title: 'Example 3: Get, through pipeline, the blob storage auditing settings of an Azure SQL database'
  code: |-
    PS C:\> Get-AzSqlDatabase -ResourceGroupName "ResourceGroup01" -ServerName "Server01" -DatabaseName "Database01" | Get-AzSqlDatabaseAuditing
    DatabaseName                 : database01
    AuditAction                  : {}
    AuditActionGroup             : {SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP, FAILED_DATABASE_AUTHENTICATION_GROUP,
                                    BATCH_COMPLETED_GROUP, ...}
    ResourceGroupName            : resourcegroup01
    ServerName                   : server01
    AuditState                   : Enabled
    StorageAccountName           : mystorage
    StorageKeyType               : Primary
    RetentionInDays              : 0
    StorageAccountSubscriptionId : 7fe3301d-31d3-4668-af5e-211a890ba6e3
    PredicateExpression          : statement <> 'select 1'
  description: ""
  summary: ""
- title: 'Example 4: Get the event hub auditing settings of an Azure SQL database'
  code: |-
    PS C:\>Get-AzSqlDatabaseAuditing -ResourceGroupName "ResourceGroup01" -ServerName "Server01" -DatabaseName "Database01" -EventHub
    DatabaseName                        : database01
    AuditAction                         : {}
    AuditActionGroup                    : {SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP, FAILED_DATABASE_AUTHENTICATION_GROUP,
                                           BATCH_COMPLETED_GROUP, ...}
    ResourceGroupName                   : resourcegroup01
    ServerName                          : server01
    AuditState                          : Enabled
    EventHubName                        : eventHubName
    EventHubAuthorizationRuleResourceId : EventHubAuthorizationRuleResourceId
    PredicateExpression                 : statement <> 'select 1'
  description: ""
  summary: ""
- title: 'Example 5: Get, through pipeline, the event hub auditing settings of an Azure SQL database'
  code: |-
    PS C:\>$database = Get-AzSqlDatabaseAuditing -ResourceGroupName "ResourceGroup01" -ServerName "Server01" -DatabaseName "Database01"
    PS C:\>$database | Get-AzSqlDatabaseAuditing -EventHub
    DatabaseName                        : database01
    AuditAction                         : {}
    AuditActionGroup                    : {SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP, FAILED_DATABASE_AUTHENTICATION_GROUP,
                                           BATCH_COMPLETED_GROUP, ...}
    ResourceGroupName                   : resourcegroup01
    ServerName                          : server01
    AuditState                          : Enabled
    EventHubName                        : eventHubName
    EventHubAuthorizationRuleResourceId : EventHubAuthorizationRuleResourceId
    PredicateExpression                 : statement <> 'select 1'
  description: ""
  summary: ""
- title: 'Example 6: Get the log analytics auditing settings of an Azure SQL database'
  code: |-
    PS C:\>Get-AzSqlDatabaseAuditing -ResourceGroupName "ResourceGroup01" -ServerName "Server01" -DatabaseName "Database01" -LogAnalytics
    DatabaseName        : database01
    AuditAction         : {}
    AuditActionGroup    : {SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP, FAILED_DATABASE_AUTHENTICATION_GROUP,
                           BATCH_COMPLETED_GROUP, ...}
    ResourceGroupName   : resourcegroup01
    ServerName          : server01
    AuditState          : Enabled
    PredicateExpression : statement <> 'select 1'
    WorkspaceResourceId : "/subscriptions/4b9e8510-67ab-4e9a-95a9-e2f1e570ea9c/resourceGroups/insights-integration/providers/Microsoft.OperationalInsights/workspaces/viruela2"
  description: ""
  summary: ""
parameters:
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: BlobStorage
  description: |+
    Specifies that audit logs destination is blob storage

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: None
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: DatabaseName
  isRequired: true
  description: |+
    SQL Database name.

  defaultValue: None
  pipelineInput: true
  position: "2"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Common.Authentication.Abstractions.Core.IAzureContextContainer" data-throw-if-not-resolved="False" />
  name: DefaultProfile
  description: |+
    The credentials, account, tenant, and subscription used for communication with Azure.

  defaultValue: None
  position: Named
  aliases: AzContext, AzureRmContext, AzureCredential
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: EventHub
  isRequired: true
  description: |+
    Specifies that audit logs destination is event hub

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Sql.Database.Model.AzureSqlDatabaseModel" data-throw-if-not-resolved="False" />
  name: InputObject
  isRequired: true
  description: |+
    The database object to manage its audit policy.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: LogAnalytics
  isRequired: true
  description: |+
    Specifies that audit logs destination is log analytics

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ResourceGroupName
  isRequired: true
  description: |+
    The name of the resource group.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ServerName
  isRequired: true
  description: |+
    SQL server name.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs. The cmdlet is not run.

  defaultValue: None
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Az.Sql.Get-AzSqlDatabaseAuditing
name: Get-AzSqlDatabaseAuditing
description: |-
  The **Get-AzSqlDatabaseAuditing** cmdlet gets the auditing settings of an Azure SQL database.
  To use the cmdlet, use the *ResourceGroupName*, *ServerName*, and *DatabaseName* parameters to identify the database.
  The audit logs destination is determined by specifying one of the following switch parameters: BlobStorage, LogAnalytics or EventHub (if none is specified, the default is BlobStorage).
metadata:
  external help file: Microsoft.Azure.PowerShell.Cmdlets.Sql.dll-Help.xml
  Module Name: Az.Sql
  ms.assetid: 14814BF3-51AF-4E51-A8A6-661825BD88D1
  online version: https://docs.microsoft.com/en-us/powershell/module/az.sql/get-azsqldatabaseauditing
  schema: 2.0.0
  content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Sql/Sql/help/Get-AzSqlDatabaseAuditing.md
  original_content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Sql/Sql/help/Get-AzSqlDatabaseAuditing.md
