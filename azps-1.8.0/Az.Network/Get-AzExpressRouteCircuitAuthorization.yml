### YamlMime:PowershellCmdlet
summary: |-
  Gets information about ExpressRoute circuit authorizations.
module: Az.Network
notes: ""
inputs:
- name: <xref href="Microsoft.Azure.Commands.Network.Models.PSExpressRouteCircuit" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Azure.Commands.Network.Models.PSExpressRouteCircuitAuthorization" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Add-AzExpressRouteCircuitAuthorization
  href: ./Add-AzExpressRouteCircuitAuthorization.yml
- text: Get-AzExpressRouteCircuit
  href: ./Get-AzExpressRouteCircuit.yml
- text: New-AzExpressRouteCircuitAuthorization
  href: ./New-AzExpressRouteCircuitAuthorization.yml
- text: Remove-AzExpressRouteCircuitAuthorization
  href: ./Remove-AzExpressRouteCircuitAuthorization.yml
syntaxes:
- >-
  Get-AzExpressRouteCircuitAuthorization [-Name <String>] -ExpressRouteCircuit <PSExpressRouteCircuit>

   [-DefaultProfile <IAzureContextContainer>] [<CommonParameters>]
examples:
- title: 'Example 1: Get all ExpressRoute authorizations'
  code: |-
    $Circuit = Get-AzExpressRouteCircuit -Name "ContosoCircuit" -ResourceGroupName "ContosoResourceGroup"
    Get-AzExpressRouteCircuitAuthorization -Circuit $Circuit
  description: |-
    These commands return information about all the ExpressRoute authorizations associated with an
    ExpressRoute circuit. The first command uses the **Get-AzExpressRouteCircuit** cmdlet to
    create an object reference a circuit named ContosoCircuit; that object reference is stored in the
    variable $Circuit. The second command then uses that object reference and the
    **Get-AzExpressRouteCircuitAuthorization** cmdlet to return information about the
    authorizations associated with ContosoCircuit.
  summary: ""
- title: 'Example 2: Get all ExpressRoute authorizations using the Where-Object cmdlet'
  code: |-
    $Circuit = Get-AzExpressRouteCircuit -Name "ContosoCircuit" -ResourceGroupName "ContosoResourceGroup"
     Get-AzExpressRouteCircuitAuthorization -Circuit $Circuit | Where-Object {$_.AuthorizationUseStatus -eq "Available"}
  description: |-
    These commands represent a variation on the commands used in Example 1. In this case, however,
    information is returned only for those authorizations that are available for use (that is, for
    authorizations that have not been assigned to a virtual network). To do this, the circuit
    authorization information is returned in command 2 and is piped to the **Where-Object** cmdlet.
    **Where-Object** then picks out only those authorizations where the *AuthorizationUseStatus*
    property is set to Available. To list only those authorizations that are not available, use this
    syntax for the Where clause:
    `{$_.AuthorizationUseStatus -ne "Available"}`
  summary: ""
parameters:
- type: <xref href="Microsoft.Azure.Commands.Common.Authentication.Abstractions.Core.IAzureContextContainer" data-throw-if-not-resolved="False" />
  name: DefaultProfile
  description: |+
    The credentials, account, tenant, and subscription used for communication with azure.

  defaultValue: None
  position: Named
  aliases: AzContext, AzureRmContext, AzureCredential
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Network.Models.PSExpressRouteCircuit" data-throw-if-not-resolved="False" />
  name: ExpressRouteCircuit
  isRequired: true
  description: |+
    Specifies the ExpressRoute circuit authorization.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Name
  description: |+
    Specifies the name of the ExpressRoute circuit authorization that this cmdlet gets.
    -Name "ContosoCircuitAuthorization"

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
uid: Az.Network.Get-AzExpressRouteCircuitAuthorization
name: Get-AzExpressRouteCircuitAuthorization
description: |-
  The **Get-AzExpressRouteCircuitAuthorization** cmdlet gets information about the
  authorizations assigned to an ExpressRoute circuit. ExpressRoute circuits connect your on-premises
  network to the Microsoft cloud by using a connectivity provider instead of the public Internet. The
  owner of an ExpressRoute circuit can create as many as 10 authorizations for each circuit; these
  authorizations generate an authorization key that can be used by a virtual network owner to connect
  his or her network to the circuit (one authorization per virtual network). Authorization keys, as
  well as other information about the authorization, can be viewed at any time by running
  **Get-AzExpressRouteCircuitAuthorization**.
metadata:
  external help file: Microsoft.Azure.PowerShell.Cmdlets.Network.dll-Help.xml
  Module Name: Az.Network
  ms.assetid: 3D80F94B-AF9D-40C2-BE7E-2F32E5E926D2
  online version: https://docs.microsoft.com/en-us/powershell/module/az.network/get-azexpressroutecircuitauthorization
  schema: 2.0.0
  content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Network/Network/help/Get-AzExpressRouteCircuitAuthorization.md
  original_content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Network/Network/help/Get-AzExpressRouteCircuitAuthorization.md
