### YamlMime:PowershellCmdlet
summary: |-
  Creates a new packet capture filter object.
module: Az.Network
notes: |-
  Keywords: azure, azurerm, arm, resource, management, manager, network, networking, watcher, packet, capture, traffic, filter
inputs:
- name: <xref href="System.String" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Azure.Commands.Network.Models.PSPacketCaptureFilter" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: New-AzNetworkWatcher
  href: ./New-AzNetworkWatcher.yml
- text: Get-AzNetworkWatcher
  href: ./Get-AzNetworkWatcher.yml
- text: Remove-AzNetworkWatcher
  href: ./Remove-AzNetworkWatcher.yml
- text: Get-AzNetworkWatcherNextHop
  href: ./Get-AzNetworkWatcherNextHop.yml
- text: Get-AzNetworkWatcherSecurityGroupView
  href: ./Get-AzNetworkWatcherSecurityGroupView.yml
- text: Get-AzNetworkWatcherTopology
  href: ./Get-AzNetworkWatcherTopology.yml
- text: Start-AzNetworkWatcherResourceTroubleshooting
  href: ./Start-AzNetworkWatcherResourceTroubleshooting.yml
- text: New-AzNetworkWatcherPacketCapture
  href: ./New-AzNetworkWatcherPacketCapture.yml
- text: New-AzPacketCaptureFilterConfig
  href: ./New-AzPacketCaptureFilterConfig.yml
- text: Get-AzNetworkWatcherPacketCapture
  href: ./Get-AzNetworkWatcherPacketCapture.yml
- text: Remove-AzNetworkWatcherPacketCapture
  href: ./Remove-AzNetworkWatcherPacketCapture.yml
- text: Stop-AzNetworkWatcherPacketCapture
  href: ./Stop-AzNetworkWatcherPacketCapture.yml
- text: New-AzNetworkWatcherProtocolConfiguration
  href: ./New-AzNetworkWatcherProtocolConfiguration.yml
- text: Test-AzNetworkWatcherIPFlow
  href: ./Test-AzNetworkWatcherIPFlow.yml
- text: Test-AzNetworkWatcherConnectivity
  href: ./Test-AzNetworkWatcherConnectivity.yml
- text: Stop-AzNetworkWatcherConnectionMonitor
  href: ./Stop-AzNetworkWatcherConnectionMonitor.yml
- text: Start-AzNetworkWatcherConnectionMonitor
  href: ./Start-AzNetworkWatcherConnectionMonitor.yml
- text: Set-AzNetworkWatcherConnectionMonitor
  href: ./Set-AzNetworkWatcherConnectionMonitor.yml
- text: Set-AzNetworkWatcherConfigFlowLog
  href: ./Set-AzNetworkWatcherConfigFlowLog.yml
- text: Remove-AzNetworkWatcherConnectionMonitor
  href: ./Remove-AzNetworkWatcherConnectionMonitor.yml
- text: New-AzNetworkWatcherConnectionMonitor
  href: ./New-AzNetworkWatcherConnectionMonitor.yml
- text: Get-AzNetworkWatcherTroubleshootingResult
  href: ./Get-AzNetworkWatcherTroubleshootingResult.yml
- text: Get-AzNetworkWatcherReachabilityReport
  href: ./Get-AzNetworkWatcherReachabilityReport.yml
- text: Get-AzNetworkWatcherReachabilityProvidersList
  href: ./Get-AzNetworkWatcherReachabilityProvidersList.yml
- text: Get-AzNetworkWatcherFlowLogStatus
  href: ./Get-AzNetworkWatcherFlowLogStatus.yml
- text: Get-AzNetworkWatcherConnectionMonitorReport
  href: ./Get-AzNetworkWatcherConnectionMonitorReport.yml
- text: Get-AzNetworkWatcherConnectionMonitor
  href: ./Get-AzNetworkWatcherConnectionMonitor.yml
syntaxes:
- >-
  New-AzPacketCaptureFilterConfig [-Protocol <String>] [-RemoteIPAddress <String>] [-LocalIPAddress <String>]

   [-LocalPort <String>] [-RemotePort <String>] [-DefaultProfile <IAzureContextContainer>] [<CommonParameters>]
examples:
- title: 'Example 1: Create a Packet Capture with multiple filters'
  code: |-
    $nw = Get-AzResource | Where {$_.ResourceType -eq "Microsoft.Network/networkWatchers" -and $_.Location -eq "WestCentralUS" } 
    $networkWatcher = Get-AzNetworkWatcher -Name $nw.Name -ResourceGroupName $nw.ResourceGroupName 

    $storageAccount = Get-AzStorageAccount -ResourceGroupName contosoResourceGroup -Name contosostorage123

    $filter1 = New-AzPacketCaptureFilterConfig -Protocol TCP -RemoteIPAddress "1.1.1.1-255.255.255" -LocalIPAddress "10.0.0.3" -LocalPort "1-65535" -RemotePort "20;80;443"
    $filter2 = New-AzPacketCaptureFilterConfig -Protocol UDP 
    New-AzNetworkWatcherPacketCapture -NetworkWatcher $networkWatcher -TargetVirtualMachineId $vm.Id -PacketCaptureName "PacketCaptureTest" -StorageAccountId $storageAccount.id -TimeLimitInSeconds 60 -Filters $filter1, $filter2
  description: |-
    In this example we create a packet capture named "PacketCaptureTest" with multiple filters and a time limit. Once the session is complete, it will be saved to the specified storage account. 
    Note: The Azure Network Watcher extension must be installed on the target virtual machine to create packet captures.
  summary: ""
parameters:
- type: <xref href="Microsoft.Azure.Commands.Common.Authentication.Abstractions.Core.IAzureContextContainer" data-throw-if-not-resolved="False" />
  name: DefaultProfile
  description: |+
    The credentials, account, tenant, and subscription used for communication with azure.

  defaultValue: None
  position: Named
  aliases: AzContext, AzureRmContext, AzureCredential
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: LocalIPAddress
  description: |+
    Specifies the Local IP Address to filter on.
    Example inputs:
    "127.0.0.1" for single address entry.
    "127.0.0.1-127.0.0.255" for range.
    "127.0.0.1;127.0.0.5;" for multiple entries.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: LocalPort
  description: |+
    Specifies the Local IP Address to filter on.
    Example inputs:
    "127.0.0.1" for single address entry.
    "127.0.0.1-127.0.0.255" for range.
    "127.0.0.1;127.0.0.5;" for multiple entries.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Protocol
  description: |+
    Specifies the Procotol to filter on. Acceptable values "TCP","UDP","Any"

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: RemoteIPAddress
  description: |+
    Specifies the remote IP address to filter on.
    Example inputs:
    "127.0.0.1" for single address entry.
    "127.0.0.1-127.0.0.255" for range.
    "127.0.0.1;127.0.0.5;" for multiple entries.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: RemotePort
  description: |+
    Specifies the Remote Port to filter on.
    Remote port
    Example inputs:
    "80" for single port entry.
    "80-85" for range.
    "80;443;" for multiple entries.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
uid: Az.Network.New-AzPacketCaptureFilterConfig
name: New-AzPacketCaptureFilterConfig
description: |-
  The New-AzPacketCaptureFilterConfig cmdlet creates a new packet capture filter object. 
  This object is used to restrict the type of packets that are captured during a packet capture session using the specified criteria. 
  The New-AzNetworkWatcherPacketCapture cmdlet can accept multiple filter objects to enable composable capture sessions.
metadata:
  external help file: Microsoft.Azure.PowerShell.Cmdlets.Network.dll-Help.xml
  Module Name: Az.Network
  online version: https://docs.microsoft.com/en-us/powershell/module/az.network/new-azpacketcapturefilterconfig
  schema: 2.0.0
  content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Network/Network/help/New-AzPacketCaptureFilterConfig.md
  original_content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Network/Network/help/New-AzPacketCaptureFilterConfig.md
