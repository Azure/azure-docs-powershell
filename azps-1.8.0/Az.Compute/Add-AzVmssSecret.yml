### YamlMime:PowershellCmdlet
summary: |-
  Adds a secret to a VMSS.
module: Az.Compute
notes: ""
inputs:
- name: <xref href="Microsoft.Azure.Commands.Compute.Automation.Models.PSVirtualMachineScaleSet" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="System.String" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="Microsoft.Azure.Management.Compute.Models.VaultCertificate" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  description: ""
outputs:
- name: <xref href="Microsoft.Azure.Commands.Compute.Automation.Models.PSVirtualMachineScaleSet" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: New-AzVmssVaultCertificateConfig
  href: ./New-AzVmssVaultCertificateConfig.yml
- text: New-AzVmssConfig
  href: ./New-AzVmssConfig.yml
syntaxes:
- >-
  Add-AzVmssSecret [-VirtualMachineScaleSet] <PSVirtualMachineScaleSet> [[-SourceVaultId] <String>]

   [[-VaultCertificate] <VaultCertificate[]>] [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm]

   [<CommonParameters>]
examples:
- title: 'Example 1: Add a secret to the VMSS'
  code: |-
    PS C:\> $Vault = Get-AzKeyVault -VaultName "ContosoVault"
    PS C:\> $CertConfig = New-AzVmssVaultCertificateConfig -CertificateUrl "http://keyVaultName.vault.contoso.net/secrets/secretName/secretVersion" -CertificateStore "Certificates"
    PS C:\> $VMSS = New-AzVmssConfig
    PS C:\> Add-AzVmssSecret -VirtualMachineScaleSet $VMSS -SourceVaultId $Vault.ResourceId -VaultCertificate $CertConfig
  description: |-
    This example adds a secret to the VMSS.
    The first command uses the Get-AzKeyVault cmdlet to get a vault secret from the vault named ContosoVault and stores the result in the variable named $Vault.
    The second command uses the **New-AzVmssVaultCertificateConfig** cmdlet to create a Key Vault certificate configuration using the specified certificate URL from the certificate store named Certificates and stores the results in the variable named $CertConfig.
    The third command uses the **New-AzVmssConfig** cmdlet to create a VMSS configuration object and stores the result in the variable named $VMSS.
    The fourth command adds a secret to the VMSS using the vault secret using the key resource ID and the vault certificate stored in the $Vault and $CertConfig variables.
  summary: ""
parameters:
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: None
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Common.Authentication.Abstractions.Core.IAzureContextContainer" data-throw-if-not-resolved="False" />
  name: DefaultProfile
  description: |+
    The credentials, account, tenant, and subscription used for communication with azure.

  defaultValue: None
  position: Named
  aliases: AzContext, AzureRmContext, AzureCredential
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: SourceVaultId
  description: |+
    Specifies the resource ID of the Key Vault that contains the certificates that you can add to the virtual machine.
    This value also acts as the key for adding multiple certificates.
    This means that you can use the same value for the *SourceVaultId* parameter when you add multiple certificates from the same Key Vault.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Management.Compute.Models.VaultCertificate" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: VaultCertificate
  description: |+
    Specifies the Vault **Certificate** object that contains the certificate URL and certificate name.
    You can use the [New-AzVmssVaultCertificateConfig](./New-AzVmssVaultCertificateConfig.yml) cmdlet to create this object.

  defaultValue: None
  pipelineInput: true
  position: "2"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Compute.Automation.Models.PSVirtualMachineScaleSet" data-throw-if-not-resolved="False" />
  name: VirtualMachineScaleSet
  isRequired: true
  description: |+
    Specifies the VMSS object.
    You can use the [New-AzVmssConfig](./New-AzVmssConfig.yml) cmdlet to create this object.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs. The cmdlet is not run.

  defaultValue: None
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Az.Compute.Add-AzVmssSecret
name: Add-AzVmssSecret
description: |-
  The **Add-AzVmssSecret** cmdlet adds a secret to the Virtual Machine Scale Set (VMSS).
  The secret must be stored in an Azure Key Vault.
  For more information relating to Key Vault, see [What is Azure Key Vault?](https://azure.microsoft.com/en-us/documentation/articles/key-vault-whatis/) (https://azure.microsoft.com/en-us/documentation/articles/key-vault-whatis/).
  For more information about the cmdlets, see [Azure Key Vault Cmdlets](/powershell/module/az.keyvault) or the [Set-AzKeyVaultSecret](/powershell/module/az.keyvault/set-azkeyvaultsecret) cmdlet.
metadata:
  external help file: Microsoft.Azure.PowerShell.Cmdlets.Compute.dll-Help.xml
  Module Name: Az.Compute
  ms.assetid: 656BE930-E778-40B0-8A75-BFE52DE386CE
  online version: https://docs.microsoft.com/en-us/powershell/module/az.compute/add-azvmsssecret
  schema: 2.0.0
  content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Compute/Compute/help/Add-AzVmssSecret.md
  original_content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Compute/Compute/help/Add-AzVmssSecret.md
