### YamlMime:PowershellCmdlet
summary: |-
  Sets the VMSS rolling upgrade policy properties.
module: Az.Compute
notes: ""
inputs:
- name: <xref href="Microsoft.Azure.Commands.Compute.Automation.Models.PSVirtualMachineScaleSet" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="System.Int32" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="System.String" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Azure.Commands.Compute.Automation.Models.PSVirtualMachineScaleSet" data-throw-if-not-resolved="False" />
  description: ""
syntaxes:
- >-
  Set-AzVmssRollingUpgradePolicy [-VirtualMachineScaleSet] <PSVirtualMachineScaleSet>

   [[-MaxBatchInstancePercent] <Int32>] [[-MaxUnhealthyInstancePercent] <Int32>]

   [[-MaxUnhealthyUpgradedInstancePercent] <Int32>] [-PauseTimeBetweenBatches <String>]

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: Example 1
  code: |-
    PS C:\> Set-AzVmssRollingUpgradePolicy -VirtualMachineScaleSet $vmss -VirtualMachineScaleSet $vmss -MaxBatchInstancePercent 40 -MaxUnhealthyInstancePercent 35 -MaxUnhealthyUpgradedInstancePercent 30 -PauseTimeBetweenBatches "PT30S"
  description: |-
    This command sets 40 percent for MaxBatchInstance, 35 percent for MaxUnhealthyInstance, 30 percent for MaxUnhealthyUpgradedInstance and 30 second pause time between batches for VMSS local object $vmss.
  summary: ""
parameters:
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: None
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Common.Authentication.Abstractions.Core.IAzureContextContainer" data-throw-if-not-resolved="False" />
  name: DefaultProfile
  description: |+
    The credentials, account, tenant, and subscription used for communication with azure.

  defaultValue: None
  position: Named
  aliases: AzContext, AzureRmContext, AzureCredential
  parameterValueGroup: ""
- type: <xref href="System.Int32" data-throw-if-not-resolved="False" />
  name: MaxBatchInstancePercent
  description: |+
    The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch.
    As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability.
    If the value is not specified, it is set to 20.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Int32" data-throw-if-not-resolved="False" />
  name: MaxUnhealthyInstancePercent
  description: |+
    The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts.
    This constraint will be checked prior to starting any batch.
    If the value is not specified, it is set to 20.

  defaultValue: None
  pipelineInput: true
  position: "2"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Int32" data-throw-if-not-resolved="False" />
  name: MaxUnhealthyUpgradedInstancePercent
  description: |+
    The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state.
    This check will happen after each batch is upgraded.
    If this percentage is ever exceeded, the rolling update aborts.
    If the value is not specified, it is set to 20.

  defaultValue: None
  pipelineInput: true
  position: "3"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: PauseTimeBetweenBatches
  description: |+
    The wait time between completing the update for all virtual machines in one batch and starting the next batch.
    The time duration should be specified in ISO 8601 format.
    The default value is 0 seconds (PT0S).

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Compute.Automation.Models.PSVirtualMachineScaleSet" data-throw-if-not-resolved="False" />
  name: VirtualMachineScaleSet
  isRequired: true
  description: |+
    Specifies the VMSS object.
    You can use the New-AzVmssConfig cmdlet to create the object.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: None
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Az.Compute.Set-AzVmssRollingUpgradePolicy
name: Set-AzVmssRollingUpgradePolicy
description: |-
  Sets the VMSS rolling upgrade policy properties.
metadata:
  external help file: Microsoft.Azure.PowerShell.Cmdlets.Compute.dll-Help.xml
  Module Name: Az.Compute
  online version: https://docs.microsoft.com/en-us/powershell/module/az.compute/set-azvmssrollingupgradepolicy
  schema: 2.0.0
  content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Compute/Compute/help/Set-AzVmssRollingUpgradePolicy.md
  original_content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Compute/Compute/help/Set-AzVmssRollingUpgradePolicy.md
