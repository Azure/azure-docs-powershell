### YamlMime:PowershellCmdlet
summary: |-
  Creates or updates a secret in a key vault.
module: Az.KeyVault
notes: ""
inputs:
- name: <xref href="Microsoft.Azure.Commands.KeyVault.Models.PSKeyVaultSecretIdentityItem" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Azure.Commands.KeyVault.Models.PSKeyVaultSecret" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Get-AzKeyVaultSecret
  href: ./Get-AzKeyVaultSecret.yml
- text: Remove-AzKeyVaultSecret
  href: ./Remove-AzKeyVaultSecret.yml
syntaxes:
- >-
  Set-AzKeyVaultSecret [-VaultName] <String> [-Name] <String> [-SecretValue] <SecureString> [-Disable]

   [-Expires <DateTime>] [-NotBefore <DateTime>] [-ContentType <String>] [-Tag <Hashtable>]

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Set-AzKeyVaultSecret [-InputObject] <PSKeyVaultSecretIdentityItem> [-SecretValue] <SecureString> [-Disable]

   [-Expires <DateTime>] [-NotBefore <DateTime>] [-ContentType <String>] [-Tag <Hashtable>]

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: 'Example 1: Modify the value of a secret using default attributes'
  code: |-
    PS C:\> $Secret = ConvertTo-SecureString -String 'Password' -AsPlainText -Force
    PS C:\> Set-AzKeyVaultSecret -VaultName 'Contoso' -Name 'ITSecret' -SecretValue $Secret

    Vault Name   : Contoso
    Name         : ITSecret
    Version      : 8b5c0cb0326e4350bd78200fac932b51
    Id           : https://contoso.vault.azure.net:443/secrets/ITSecret/8b5c0cb0326e4350bd78200fac932b51
    Enabled      : True
    Expires      :
    Not Before   :
    Created      : 5/25/2018 6:39:30 PM
    Updated      : 5/25/2018 6:39:30 PM
    Content Type :
    Tags         :
  description: |-
    The first command converts a string into a secure string by using the **ConvertTo-SecureString**
    cmdlet, and then stores that string in the $Secret variable. For more information, type `Get-Help
    ConvertTo-SecureString`.
    The second command modifies value of the secret named ITSecret in the key vault named Contoso. The
    secret value becomes the value stored in $Secret.
  summary: ""
- title: 'Example 2: Modify the value of a secret using custom attributes'
  code: |-
    PS C:\> $Secret = ConvertTo-SecureString -String 'Password' -AsPlainText -Force
    PS C:\> $Expires = (Get-Date).AddYears(2).ToUniversalTime()
    PS C:\> $NBF =(Get-Date).ToUniversalTime()
    PS C:\> $Tags = @{ 'Severity' = 'medium'; 'IT' = 'true'}
    PS C:\> $ContentType = 'txt'
    PS C:\> Set-AzKeyVaultSecret -VaultName 'Contoso' -Name 'ITSecret' -SecretValue $Secret -Expires $Expires -NotBefore $NBF -ContentType $ContentType -Disable -Tags $Tags

    Vault Name   : Contoso
    Name         : ITSecret
    Version      : a2c150be3ea24dd6b8286986e6364851
    Id           : https://contoso.vault.azure.net:443/secrets/ITSecret/a2c150be3ea24dd6b8286986e6364851
    Enabled      : False
    Expires      : 5/25/2020 6:40:00 PM
    Not Before   : 5/25/2018 6:40:05 PM
    Created      : 5/25/2018 6:41:22 PM
    Updated      : 5/25/2018 6:41:22 PM
    Content Type : txt
    Tags         : Name      Value
                   Severity  medium
                   IT        true
  description: |-
    The first command converts a string into a secure string by using the **ConvertTo-SecureString**
    cmdlet, and then stores that string in the $Secret variable. For more information, type `Get-Help
    ConvertTo-SecureString`.
    The next commands define custom attributes for the expiry date, tags, and context type, and store
    the attributes in variables.
    The final command modifies values of the secret named ITSecret in the key vault named Contoso, by
    using the values specified previously as variables.
  summary: ""
parameters:
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: None
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ContentType
  description: |+
    Specifies the content type of a secret.
    To delete the existing content type, specify an empty string.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Common.Authentication.Abstractions.Core.IAzureContextContainer" data-throw-if-not-resolved="False" />
  name: DefaultProfile
  description: |+
    The credentials, account, tenant, and subscription used for communication with azure

  defaultValue: None
  position: Named
  aliases: AzContext, AzureRmContext, AzureCredential
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Disable
  description: |+
    Indicates that this cmdlet disables a secret.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Nullable`1" data-throw-if-not-resolved="False" /><span>[</span><xref href="System.DateTime" data-throw-if-not-resolved="False" /><span>]</span>
  name: Expires
  description: |+
    Specifies the expiration time, as a **DateTime** object, for the secret that this cmdlet updates.
    This parameter uses Coordinated Universal Time (UTC). To obtain a **DateTime** object, use the
    **Get-Date** cmdlet. For more information, type `Get-Help Get-Date`.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.KeyVault.Models.PSKeyVaultSecretIdentityItem" data-throw-if-not-resolved="False" />
  name: InputObject
  isRequired: true
  description: |+
    Secret object

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Name
  isRequired: true
  description: |+
    Specifies the name of a secret to modify. This cmdlet constructs the fully qualified domain name
    (FQDN) of a secret based on the name that this parameter specifies, the name of the key vault, and
    your current environment.

  defaultValue: None
  position: "1"
  aliases: SecretName
  parameterValueGroup: ""
- type: <xref href="System.Nullable`1" data-throw-if-not-resolved="False" /><span>[</span><xref href="System.DateTime" data-throw-if-not-resolved="False" /><span>]</span>
  name: NotBefore
  description: |+
    Specifies the time, as a **DateTime** object, before which the secret cannot be used. This
    parameter uses UTC. To obtain a **DateTime** object, use the **Get-Date** cmdlet.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Security.SecureString" data-throw-if-not-resolved="False" />
  name: SecretValue
  isRequired: true
  description: |+
    Specifies the value for the secret as a **SecureString** object. To obtain a **SecureString**
    object, use the **ConvertTo-SecureString** cmdlet. For more information, type `Get-Help
    ConvertTo-SecureString`.

  defaultValue: None
  position: "2"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="False" />
  name: Tag
  description: |+
    Key-value pairs in the form of a hash table. For example:
    @{key0="value0";key1=$null;key2="value2"}

  defaultValue: None
  position: Named
  aliases: Tags
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: VaultName
  isRequired: true
  description: |+
    Specifies the name of the key vault to which this secret belongs. This cmdlet constructs the FQDN
    of a key vault based on the name that this parameter specifies and your current environment.

  defaultValue: None
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: None
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Az.KeyVault.Set-AzKeyVaultSecret
name: Set-AzKeyVaultSecret
description: |-
  The **Set-AzKeyVaultSecret** cmdlet creates or updates a secret in a key vault in Azure Key
  Vault. If the secret does not exist, this cmdlet creates it. If the secret already exists, this
  cmdlet creates a new version of that secret.
metadata:
  external help file: Microsoft.Azure.PowerShell.Cmdlets.KeyVault.dll-Help.xml
  Module Name: Az.KeyVault
  ms.assetid: 9FC72DE9-46BB-4CB5-9880-F53756DBE012
  online version: https://docs.microsoft.com/en-us/powershell/module/az.keyvault/set-azkeyvaultsecret
  schema: 2.0.0
  content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/KeyVault/KeyVault/help/Set-AzKeyVaultSecret.md
  original_content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/KeyVault/KeyVault/help/Set-AzKeyVaultSecret.md
