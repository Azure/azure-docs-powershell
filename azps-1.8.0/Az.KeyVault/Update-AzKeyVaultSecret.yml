### YamlMime:PowershellCmdlet
summary: |-
  Updates attributes of a secret in a key vault.
module: Az.KeyVault
notes: ""
inputs:
- name: <xref href="Microsoft.Azure.Commands.KeyVault.Models.PSKeyVaultSecretIdentityItem" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Azure.Commands.KeyVault.Models.PSKeyVaultSecret" data-throw-if-not-resolved="False" />
  description: ""
syntaxes:
- >-
  Update-AzKeyVaultSecret [-VaultName] <String> [-Name] <String> [[-Version] <String>] [-Enable <Boolean>]

   [-Expires <DateTime>] [-NotBefore <DateTime>] [-ContentType <String>] [-Tag <Hashtable>] [-PassThru]

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Update-AzKeyVaultSecret [-InputObject] <PSKeyVaultSecretIdentityItem> [[-Version] <String>] [-Enable <Boolean>]

   [-Expires <DateTime>] [-NotBefore <DateTime>] [-ContentType <String>] [-Tag <Hashtable>] [-PassThru]

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: 'Example 1: Modify the attributes of a secret'
  code: |-
    PS C:\> $Expires = (Get-Date).AddYears(2).ToUniversalTime()
    PS C:\> $Nbf = (Get-Date).ToUniversalTime()
    PS C:\> $Tags = @{ 'Severity' = 'medium'; 'HR' = 'true'}
    PS C:\> $ContentType= 'xml'
    PS C:\> Update-AzKeyVaultSecret -VaultName 'ContosoVault' -Name 'HR' -Expires $Expires -NotBefore $Nbf -ContentType $ContentType -Enable $True -Tag $Tags -PassThru

    Vault Name   : ContosoVault
    Name         : HR
    Version      : d476edfcd3544017a03bc49c1f3abec0
    Id           : https://ContosoVault.vault.azure.net:443/secrets/HR/d476edfcd3544017a03bc49c1f3abec0
    Enabled      : True
    Expires      : 5/25/2020 8:01:58 PM
    Not Before   : 5/25/2018 8:02:02 PM
    Created      : 4/11/2018 11:45:06 PM
    Updated      : 5/25/2018 8:02:45 PM
    Content Type : xml
    Tags         : Name      Value
                   Severity  medium
                   HR        true
  description: |-
    The first four commands define attributes for the expiry date, the NotBefore date, tags, and
    context type, and store the attributes in variables.
    The final command modifies the attributes for the secret named HR in the key vault named
    ContosoVault, using the stored variables.
  summary: ""
- title: 'Example 2: Delete the tags and content type for a secret'
  code: |-
    PS C:\> Update-AzKeyVaultSecret -VaultName 'ContosoVault' -Name 'HR' -Version '9EEA45C6EE50490B9C3176A80AC1A0DF' -ContentType '' -Tag -@{}
  description: |-
    This command deletes the tags and the content type for the specified version of the secret named HR
    in the key vault named Contoso.
  summary: ""
- title: 'Example 3: Disable the current version of secrets whose name begins with IT'
  code: |-
    PS C:\> $Vault = 'ContosoVault'
    PS C:\> $Prefix = 'IT'
    PS C:\> Get-AzKeyVaultSecret $Vault | Where-Object {$_.Name -like $Prefix + '*'} | Update-AzKeyVaultSecret -Enable $False
  description: |-
    The first command stores the string value Contoso in the $Vault variable.
    The second command stores the string value IT in the $Prefix variable.
    The third command uses the Get-AzKeyVaultSecret cmdlet to get the secrets in the specified key
    vault, and then passes those secrets to the **Where-Object** cmdlet. The **Where-Object** cmdlet
    filters the secrets for names that begin with the characters IT. The command pipes the secrets that
    match the filter to the Update-AzKeyVaultSecret cmdlet, which disables them.
  summary: ""
- title: 'Example 4: Set the ContentType for all versions of a secret'
  code: |-
    PS C:\> $VaultName = 'ContosoVault'
    PS C:\> $Name = 'HR'
    PS C:\> $ContentType = 'xml'
    PS C:\> Get-AzKeyVaultKey -VaultName $VaultName -Name $Name -IncludeVersions | Update-AzKeyVaultSecret -ContentType $ContentType
  description: |-
    The first three commands define string variables to use for the *VaultName*, *Name*, and
    *ContentType* parameters. The fourth command uses the Get-AzKeyVaultKey cmdlet to get the
    specified keys, and pipes the keys to the Update-AzKeyVaultSecret cmdlet to set their
    content type to XML.
  summary: ""
parameters:
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: None
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ContentType
  description: |+
    Secret's content type.
    If not specified, the existing value of the secret's content type remains unchanged.
    Remove the existing content type value by specifying an empty string.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Common.Authentication.Abstractions.Core.IAzureContextContainer" data-throw-if-not-resolved="False" />
  name: DefaultProfile
  description: |+
    The credentials, account, tenant, and subscription used for communication with Azure.

  defaultValue: None
  position: Named
  aliases: AzContext, AzureRmContext, AzureCredential
  parameterValueGroup: ""
- type: <xref href="System.Nullable`1" data-throw-if-not-resolved="False" /><span>[</span><xref href="System.Boolean" data-throw-if-not-resolved="False" /><span>]</span>
  name: Enable
  description: |+
    If present, enable a secret if value is true.
    Disable a secret if value is false.
    If not specified, the existing value of the secret's enabled/disabled state remains unchanged.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Nullable`1" data-throw-if-not-resolved="False" /><span>[</span><xref href="System.DateTime" data-throw-if-not-resolved="False" /><span>]</span>
  name: Expires
  description: |+
    The expiration time of a secret in UTC time.
    If not specified, the existing value of the secret's expiration time remains unchanged.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.KeyVault.Models.PSKeyVaultSecretIdentityItem" data-throw-if-not-resolved="False" />
  name: InputObject
  isRequired: true
  description: |+
    Secret object

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Name
  isRequired: true
  description: |+
    Secret name.
    Cmdlet constructs the FQDN of a secret from vault name, currently selected environment and secret name.

  defaultValue: None
  position: "1"
  aliases: SecretName
  parameterValueGroup: ""
- type: <xref href="System.Nullable`1" data-throw-if-not-resolved="False" /><span>[</span><xref href="System.DateTime" data-throw-if-not-resolved="False" /><span>]</span>
  name: NotBefore
  description: |+
    The UTC time before which secret can't be used.
    If not specified, the existing value of the secret's NotBefore attribute remains unchanged.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: PassThru
  description: |+
    Cmdlet does not return object by default.
    If this switch is specified, return Secret object.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="False" />
  name: Tag
  description: |+
    A hashtable representing secret tags.
    If not specified, the existing tags of the secret remain unchanged.
    Remove a tag by specifying an empty Hashtable.

  defaultValue: None
  position: Named
  aliases: Tags
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: VaultName
  isRequired: true
  description: |+
    Vault name.
    Cmdlet constructs the FQDN of a vault based on the name and currently selected environment.

  defaultValue: None
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Version
  description: |+
    Secret version.
    Cmdlet constructs the FQDN of a secret from vault name, currently selected environment, secret name and secret version.

  defaultValue: None
  position: "2"
  aliases: SecretVersion
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: None
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Az.KeyVault.Update-AzKeyVaultSecret
name: Update-AzKeyVaultSecret
description: |-
  The **Update-AzKeyVaultSecret** cmdlet updates editable attributes of a secret in a key vault.
metadata:
  external help file: Microsoft.Azure.PowerShell.Cmdlets.KeyVault.dll-Help.xml
  Module Name: Az.KeyVault
  online version: https://docs.microsoft.com/en-us/powershell/module/az.keyvault/update-azkeyvaultsecret
  schema: 2.0.0
  content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/KeyVault/KeyVault/help/Update-AzKeyVaultSecret.md
  original_content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/KeyVault/KeyVault/help/Update-AzKeyVaultSecret.md
