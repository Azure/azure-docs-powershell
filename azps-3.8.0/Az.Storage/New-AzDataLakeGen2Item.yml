### YamlMime:PowershellCmdlet
summary: |-
  Create a file or directory in a filesystem.
module: Az.Storage
notes: ""
inputs:
- name: <xref href="System.String" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="Microsoft.Azure.Commands.Common.Authentication.Abstractions.IStorageContext" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.WindowsAzure.Commands.Common.Storage.ResourceModel.AzureDataLakeGen2Item" data-throw-if-not-resolved="False" />
  description: ""
syntaxes:
- >-
  New-AzDataLakeGen2Item [-FileSystem] <String> [-Path] <String> -Source <String> [-Umask <String>]

   [-Permission <String>] [-Property <Hashtable>] [-Metadata <Hashtable>] [-Force] [-AsJob]

   [-Context <IStorageContext>] [-DefaultProfile <IAzureContextContainer>] [-ConcurrentTaskCount <Int32>]

   [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  New-AzDataLakeGen2Item [-FileSystem] <String> [-Path] <String> [-Directory] [-Umask <String>]

   [-Permission <String>] [-Property <Hashtable>] [-Metadata <Hashtable>] [-Force] [-AsJob]

   [-Context <IStorageContext>] [-DefaultProfile <IAzureContextContainer>] [-ConcurrentTaskCount <Int32>]

   [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: 'Example 1: Create a directory with specified permission, Umask, properties, and metadata'
  code: |-
    PS C:\>New-AzDataLakeGen2Item -FileSystem "testfilesystem" -Path "dir1/dir2/" -Directory -Permission rwxrwxrwx -Umask ---rw---- -Property @{"CacheControl" = "READ"; "ContentDisposition" = "True"} -Metadata  @{"tag1" = "value1"; "tag2" = "value2" }

       FileSystem Name: filesystem1

    Path                 IsDirectory  Length          LastModified         Permissions  Owner                Group               
    ----                 -----------  ------          ------------         -----------  -----                -----               
    dir1/dir2            True                         2020-03-23 09:15:56Z rwx---rwx    $superuser           $superuser
  description: |-
    This command creates a directory with specified Permission, Umask, properties, and metadata
  summary: ""
- title: 'Example 2: Create(upload) a data lake file from a local source file, and the cmdlet runs in background'
  code: |-
    PS C:\> $task = New-AzDataLakeGen2Item  -FileSystem "testfilesystem" -Path "dir1/dir2/file1" -Source "c:\sourcefile.txt" -Force -asjob
    PS C:\> $task | Wait-Job
    PS C:\> $task.Output

       FileSystem Name: filesystem1

    Path                 IsDirectory  Length          LastModified         Permissions  Owner                Group                
    ----                 -----------  ------          ------------         -----------  -----                -----               
    dir1/dir2/file1      False        14400000        2020-03-23 09:19:13Z rw-r-----    $superuser           $superuser
  description: |-
    This command creates(upload) a data lake file from a local source file, and the cmdlet runs in background.
  summary: ""
parameters:
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: AsJob
  description: |+
    Run cmdlet in the background

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Nullable`1" data-throw-if-not-resolved="False" /><span>[</span><xref href="System.Int32" data-throw-if-not-resolved="False" /><span>]</span>
  name: ConcurrentTaskCount
  description: |+
    The total amount of concurrent async tasks. The default value is 10.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: None
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Common.Authentication.Abstractions.IStorageContext" data-throw-if-not-resolved="False" />
  name: Context
  description: |+
    Azure Storage Context Object

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Common.Authentication.Abstractions.Core.IAzureContextContainer" data-throw-if-not-resolved="False" />
  name: DefaultProfile
  description: |+
    The credentials, account, tenant, and subscription used for communication with Azure.

  defaultValue: None
  position: Named
  aliases: AzureRmContext, AzureCredential
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Directory
  isRequired: true
  description: |+
    Indicates that this new item is a directory and not a file.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: FileSystem
  isRequired: true
  description: |+
    FileSystem name

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Force
  description: |+
    If passed then new item is created without any prompt

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="False" />
  name: Metadata
  description: |+
    Specifies metadata for the created directory or file.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Path
  isRequired: true
  description: |+
    The path in the specified Filesystem that should be create.
    Can be a file or directory In the format 'directory/file.txt' or 'directory1/directory2/'

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Permission
  description: |+
    Sets POSIX access permissions for the file owner, the file owning group, and others.
    Each class may be granted read, write, or execute permission.
    Symbolic (rwxrw-rw-) is supported.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="False" />
  name: Property
  description: |+
    Specifies properties for the created directory or file. 
    The supported properties for file are: CacheControl, ContentDisposition, ContentEncoding, ContentLanguage, ContentMD5, ContentType.
    The supported properties for directory are: CacheControl, ContentDisposition, ContentEncoding, ContentLanguage.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Source
  isRequired: true
  description: |+
    Specify the local source file path which will be upload to a Datalake Gen2 file.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Umask
  description: |+
    When creating New Item and the parent directory does not have a default ACL, the umask restricts the permissions of the file or directory to be created.
    The resulting permission is given by p & ^u, where p is the permission and u is the umask.
    Symbolic (rwxrw-rw-) is supported.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: None
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Az.Storage.New-AzDataLakeGen2Item
name: New-AzDataLakeGen2Item
description: |-
  The **New-AzDataLakeGen2Item** cmdlet creates a file or directory in a Filesystem in an Azure storage account.
  This cmdlet only works if Hierarchical Namespace is enabled for the Storage account. This kind of account can be created by run "New-AzStorageAccount" cmdlet with "-EnableHierarchicalNamespace $true".
metadata:
  external help file: Microsoft.Azure.PowerShell.Cmdlets.Storage.dll-Help.xml
  Module Name: Az.Storage
  online version: https://docs.microsoft.com/en-us/powershell/module/az.storage/new-azdatalakegen2item
  schema: 2.0.0
  content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Storage/Storage.Management/help/New-AzDataLakeGen2Item.md
  original_content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Storage/Storage.Management/help/New-AzDataLakeGen2Item.md
