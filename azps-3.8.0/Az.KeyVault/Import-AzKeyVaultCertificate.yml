### YamlMime:PowershellCmdlet
summary: |-
  Imports a certificate to a key vault.
module: Az.KeyVault
notes: ""
inputs:
- name: <xref href="System.String" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="System.Security.Cryptography.X509Certificates.X509Certificate2Collection" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Azure.Commands.KeyVault.Models.PSKeyVaultCertificate" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Remove-AzKeyVaultCertificate
  href: ./Remove-AzKeyVaultCertificate.yml
syntaxes:
- >-
  Import-AzKeyVaultCertificate [-VaultName] <String> [-Name] <String> -FilePath <String>

   [-Password <SecureString>] [-Tag <Hashtable>] [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm]

   [<CommonParameters>]
- >-
  Import-AzKeyVaultCertificate [-VaultName] <String> [-Name] <String> -CertificateString <String>

   [-Password <SecureString>] [-Tag <Hashtable>] [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm]

   [<CommonParameters>]
- >-
  Import-AzKeyVaultCertificate [-VaultName] <String> [-Name] <String>

   [-CertificateCollection] <X509Certificate2Collection> [-Tag <Hashtable>]

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: 'Example 1: Import a key vault certificate'
  code: |-
    PS C:\> $Password = ConvertTo-SecureString -String "123" -AsPlainText -Force
    PS C:\> Import-AzKeyVaultCertificate -VaultName "ContosoKV01" -Name "ImportCert01" -FilePath "C:\Users\contosoUser\Desktop\import.pfx" -Password $Password

    Name        : importCert01
    Certificate : [Subject]
                    CN=contoso.com

                  [Issuer]
                    CN=contoso.com

                  [Serial Number]
                    XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

                  [Not Before]
                    2/8/2016 3:11:45 PM

                  [Not After]
                    8/8/2016 4:21:45 PM

                  [Thumbprint]
                    XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

    Thumbprint  : XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
    Tags        :
    Enabled     : True
    Created     : 2/8/2016 11:50:43 PM
    Updated     : 2/8/2016 11:50:43 PM
  description: |-
    The first command uses the ConvertTo-SecureString cmdlet to create a secure password, and then
    stores it in the $Password variable.
    The second command imports the certificate named ImportCert01 into the CosotosoKV01 key vault.
  summary: ""
parameters:
- type: <xref href="System.Security.Cryptography.X509Certificates.X509Certificate2Collection" data-throw-if-not-resolved="False" />
  name: CertificateCollection
  isRequired: true
  description: |+
    Specifies the certificate collection to add to a key vault.

  defaultValue: None
  pipelineInput: true
  position: "2"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: CertificateString
  isRequired: true
  description: |+
    Specifies a certificate string.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: None
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Common.Authentication.Abstractions.Core.IAzureContextContainer" data-throw-if-not-resolved="False" />
  name: DefaultProfile
  description: |+
    The credentials, account, tenant, and subscription used for communication with azure

  defaultValue: None
  position: Named
  aliases: AzContext, AzureRmContext, AzureCredential
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: FilePath
  isRequired: true
  description: |+
    Specifies the path of the certificate file that this cmdlet imports.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Name
  isRequired: true
  description: |+
    Specifies the certificate name. This cmdlet constructs the fully qualified domain name (FQDN) of a
    certificate from key vault name, currently selected environment, and certificate name.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: CertificateName
  parameterValueGroup: ""
- type: <xref href="System.Security.SecureString" data-throw-if-not-resolved="False" />
  name: Password
  description: |+
    Specifies the password for a certificate file.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="False" />
  name: Tag
  description: |+
    Key-value pairs in the form of a hash table. For example:
    @{key0="value0";key1=$null;key2="value2"}

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: VaultName
  isRequired: true
  description: |+
    Specifies the key vault name into which this cmdlet imports certificates.
    This cmdlet constructs the fully qualified domain name (FQDN) of a key vault based on the name and currently selected environment.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: None
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Az.KeyVault.Import-AzKeyVaultCertificate
name: Import-AzKeyVaultCertificate
description: |-
  The **Import-AzKeyVaultCertificate** cmdlet imports a certificate into a key vault.
  You can create the certificate to import by using one of the following methods:
  - Use the New-AzKeyVaultCertificateSigningRequest cmdlet to create a certificate signing request and submit it to a certificate authority.
  - Use an existing certificate package file, such as a .pfx or .p12 file, which contains both the certificate and private key.
metadata:
  external help file: Microsoft.Azure.PowerShell.Cmdlets.KeyVault.dll-Help.xml
  Module Name: Az.KeyVault
  ms.assetid: D4188DC6-A8AB-4B45-9781-94B74C338C63
  online version: https://docs.microsoft.com/en-us/powershell/module/az.keyvault/import-azkeyvaultcertificate
  schema: 2.0.0
  content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/KeyVault/KeyVault/help/Import-AzKeyVaultCertificate.md
  original_content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/KeyVault/KeyVault/help/Import-AzKeyVaultCertificate.md
