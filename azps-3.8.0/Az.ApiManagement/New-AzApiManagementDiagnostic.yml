### YamlMime:PowershellCmdlet
summary: |-
  Creates a new diagnostics at the Global scope or Api Scope.
module: Az.ApiManagement
notes: ""
inputs:
- name: <xref href="Microsoft.Azure.Commands.ApiManagement.ServiceManagement.Models.PsApiManagementContext" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="System.String" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="Microsoft.Azure.Commands.ApiManagement.ServiceManagement.Models.PsApiManagementSamplingSetting" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="Microsoft.Azure.Commands.ApiManagement.ServiceManagement.Models.PsApiManagementPipelineDiagnosticSetting" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Azure.Commands.ApiManagement.ServiceManagement.Models.PsApiManagementDiagnostic" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Get-AzApiManagementDiagnostic
  href: ./Get-AzApiManagementDiagnostic.yml
- text: Remove-AzApiManagementDiagnostic
  href: ./Remove-AzApiManagementDiagnostic.yml
- text: Set-AzApiManagementDiagnostic
  href: ./Set-AzApiManagementDiagnostic.yml
- text: New-AzApiManagementHttpMessageDiagnostic
  href: ./New-AzApiManagementHttpMessageDiagnostic.yml
- text: New-AzApiManagementSamplingSetting
  href: ./New-AzApiManagementHttpMessageDiagnostic.yml
syntaxes:
- >-
  New-AzApiManagementDiagnostic -Context <PsApiManagementContext> -LoggerId <String> [-DiagnosticId <String>]

   [-AlwaysLog <String>] [-ApiId <String>] [-SamplingSetting <PsApiManagementSamplingSetting>]

   [-FrontEndSetting <PsApiManagementPipelineDiagnosticSetting>]

   [-BackendSetting <PsApiManagementPipelineDiagnosticSetting>] [-DefaultProfile <IAzureContextContainer>]

   [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: 'Example 1 : Create a new Global scope Diagnostic'
  code: |-
    PS D:\github\azure-powershell> $context = New-AzApiManagementContext -ResourceGroupName "Api-Default-WestUS" -ServiceName "contoso"
    PS D:\github\azure-powershell> $logger = Get-AzApiManagementLogger -Context $context -LoggerId "backendapisachinc"
    PS D:\github\azure-powershell> $samplingsetting = New-AzApiManagementSamplingSetting -SamplingType fixed -SamplingPercentage 100
    PS D:\github\azure-powershell> New-AzApiManagementDiagnostic -LoggerId $logger.LoggerId -Context $context -AlwaysLog allErrors -SamplingSetting $samplingSetting  -DiagnosticId "applicationinsights"

    DiagnosticId                 : applicationinsights
    ApiId                        :
    AlwaysLog                    : allErrors
    LoggerId                     : backendapisachinc
    EnableHttpCorrelationHeaders : True
    SamplingSetting              : Microsoft.Azure.Commands.ApiManagement.ServiceManagement.Models.PsApiManagementSamplingSetting
    FrontendSetting              :
    BackendSetting               :
    Id                           : /subscriptions/subid/resourceGroups/Api-Default-WestUs/providers/Microsoft.ApiManagement/service/contoso/diagnostics/applicationinsights
    ResourceGroupName            : Api-Default-WestUs
    ServiceName                  : contoso
  description: |-
    This example create a diagnostic entity at the Global Scope.
  summary: ""
- title: 'Example 2: Create a diagnostic at Api scope'
  code: |-
    PS D:\github\azure-powershell> $context = New-AzApiManagementContext -ResourceGroupName "Api-Default-WestUS" -ServiceName "contoso"
    PS D:\github\azure-powershell> $logger = Get-AzApiManagementLogger -Context $context -LoggerId azuremonitor
    PS D:\github\azure-powershell> $samplingsetting = New-AzApiManagementSamplingSetting -SamplingType fixed -SamplingPercentage 100
    PS D:\github\azure-powershell> $httpMessageDiagnostic = New-AzApiManagementHttpMessageDiagnostic -HeadersToLog 'Content-Type', 'User-Agent' -BodyBytesToLog 100
    PS D:\github\azure-powershell> $pipelineDiagnostic = New-AzApiManagementPipelineDiagnosticSetting -Request $httpMessageDiagnostic -Response $httpMessageDiagnostic
    PS D:\github\azure-powershell> New-AzApiManagementDiagnostic -LoggerId $logger.LoggerId -Context $context -ApiId httpbin -AlwaysLog allErrors -SamplingSetting $samplingsetting -FrontEndSetting $pipelineDiagnostic -BackendSetting $pipelineDiagnostic -DiagnosticId azuremonitor

    DiagnosticId                 : azuremonitor
    ApiId                        : httpbin
    AlwaysLog                    : allErrors
    LoggerId                     : azuremonitor
    EnableHttpCorrelationHeaders :
    SamplingSetting              : Microsoft.Azure.Commands.ApiManagement.ServiceManagement.Models.PsApiManagementSamplingSetting
    FrontendSetting              : Microsoft.Azure.Commands.ApiManagement.ServiceManagement.Models.PsApiManagementPipelineDiagnosticSetting
    BackendSetting               : Microsoft.Azure.Commands.ApiManagement.ServiceManagement.Models.PsApiManagementPipelineDiagnosticSetting
    Id                           : /subscriptions/subid/resourceGroups/Api-Default-WestUS/providers/Microsoft.ApiManagement/service/contoso/apis/httpbin/diagnostics/azuremonitor      
    ResourceGroupName            : Api-Default-WestUS
    ServiceName                  : contoso
  description: |-
    The example above create a diagnostic for the API `httpbin` to log the Header and 100 Bytes of Body to `azuremonitor` logger.
  summary: ""
parameters:
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: AlwaysLog
  description: |+
    Specifies for what type of messages sampling settings should not apply.
    This parameter is optional.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ApiId
  description: |+
    Identifier of existing API.
    If specified will set API-scope policy.
    This parameters is required.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.ApiManagement.ServiceManagement.Models.PsApiManagementPipelineDiagnosticSetting" data-throw-if-not-resolved="False" />
  name: BackendSetting
  description: |+
    Diagnostic setting for incoming/outgoing Http Messages to the Backend. This parameter is optional.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: None
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.ApiManagement.ServiceManagement.Models.PsApiManagementContext" data-throw-if-not-resolved="False" />
  name: Context
  isRequired: true
  description: |+
    Instance of PsApiManagementContext.
    This parameter is required.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Common.Authentication.Abstractions.Core.IAzureContextContainer" data-throw-if-not-resolved="False" />
  name: DefaultProfile
  description: |+
    The credentials, account, tenant, and subscription used for communication with Azure.

  defaultValue: None
  position: Named
  aliases: AzContext, AzureRmContext, AzureCredential
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: DiagnosticId
  description: |+
    Identifier of the diagnostics entity.
    This parameter is optional.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.ApiManagement.ServiceManagement.Models.PsApiManagementPipelineDiagnosticSetting" data-throw-if-not-resolved="False" />
  name: FrontEndSetting
  description: |+
    Diagnostic setting for incoming/outgoing Http Messages to the Gateway. This parameter is optional.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: LoggerId
  isRequired: true
  description: |+
    Identifier of the logger to push diagnostics to.
    This parameter is required.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.ApiManagement.ServiceManagement.Models.PsApiManagementSamplingSetting" data-throw-if-not-resolved="False" />
  name: SamplingSetting
  description: |+
    Sampling Setting of the Diagnostic.
    This parameter is optional.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: None
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Az.ApiManagement.New-AzApiManagementDiagnostic
name: New-AzApiManagementDiagnostic
description: |-
  The cmdlet **New-AzApiManagementDiagnostic** creates a diagnostic entity either at Global scope or specific Api scope.
metadata:
  external help file: Microsoft.Azure.PowerShell.Cmdlets.ApiManagement.ServiceManagement.dll-Help.xml
  Module Name: Az.ApiManagement
  online version: https://docs.microsoft.com/en-us/powershell/module/az.apimanagement/new-azapimanagementdiagnostic
  schema: 2.0.0
  content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/ApiManagement/ApiManagement/help/New-AzApiManagementDiagnostic.md
  original_content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/ApiManagement/ApiManagement/help/New-AzApiManagementDiagnostic.md
