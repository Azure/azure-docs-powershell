### YamlMime:PowershellCmdlet
summary: |-
  Gets policy assignments.
module: Az.Resources
notes: ""
inputs:
- name: <xref href="System.String" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="System.Management.Automation.PSObject" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: New-AzPolicyAssignment
  href: ./New-AzPolicyAssignment.yml
- text: Remove-AzPolicyAssignment
  href: ./Remove-AzPolicyAssignment.yml
- text: Set-AzPolicyAssignment
  href: ./Set-AzPolicyAssignment.yml
syntaxes:
- >-
  Get-AzPolicyAssignment [-ApiVersion <String>] [-Pre] [-DefaultProfile <IAzureContextContainer>]

   [<CommonParameters>]
- >-
  Get-AzPolicyAssignment [-Name <String>] [-Scope <String>] [-PolicyDefinitionId <String>] [-ApiVersion <String>]

   [-Pre] [-DefaultProfile <IAzureContextContainer>] [<CommonParameters>]
- >-
  Get-AzPolicyAssignment [-Scope <String>] [-IncludeDescendent] [-ApiVersion <String>] [-Pre]

   [-DefaultProfile <IAzureContextContainer>] [<CommonParameters>]
- >-
  Get-AzPolicyAssignment -Id <String> [-PolicyDefinitionId <String>] [-ApiVersion <String>] [-Pre]

   [-DefaultProfile <IAzureContextContainer>] [<CommonParameters>]
examples:
- title: 'Example 1: Get all policy assignments'
  code: |-
    PS C:\> Get-AzPolicyAssignment
  description: |-
    This command gets all the policy assignments.
  summary: ""
- title: 'Example 2: Get a specific policy assignment'
  code: |-
    PS C:\> $ResourceGroup = Get-AzResourceGroup -Name 'ResourceGroup11'
    PS C:\> Get-AzPolicyAssignment -Name 'PolicyAssignment07' -Scope $ResourceGroup.ResourceId
  description: |-
    The first command gets a resource group named ResourceGroup11 by using the Get-AzResourceGroup cmdlet and stores it in the $ResourceGroup variable.
    The second command gets the policy assignment named PolicyAssignment07 for the scope that the **ResourceId** property of $ResourceGroup identifies.
  summary: ""
- title: 'Example 3: Get all policy assignments assigned to a management group'
  code: |-
    PS C:\> $mgId = 'myManagementGroup'
    PS C:\> Get-AzPolicyAssignment -Scope '/providers/Microsoft.Management/managementgroups/$mgId'
  description: |-
    The first command specifies the ID of the management group to query.
    The second command gets all of the policy assignments that are assigned to the management group with ID 'myManagementGroup'.
  summary: ""
parameters:
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ApiVersion
  description: |+
    Specifies the version of the resource provider API to use.
    If you do not specify a version, this cmdlet uses the latest available version.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Common.Authentication.Abstractions.Core.IAzureContextContainer" data-throw-if-not-resolved="False" />
  name: DefaultProfile
  description: |+
    The credentials, account, tenant, and subscription used for communication with azure

  defaultValue: None
  position: Named
  aliases: AzContext, AzureRmContext, AzureCredential
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Id
  isRequired: true
  description: |+
    Specifies the fully qualified resource ID for the policy assignment that this cmdlet gets.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ResourceId
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: IncludeDescendent
  isRequired: true
  description: |+
    Causes the list of returned policy assignments to include all assignments related to the given scope, including those from ancestor scopes and those from descendent scopes.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Name
  description: |+
    Specifies the name of the policy assignment that this cmdlet gets.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: PolicyDefinitionId
  description: |+
    Specifies the ID of the policy definition of the policy assignments that this cmdlet gets.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Pre
  description: |+
    Indicates that this cmdlet considers pre-release API versions when it automatically determines which version to use.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Scope
  description: |+
    Specifies the scope at which the policy is applied for the assignment that this cmdlet gets.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
uid: Az.Resources.Get-AzPolicyAssignment
name: Get-AzPolicyAssignment
description: |-
  The **Get-AzPolicyAssignment** cmdlet gets all policy assignments or particular assignments.
  Identify a policy assignment to get by name and scope or by ID.
metadata:
  external help file: Microsoft.Azure.PowerShell.Cmdlets.ResourceManager.dll-Help.xml
  Module Name: Az.Resources
  ms.assetid: 2DBAF415-A039-479E-B3CA-E00FD5E476C9
  online version: https://docs.microsoft.com/en-us/powershell/module/az.resources/get-azpolicyassignment
  schema: 2.0.0
  content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Resources/Resources/help/Get-AzPolicyAssignment.md
  original_content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Resources/Resources/help/Get-AzPolicyAssignment.md
