### YamlMime:PowershellCmdlet
summary: |-
  Sets the vulnerability assessment rule baseline.
module: Az.Sql
notes: ""
inputs:
- name: <xref href="System.String" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="Microsoft.Azure.Commands.Sql.VulnerabilityAssessment.Model.VulnerabilityAssessmentRuleBaselineModel" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><xref href="][" data-throw-if-not-resolved="False" /><span>]</span>
  description: ""
- name: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Azure.Commands.Sql.VulnerabilityAssessment.Model.ManagedDatabaseVulnerabilityAssessmentRuleBaselineModel" data-throw-if-not-resolved="False" />
  description: ""
syntaxes:
- >-
  Set-AzSqlInstanceDatabaseVulnerabilityAssessmentRuleBaseline [-InstanceName] <String> [-DatabaseName] <String>

   -BaselineResult <String[][]> -RuleId <String> [-RuleAppliesToMaster] [-ResourceGroupName] <String>

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Set-AzSqlInstanceDatabaseVulnerabilityAssessmentRuleBaseline

   [-InputObject <VulnerabilityAssessmentRuleBaselineModel>] -BaselineResult <String[][]> -RuleId <String>

   [-RuleAppliesToMaster] [-ResourceGroupName] <String> [-DefaultProfile <IAzureContextContainer>] [-WhatIf]

   [-Confirm] [<CommonParameters>]
examples:
- title: Example 1 - Set a vulnerability assessment rule baseline
  code: |-
    PS C:\> Set-AzSqlInstanceDatabaseVulnerabilityAssessmentRuleBaseline  `
                -ResourceGroupName "ResourceGroup01" `
                -InstanceName "ManagedInstance01" `
                -DatabaseName "Database01" `
    			-RuleId "VA2108" `
    			-RuleAppliesToMaster `
    			-BaselineResult @( 'Principal1', 'db_ddladmin', 'SQL_USER', 'None')  , @( 'Principal2', 'db_ddladmin', 'SQL_USER', 'None')

    ResourceGroupName		: ResourceGroup01
    InstanceName	    : ManagedInstance01
    DatabaseName	    : Database01
    RuleId		        	: VA2108
    RuleAppliesToMaster    	: True
    BaselineResult		    : @( 'Principal1', 'db_ddladmin', 'SQL_USER', 'None')  , @( 'Principal2', 'db_ddladmin', 'SQL_USER', 'None')
  description: |-
    BaselineResult value is a composition of several sub arrays that described the T-SQL results that will be added to the baseline.  
    You may find the Scan results under the storage defined by the Update-AzSqlInstanceVulnerabilityAssessmentSetting cmdlet, under scans/{ManagedInstanceName}/{ManagedDatabaseName}/scan_{ScanId}.json
  summary: ""
- title: Example 2 - Set a vulnerability assessment rule baseline from a baseline object
  code: |-
    PS C:\> Set-AzSqlInstanceDatabaseVulnerabilityAssessmentRuleBaseline `
                -ResourceGroupName "ResourceGroup01" `
                -InstanceName "ManagedInstance01" `
                -DatabaseName "Database01" `
                -RuleId "VA2108" `
                -BaselineResult @( 'Principal1', 'db_ddladmin', 'SQL_USER', 'None')  , @( 'Principal2', 'db_ddladmin', 'SQL_USER', 'None')

    PS C:\> Get-AzSqlInstanceDatabaseVulnerabilityAssessmentRuleBaseline `
                -ResourceGroupName "ResourceGroup01" `
                -InstanceName "ManagedInstance01" `
                -DatabaseName "Database01" `
                -RuleId "VA2108" `
                |  Set-AzSqlInstanceDatabaseVulnerabilityAssessmentRuleBaseline `
                    -ResourceGroupName "ResourceGroup02" `
                    -InstanceName "ManagedInstance02" `
                    -DatabaseName "Database02" `

    ResourceGroupName		: ResourceGroup02
    InstanceName	    : ManagedInstance02
    DatabaseName	    : Database02
    RuleId		        	: VA2108
    RuleAppliesToMaster    	: False
    BaselineResult		    : @( 'Principal1', 'db_ddladmin', 'SQL_USER', 'None')  , @( 'Principal2', 'db_ddladmin', 'SQL_USER', 'None')
  description: ""
  summary: ""
- title: 'Example 3: Set a vulnerability assessment rule baseline on all the databases under a managed instance'
  code: |-
    PS C:\> Get-AzSqlInstanceDatabase -ResourceGroupName "ResourceGroup01" `
                -InstanceName "ManagedInstance01" `
                | where {$_.Name -ne "master"}  `
                | Set-AzSqlInstanceDatabaseVulnerabilityAssessmentRuleBaseline `
                    -RuleId "VA2108" `
                    -BaselineResult @( 'Principal1', 'db_ddladmin', 'SQL_USER', 'None')  , @( 'Principal2', 'db_ddladmin', 'SQL_USER', 'None')

    ResourceGroupName		: ResourceGroup01
    InstanceName	    : ManagedInstance01
    DatabaseName	    : Database01
    RuleId		        	: VA2108
    RuleAppliesToMaster    	: False
    BaselineResult		    : @( 'Principal1', 'db_ddladmin', 'SQL_USER', 'None')  , @( 'Principal2', 'db_ddladmin', 'SQL_USER', 'None')

    ResourceGroupName		: ResourceGroup01
    InstanceName	    : ManagedInstance01
    DatabaseName	    : Database02
    RuleId		        	: VA2108
    RuleAppliesToMaster    	: False
    BaselineResult		    : @( 'Principal1', 'db_ddladmin', 'SQL_USER', 'None')  , @( 'Principal2', 'db_ddladmin', 'SQL_USER', 'None')
  description: ""
  summary: ""
parameters:
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><xref href="][" data-throw-if-not-resolved="False" /><span>]</span>
  name: BaselineResult
  isRequired: true
  description: |+
    The results to set as baseline for the rule in all future scans

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: None
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: DatabaseName
  isRequired: true
  description: |+
    SQL Managed Database name.

  defaultValue: None
  pipelineInput: true
  position: "2"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Common.Authentication.Abstractions.Core.IAzureContextContainer" data-throw-if-not-resolved="False" />
  name: DefaultProfile
  description: |+
    The credentials, account, tenant, and subscription used for communication with Azure.

  defaultValue: None
  position: Named
  aliases: AzContext, AzureRmContext, AzureCredential
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Sql.VulnerabilityAssessment.Model.VulnerabilityAssessmentRuleBaselineModel" data-throw-if-not-resolved="False" />
  name: InputObject
  description: |+
    The Vulnerability Assessment rule baseline object to set

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: InstanceName
  isRequired: true
  description: |+
    SQL Managed Instance name.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ResourceGroupName
  isRequired: true
  description: |+
    The name of the resource group.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: RuleAppliesToMaster
  description: |+
    Specifies whether the baseline results should apply on a server level rule identified by the RuleId

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: RuleId
  isRequired: true
  description: |+
    The rule ID which identifies the rule to set the baseline results to.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: None
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Az.Sql.Set-AzSqlInstanceDatabaseVulnerabilityAssessmentRuleBaseline
name: Set-AzSqlInstanceDatabaseVulnerabilityAssessmentRuleBaseline
description: |-
  The **Set-AzSqlInstanceDatabaseVulnerabilityAssessmentRuleBaseline** cmdlet sets the vulnerability assessment rule baseline.
  As you review your assessment results, you can mark specific results as being an acceptable Baseline in your environment. The baseline is essentially a customization of how the results are reported. Results that match the baseline are considered as passing in subsequent scans. Once you have established your baseline security state, vulnerability assessment only reports on deviations from the baseline, and you can focus your attention on the relevant issues.
  Note that you need to run *Enable-AzSqlInstanceAdvancedDataSecurity* and *Update-AzSqlInstanceVulnerabilityAssessmentSetting* cmdlet as a prerequisite for using this cmdlets.
metadata:
  external help file: Microsoft.Azure.PowerShell.Cmdlets.Sql.dll-Help.xml
  Module Name: Az.Sql
  online version: https://docs.microsoft.com/en-us/powershell/module/az.sql/set-azsqlinstancedatabasevulnerabilityassessmentrulebaseline
  schema: 2.0.0
  content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Sql/Sql/help/Set-AzSqlInstanceDatabaseVulnerabilityAssessmentRuleBaseline.md
  original_content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Sql/Sql/help/Set-AzSqlInstanceDatabaseVulnerabilityAssessmentRuleBaseline.md
