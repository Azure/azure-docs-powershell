### YamlMime:PowershellCmdlet
summary: |-
  Gets a virtual network link associated with the specified Private DNS zone.
module: Az.PrivateDns
notes: ""
inputs:
- name: <xref href="None" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Azure.Commands.PrivateDns.Models.PSPrivateDnsVirtualNetworkLink" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: New-AzPrivateDnsVirtualNetworkLink
  href: ./New-AzPrivateDnsVirtualNetworkLink.yml
- text: Remove-AzPrivateDnsVirtualNetworkLink
  href: ./Remove-AzPrivateDnsVirtualNetworkLink.yml
- text: Set-AzPrivateDnsVirtualNetworkLink
  href: ./Set-AzPrivateDnsVirtualNetworkLink.yml
syntaxes:
- >-
  Get-AzPrivateDnsVirtualNetworkLink -ResourceGroupName <String> -ZoneName <String> [-Name <String>]

   [-DefaultProfile <IAzureContextContainer>] [<CommonParameters>]
examples:
- title: 'Example 1: Get a virtual network link.'
  code: |-
    PS C:\> $Link = Get-AzPrivateDnsVirtualNetworkLink -ResourceGroupName "MyResourceGroup" -ZoneName "myzone.com" -Name "mylink"

    The link object returned looks like the following:

    Name                    : mylink
    ResourceId              : /subscriptions/xxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/MyResourceGroup/providers/Microsoft.N
                              etwork/privateDnsZones/myzone.com/virtualNetworkLinks/mylink
    ResourceGroupName       : MyResourceGroup
    ZoneName                : myzone.com
    VirtualNetworkId        : /subscriptions/xxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/MyResourceGroup/providers/Microsoft.N
                              etwork/virtualNetworks/myvirtualnetwork
    Location                :
    Etag                    : "xxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
    Tags                    : {tag1}
    RegistrationEnabled     : True
    VirtualNetworkLinkState : Completed
    ProvisioningState       : Succeeded
  description: |-
    This example gets the virtual network link mylink associated with the Private DNS zone named myzone.com from the specified resource group, and then stores it in the $Link variable.
  summary: ""
- title: 'Example 2: Get all of the links associated with a zone in a resource group.'
  code: |-
    PS C:\> $Links = Get-AzPrivateDnsVirtualNetworkLink -ResourceGroupName "MyResourceGroup" -ZoneName "myzone.com"

    Name                    : mylink1
    ResourceId              : /subscriptions/xxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/MyResourceGroup/providers/Microsoft.N
                              etwork/privateDnsZones/myzone.com/virtualNetworkLinks/mylink1
    ResourceGroupName       : MyResourceGroup
    ZoneName                : myzone.com
    VirtualNetworkId        : /subscriptions/xxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/MyResourceGroup/providers/Microsoft.N
                              etwork/virtualNetworks/myvirtualnetwork
    Location                :
    Etag                    : "xxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
    Tags                    : {tag1}
    RegistrationEnabled     : True
    VirtualNetworkLinkState : Completed
    ProvisioningState       : Succeeded

    Name                    : mylink2
    ResourceId              : /subscriptions/xxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/MyResourceGroup/providers/Microsoft.N
                              etwork/privateDnsZones/myzone.com/virtualNetworkLinks/mylink2
    ResourceGroupName       : MyResourceGroup
    ZoneName                : myzone.com
    VirtualNetworkId        : /subscriptions/xxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/MyResourceGroup/providers/Microsoft.N
                              etwork/virtualNetworks/myvirtualnetwork
    Location                :
    Etag                    : "xxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
    Tags                    : {tag1}
    RegistrationEnabled     : True
    VirtualNetworkLinkState : Completed
    ProvisioningState       : Succeeded
  description: |-
    This example gets all of the virtual network links associated with the Private DNS zone "myzone.com" in the specified resource group, and then stores it in the $Links variable.
  summary: ""
parameters:
- type: <xref href="Microsoft.Azure.Commands.Common.Authentication.Abstractions.Core.IAzureContextContainer" data-throw-if-not-resolved="False" />
  name: DefaultProfile
  description: |+
    The credentials, account, tenant, and subscription used for communication with azure

  defaultValue: None
  position: Named
  aliases: AzContext, AzureRmContext, AzureCredential
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Name
  description: |+
    Specifies the name of the virtual network link to get.
    If you do not specify a value for the *Name* parameter, this cmdlet gets all links associated with the specified Private DNS zone in the specified resource group.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ResourceGroupName
  isRequired: true
  description: |+
    Specifies the name of the resource group that contains the virtual network link to get.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ZoneName
  isRequired: true
  description: |+
    Specifies the name of the Private DNS zone that the virtual network link is linked to.


  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
uid: Az.PrivateDns.Get-AzPrivateDnsVirtualNetworkLink
name: Get-AzPrivateDnsVirtualNetworkLink
description: |-
  The **Get-AzPrivateDnsVirtualNetworkLink** cmdlet gets virtual network links associated with a particular Private DNS zone from the specified resource group.
  If you specify the *Name* parameter, a single **PSPrivateDnsVirtualNetworkLink** object is returned.
  If you do not specify the *Name* parameter, an array containing all of the links associated with the zone in the specified resource group is returned.
  You can use the **PSPrivateDnsVirtualNetworkLink** object to update the link.
metadata:
  external help file: Microsoft.Azure.PowerShell.Cmdlets.PrivateDns.dll-Help.xml
  Module Name: Az.PrivateDns
  ms.assetid: B831ABE6-348C-4DD6-9295-18D23A1FDF63
  online version: https://docs.microsoft.com/en-us/powershell/module/az.privatedns/get-azprivatednsvirtualnetworklink
  schema: 2.0.0
  content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/PrivateDns/PrivateDns/help/Get-AzPrivateDnsVirtualNetworkLink.md
  original_content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/PrivateDns/PrivateDns/help/Get-AzPrivateDnsVirtualNetworkLink.md
