### YamlMime:PowershellCmdlet
summary: |-
  Creates a predefined Azure tag or adds values to an existing tag.
module: Az.Resources
notes: ""
inputs:
- name: <xref href="System.String" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Azure.Commands.ResourceManager.Common.Tags.PSTag" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Get-AzTag
  href: ./Get-AzTag.yml
- text: Remove-AzTag
  href: ./Remove-AzTag.yml
syntaxes:
- New-AzTag [-Name] <String> [[-Value] <String>] [-DefaultProfile <IAzureContextContainer>] [<CommonParameters>]
examples:
- title: 'Example 1: Create a predefined tag'
  code: "PS C:\\>New-AzTag -Name \"FY2015\"\r\n                                \r\nName   ValuesTable Count Values \r\n----   ----------- ----- ------\r\nFY2015             0     {}"
  description: |-
    This command creates a predefined tag named FY2015.
    This tag has no values.
    You can apply a tag with no values to a resource or resource group, or use **New-AzTag** to add values to the tag.
    You can also specify a value when you apply the tag to the resource or resource group.
  summary: ""
- title: 'Example 2: Create a predefined tag with a value'
  code: |-
    PS C:\>New-AzTag -Name "Department" -Value "Finance"
    Name:   Department
    Count:  0
    Values: 

            Name        Count
            =========   =====
            Finance     0
  description: |-
    This command creates a predefined tag named Department with a value of Finance.
  summary: ""
- title: 'Example 3: Add a value to a predefined tag'
  code: |-
    PS C:\>New-AzTag -Name "Department" -Value "Finance"
    Name:   Department
    Count:  0
    Values: 
            Name        Count
            =========   =====
            Finance     0 
    PS C:\>New-AzTag -Name "Department" -Value "IT"
    Name:   Department
    Count:  0
    Values: 
            Name        Count
            =========   =====
            Finance     0
            IT          0
  description: |-
    These commands create a predefined tag named Department with two values.
    If the tag name exists, **New-AzTag** adds the value to the existing tag instead of creating a new one.
  summary: ""
- title: 'Example 4: Use a predefined tag'
  code: "PS C:\\>New-AzTag -Name \"CostCenter\" -Value \"0001\"\r\nName:   CostCenter\r\nCount:  0\r\nValues: \r\n        Name        Count\r\n        =========   =====\r\n        0001        0 \r\nPS C:\\>Set-AzResourceGroup -Name \"EngineerBlog\" -Tag @{Name=\"CostCenter\";Value=\"0001\"}\r\nName:      EngineerBlog\r\nLocation:  East US\r\nResources: \r\n            \r\n  Name             Type                     Location\r\n    ===============  =======================  ========\r\n    EngineerBlog     Microsoft.Web/sites      West US\r\n    EngSvr01         Microsoft.Sql/servers    West US\r\n    EngDB02          Microsoft.Sql/databases  West US\r\nTags: \r\n    Name         Value\r\n    ==========   =====\r\n    CostCenter   0001 \r\nPS C:\\>Get-AzTag -Name \"CostCenter\"\r\nName:   CostCenter\r\nCount:  1\r\nValues: \r\n        Name        Count\r\n        =========   =====\r\n        0001        1 \r\nPS C:\\>Get-AzResourceGroup -Tag @{Name=\"CostCenter\"}\r\nName:      EngineerBlog\r\nLocation:  East US\r\nResources: \r\n     Name             Type                     Location\r\n    ===============  =======================  ========\r\n    EngineerBlog     Microsoft.Web/sites      West US\r\n\r\n    EngSvr01         Microsoft.Sql/servers    West US\r\n    EngDB02          Microsoft.Sql/databases  West US\r\nTags: \r\n    Name         Value\r\n    ==========   =====\r\n    CostCenter   0001"
  description: |-
    The commands in this example create and use a predefined tag.
  summary: ""
parameters:
- type: <xref href="Microsoft.Azure.Commands.Common.Authentication.Abstractions.Core.IAzureContextContainer" data-throw-if-not-resolved="False" />
  name: DefaultProfile
  description: |+
    The credentials, account, tenant, and subscription used for communication with azure.

  defaultValue: None
  position: Named
  aliases: AzContext, AzureRmContext, AzureCredential
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Name
  isRequired: true
  description: |+
    Specifies the tag name.
    To create a new predefined tag, enter a unique name.
    To add a value to an existing tag, enter the name of the existing tag.
    If an existing predefined tag has the specified name, **New-AzTag** adds the specified value, if any, to the tag with that name instead of creating a new tag.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Value
  description: |+
    Specifies a tag value.
    Predefined tags can have multiple values, but you can enter only one value in each command.
    This parameter is optional, because tags can have names without values.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: ""
  parameterValueGroup: ""
uid: Az.Resources.New-AzTag
name: New-AzTag
description: |-
  The **New-AzTag** cmdlet creates a predefined Azure tag with an optional predefined value.
  You can also use it to add additional values to existing predefined tags.
  To create a predefined tag, enter a unique tag name.
  To add a value to an existing predefined tag, specify the name of the existing tag and the new value.
  This cmdlet returns an object that represents the new or modified tag with its values and the number of resources to which it has been applied.
  The Azure Tags module that **New-AzTag** is part of can help you manage predefined Azure tags.
  An Azure tag is a name-value pair that you can use to categorize your Azure resources and resource groups, such as by department or cost center, or to track notes or comments about the resources and groups.
  You can define and apply tags in a single step, but predefined tags let you establish standard, consistent, predictable names and values for the tags in your subscription.
  To apply a predefined tag to a resource or resource group, use the *Tag* parameter of the New-AzTag cmdlet.
  To search for resource groups with a specified tag name or name and value, use the *Tag* parameter of the Get-AzResourceGroup cmdlet.
  Every tag has a name.
  The values are optional.
  A predefined Azure tag can have multiple values, but when you apply the tag to a resource or resource group, you apply the tag name and only one of its values.
  For example, you can create a predefined Department tag with a value for each department, such as Finance, Human Resources, and IT.
  When you apply the Department tag to a resource, you apply only one predefined value, such as Finance.
metadata:
  external help file: Microsoft.Azure.PowerShell.Cmdlets.Tags.dll-Help.xml
  Module Name: Az.Resources
  ms.assetid: 23DB0AD2-7EB7-4373-BB8D-BB6CB651DD54
  online version: https://docs.microsoft.com/en-us/powershell/module/az.resources/new-aztag
  schema: 2.0.0
  content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Resources/Resources/help/New-AzTag.md
  original_content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Resources/Resources/help/New-AzTag.md
