### YamlMime:PowershellCmdlet
summary: |-
  Lists Azure RBAC role assignments at the specified scope.
  By default it lists all role assignments in the selected Azure subscription.
  Use respective parameters to list assignments to a specific user, or to list assignments on a specific resource group or resource.
module: Az.Resources
notes: |-
  Keywords: azure, azurerm, arm, resource, management, manager, resource, group, template, deployment
inputs:
- name: <xref href="System.String" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="System.Guid" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Azure.Commands.Resources.Models.Authorization.PSRoleAssignment" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: New-AzRoleAssignment
  href: ./New-AzRoleAssignment.yml
- text: Remove-AzRoleAssignment
  href: ./Remove-AzRoleAssignment.yml
- text: Get-AzRoleDefinition
  href: ./Get-AzRoleDefinition.yml
syntaxes:
- >-
  Get-AzRoleAssignment [-RoleDefinitionName <String>] [-IncludeClassicAdministrators]

   [-DefaultProfile <IAzureContextContainer>] [<CommonParameters>]
- >-
  Get-AzRoleAssignment -ObjectId <String> [-RoleDefinitionName <String>] [-ExpandPrincipalGroups]

   [-IncludeClassicAdministrators] [-DefaultProfile <IAzureContextContainer>] [<CommonParameters>]
- >-
  Get-AzRoleAssignment -ObjectId <String> -ResourceGroupName <String> [-RoleDefinitionName <String>]

   [-IncludeClassicAdministrators] [-DefaultProfile <IAzureContextContainer>] [<CommonParameters>]
- >-
  Get-AzRoleAssignment -ObjectId <String> -ResourceGroupName <String> -ResourceName <String>

   -ResourceType <String> [-ParentResource <String>] [-RoleDefinitionName <String>]

   [-IncludeClassicAdministrators] [-DefaultProfile <IAzureContextContainer>] [<CommonParameters>]
- >-
  Get-AzRoleAssignment -ObjectId <String> [-RoleDefinitionName <String>] -Scope <String>

   [-IncludeClassicAdministrators] [-DefaultProfile <IAzureContextContainer>] [<CommonParameters>]
- >-
  Get-AzRoleAssignment [-ObjectId <String>] -RoleDefinitionId <Guid> [-Scope <String>]

   [-DefaultProfile <IAzureContextContainer>] [<CommonParameters>]
- >-
  Get-AzRoleAssignment -SignInName <String> -ResourceGroupName <String> [-RoleDefinitionName <String>]

   [-IncludeClassicAdministrators] [-DefaultProfile <IAzureContextContainer>] [<CommonParameters>]
- >-
  Get-AzRoleAssignment -SignInName <String> -ResourceGroupName <String> -ResourceName <String>

   -ResourceType <String> [-ParentResource <String>] [-RoleDefinitionName <String>]

   [-IncludeClassicAdministrators] [-DefaultProfile <IAzureContextContainer>] [<CommonParameters>]
- >-
  Get-AzRoleAssignment -SignInName <String> [-RoleDefinitionName <String>] -Scope <String>

   [-IncludeClassicAdministrators] [-DefaultProfile <IAzureContextContainer>] [<CommonParameters>]
- >-
  Get-AzRoleAssignment -SignInName <String> [-RoleDefinitionName <String>] [-ExpandPrincipalGroups]

   [-IncludeClassicAdministrators] [-DefaultProfile <IAzureContextContainer>] [<CommonParameters>]
- >-
  Get-AzRoleAssignment -ServicePrincipalName <String> -ResourceGroupName <String> [-RoleDefinitionName <String>]

   [-IncludeClassicAdministrators] [-DefaultProfile <IAzureContextContainer>] [<CommonParameters>]
- >-
  Get-AzRoleAssignment -ServicePrincipalName <String> -ResourceGroupName <String> -ResourceName <String>

   -ResourceType <String> [-ParentResource <String>] [-RoleDefinitionName <String>]

   [-IncludeClassicAdministrators] [-DefaultProfile <IAzureContextContainer>] [<CommonParameters>]
- >-
  Get-AzRoleAssignment -ServicePrincipalName <String> [-RoleDefinitionName <String>] -Scope <String>

   [-IncludeClassicAdministrators] [-DefaultProfile <IAzureContextContainer>] [<CommonParameters>]
- >-
  Get-AzRoleAssignment -ServicePrincipalName <String> [-RoleDefinitionName <String>]

   [-IncludeClassicAdministrators] [-DefaultProfile <IAzureContextContainer>] [<CommonParameters>]
- >-
  Get-AzRoleAssignment -ResourceGroupName <String> [-RoleDefinitionName <String>] [-IncludeClassicAdministrators]

   [-DefaultProfile <IAzureContextContainer>] [<CommonParameters>]
- >-
  Get-AzRoleAssignment -ResourceGroupName <String> -ResourceName <String> -ResourceType <String>

   [-ParentResource <String>] [-RoleDefinitionName <String>] [-IncludeClassicAdministrators]

   [-DefaultProfile <IAzureContextContainer>] [<CommonParameters>]
- >-
  Get-AzRoleAssignment [-RoleDefinitionName <String>] -Scope <String> [-IncludeClassicAdministrators]

   [-DefaultProfile <IAzureContextContainer>] [<CommonParameters>]
examples:
- title: Example 1
  code: |-
    PS C:\> Get-AzRoleAssignment
  description: |-
    List all role assignments in the subscription
  summary: ""
- title: Example 2
  code: |-
    PS C:\> Get-AzRoleAssignment -ResourceGroupName testRG -SignInName john.doe@contoso.com
  description: |-
    Gets all role assignments made to user john.doe@contoso.com, and the groups of which he is member, at the testRG scope or above.
  summary: ""
- title: Example 3
  code: |-
    PS C:\> Get-AzRoleAssignment -ServicePrincipalName "http://testapp1.com"
  description: |-
    Gets all role assignments of the specified service principal
  summary: ""
- title: Example 4
  code: |-
    PS C:\> Get-AzRoleAssignment -Scope "/subscriptions/96231a05-34ce-4eb4-aa6a-70759cbb5e83/resourcegroups/rg1/providers/Microsoft.Web/sites/site1"
  description: |-
    Gets role assignments at the 'site1' website scope.
  summary: ""
parameters:
- type: <xref href="Microsoft.Azure.Commands.Common.Authentication.Abstractions.Core.IAzureContextContainer" data-throw-if-not-resolved="False" />
  name: DefaultProfile
  description: |+
    The credentials, account, tenant, and subscription used for communication with azure

  defaultValue: None
  position: Named
  aliases: AzContext, AzureRmContext, AzureCredential
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: ExpandPrincipalGroups
  description: |+
    If specified, returns roles directly assigned to the user and to the groups of which the user is a member (transitively).
    Supported only for a user principal.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: IncludeClassicAdministrators
  description: |+
    If specified, also lists subscription classic administrators (co-admins, service admins, etc.) role assignments.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ObjectId
  isRequired: true
  description: |+
    The Azure AD ObjectId of the User, Group or Service Principal.
    Filters all assignments that are made to the specified principal.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: Id, PrincipalId
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ParentResource
  description: |+
    The parent resource in the hierarchy of the resource specified using ResourceName parameter.
    Must be used in conjunction with ResourceGroupName, ResourceType, and ResourceName parameters.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ResourceGroupName
  isRequired: true
  description: |+
    The resource group name.
    Lists role assignments that are effective at the specified resource group.
    When used in conjunction with ResourceName, ResourceType, and ParentResource parameters, the command lists assignments effective at resources within the resource group.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ResourceName
  isRequired: true
  description: |+
    The resource name.
    For e.g.
    storageaccountprod.
    Must be used in conjunction with ResourceGroupName, ResourceType, and (optionally)ParentResource parameters.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ResourceType
  isRequired: true
  description: |+
    The resource type.
    For e.g.
    Microsoft.Network/virtualNetworks.
    Must be used in conjunction with ResourceGroupName, ResourceName, and (optionally)ParentResource parameters.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Guid" data-throw-if-not-resolved="False" />
  name: RoleDefinitionId
  isRequired: true
  description: |+
    Id of the Role that is assigned to the principal.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: RoleDefinitionName
  description: |+
    Role that is assigned to the principal i.e.
    Reader, Contributor, Virtual Network Administrator, etc.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Scope
  isRequired: true
  description: |+
    The Scope of the role assignment.
    In the format of relative URI.
    For e.g.
    /subscriptions/9004a9fd-d58e-48dc-aeb2-4a4aec58606f/resourceGroups/TestRG.
    It must start with "/subscriptions/{id}".
    The command filters all assignments that are effective at that scope.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ServicePrincipalName
  isRequired: true
  description: |+
    The ServicePrincipalName of the service principal.
    Filters all assignments that are made to the specified Azure AD application.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: SPN
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: SignInName
  isRequired: true
  description: |+
    The email address or the user principal name of the user.
    Filters all assignments that are made to the specified user.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: Email, UserPrincipalName
  parameterValueGroup: ""
uid: Az.Resources.Get-AzRoleAssignment
name: Get-AzRoleAssignment
description: |-
  Use the Get-AzRoleAssignment command to list all role assignments that are effective on a scope.
  Without any parameters, this command returns all the role assignments made under the subscription.
  This list can  be filtered using filtering parameters for principal, role and scope.
  The subject of the assignment must be specified.
  To specify a user, use SignInName or Azure AD ObjectId parameters.
  To specify a security group, use Azure AD ObjectId parameter.
  And to specify an Azure AD application, use ServicePrincipalName or ObjectId parameters.
  The role that is being assigned must be specified using the RoleDefinitionName parameter.
  The scope at which access is being granted may be specified.
  It defaults to the selected subscription. 
  The scope of the assignment can be specified using one of the following parameter combinations
          a.
  Scope - This is the fully qualified scope starting with /subscriptions/\<subscriptionId\>.
  This will filter assignments that are effective at that particular scope i.e.
  all assignments at that scope and above.
          b.
  ResourceGroupName - Name of any resource group under the subscription.
  This will filter assignments effective at the specified resource group
          c.
  ResourceName, ResourceType, ResourceGroupName and (optionally) ParentResource - Identifies a particular resource under the subscription and will filter assignments effective at that resource scope.
  To determine what access a particular user has in the subscription, use the ExpandPrincipalGroups switch.
  This will list all roles assigned to the user, and to the groups that the user is member of.
  Use the IncludeClassicAdministrators switch to also display the subscription admins and co-admins.
metadata:
  external help file: Microsoft.Azure.PowerShell.Cmdlets.Resources.dll-Help.xml
  Module Name: Az.Resources
  ms.assetid: 488229AF-FD6D-4E1B-B3DA-E57CA781D91E
  online version: https://docs.microsoft.com/en-us/powershell/module/az.resources/get-azroleassignment
  schema: 2.0.0
  content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Resources/Resources/help/Get-AzRoleAssignment.md
  original_content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Resources/Resources/help/Get-AzRoleAssignment.md
