### YamlMime:PowershellCmdlet
summary: |-
  Creates an Azure resource group.
module: Az.Resources
notes: ""
inputs:
- name: <xref href="System.String" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Azure.Commands.ResourceManager.Cmdlets.SdkModels.PSResourceGroup" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Get-AzResourceProvider
  href: ./Get-AzResourceProvider.yml
- text: Get-AzResourceGroup
  href: ./Get-AzResourceGroup.yml
- text: New-AzResource
  href: ./New-AzResource.yml
- text: New-AzResourceGroupDeployment
  href: ./New-AzResourceGroupDeployment.yml
- text: Remove-AzResourceGroup
  href: ./Remove-AzResourceGroup.yml
- text: Set-AzResourceGroup
  href: ./Set-AzResourceGroup.yml
syntaxes:
- >-
  New-AzResourceGroup [-Name] <String> [-Location] <String> [-Tag <Hashtable>] [-Force] [-ApiVersion <String>]

   [-Pre] [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: 'Example 1: Create an empty resource group'
  code: |-
    PS> New-AzResourceGroup -Name RG01 -Location "South Central US"
  description: |-
    This command creates a resource group that has no resources. You can use the
    **New-AzResource** or **New-AzResourceGroupDeployment** cmdlets to add resources and
    deployments to this resource group.
  summary: ""
- title: 'Example 2: Create an empty resource group using positional parameters'
  code: |-
    PS> New-AzResourceGroup RG01 "South Central US"
  description: |-
    This command creates a resource group that has no resources.
  summary: ""
- title: 'Example 3: Create a resource group with tags'
  code: |-
    PS> New-AzResourceGroup -Name RG01 -Location "South Central US" -Tag @{Empty=$null; Department="Marketing"}
  description: |-
    This command creates an empty resource group. This command is the same as the command in Example 1,
    except that it assigns tags to the resource group. The first tag, named Empty, can be used to
    identify resource groups that have no resources. The second tag is named Department and has a value
    of Marketing. You can use a tag such as this one to categorize resource groups for administration
    or budgeting.
  summary: ""
parameters:
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ApiVersion
  description: |+
    Specifies the API version that is supported by the resource Provider.
    You can specify a different version than the default version.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Common.Authentication.Abstractions.Core.IAzureContextContainer" data-throw-if-not-resolved="False" />
  name: DefaultProfile
  description: |+
    The credentials, account, tenant, and subscription used for communication with azure

  defaultValue: None
  position: Named
  aliases: AzContext, AzureRmContext, AzureCredential
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Force
  description: |+
    Forces the command to run without asking for user confirmation.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Location
  isRequired: true
  description: |+
    Specifies the location of the resource group. Specify an Azure data center location, such as West
    US or Southeast Asia. You can place a resource group in any location. The resource group does not
    have to be in the same location your Azure subscription or in the same location as its resources.
    To determine which location supports each resource type, use the Get-AzResourceProvider cmdlet
    with the *ProviderNamespace* parameter.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Name
  isRequired: true
  description: |+
    Specifies a name for the resource group. The resource name must be unique in the subscription. If a
    resource group that has that name already exists, the command prompts you for confirmation before
    replacing the existing resource group.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ResourceGroupName
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Pre
  description: |+
    Indicates that this cmdlet considers pre-release API versions when it automatically determines which version to use.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="False" />
  name: Tag
  description: |+
    Key-value pairs in the form of a hash table. For example:
    @{key0="value0";key1=$null;key2="value2"}
    To add or change a tag, you must replace the collection of tags for the resource group.
    After you assign tags to resources and groups, you can use the *Tag* parameter of
    Get-AzResource and Get-AzResourceGroup to search for resources and groups by tag name or
    by name and value. You can use tags to categorize your resources, such as by department or cost
    center, or to track notes or comments about the resources.
    To get your predefined tags, use the Get-AzTag cmdlet.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: Tags
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Az.Resources.New-AzResourceGroup
name: New-AzResourceGroup
description: |-
  The **New-AzResourceGroup** cmdlet creates an Azure resource group.
  You can create a resource group by using just a name and location, and then use the
  New-AzResource cmdlet to create resources to add to the resource group.
  To add a deployment to an existing resource group, use the New-AzResourceGroupDeployment
  cmdlet. To add a resource to an existing resource group, use the **New-AzResource** cmdlet. An
  Azure resource is a user-managed Azure entity, such as a database server, database, or website. An
  Azure resource group is a collection of Azure resources that are deployed as a unit.
metadata:
  external help file: Microsoft.Azure.PowerShell.Cmdlets.ResourceManager.dll-Help.xml
  Module Name: Az.Resources
  ms.assetid: 0632DAD6-F331-454F-9E7E-2164AB413E77
  online version: https://docs.microsoft.com/en-us/powershell/module/az.resources/new-azresourcegroup
  schema: 2.0.0
  content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Resources/Resources/help/New-AzResourceGroup.md
  original_content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Resources/Resources/help/New-AzResourceGroup.md
