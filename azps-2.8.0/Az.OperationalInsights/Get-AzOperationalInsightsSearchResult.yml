### YamlMime:PowershellCmdlet
summary: |-
  Returns search results based on the specified parameters.
module: Az.OperationalInsights
notes: ""
inputs:
- name: <xref href="System.String" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="System.Int64" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="System.Nullable`1" data-throw-if-not-resolved="False" /><span>[</span><xref href="" data-throw-if-not-resolved="False" /><span>[</span><xref href="System.DateTime, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e" data-throw-if-not-resolved="False" /><span>]</span><span>]</span>
  description: ""
outputs:
- name: <xref href="Microsoft.Azure.Commands.OperationalInsights.Models.PSSearchGetSearchResultsResponse" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Get-AzOperationalInsightsSavedSearchResult
  href: ./Get-AzOperationalInsightsSavedSearchResult.yml
syntaxes:
- >-
  Get-AzOperationalInsightsSearchResult [-ResourceGroupName] <String> [-WorkspaceName] <String> [[-Top] <Int64>]

   [[-PreHighlight] <String>] [[-PostHighlight] <String>] [[-Query] <String>] [[-Start] <DateTime>]

   [[-End] <DateTime>] [[-Id] <String>] [-DefaultProfile <IAzureContextContainer>] [<CommonParameters>]
examples:
- title: 'Example 1: Get search results using a query'
  code: |-
    PS C:\>Get-AzOperationalInsightsSearchResult -ResourceGroupName "ContosoResourceGroup" -WorkspaceName "ContosoWorkspace" -Query "Type=Event" -Top 100
  description: |-
    This command gets all search results by using a query.
  summary: ""
- title: 'Example 2: Get search results using an ID'
  code: |-
    PS C:\>Get-AzOperationalInsightsSearchResult -ResourceGroupName "ContosoResourceGroup" -WorkspaceName "ContosoWorkspace" -Id "ContosoSearchId"
  description: |-
    This command gets search results by using an ID.
  summary: ""
- title: 'Example 3: Wait for a search to complete before displaying results'
  code: |-
    PS C:\>$error.clear()
    $response = @{}
    $StartTime = Get-Date

    $resGroup = "ContosoResourceGroup"
    $wrkspace = "ContosoWorkspace"

    # Sample Query
    $query = "Type=Event"

    # Get Initial response
    $response = Get-AzOperationalInsightsSearchResult -WorkspaceName $wrkspace -ResourceGroupName $resGroup -Query $query -Top 15000
    $elapsedTime = $(get-date) - $script:StartTime
    Write-Host "Elapsed: " $elapsedTime "Status: " $response.Metadata.Status

    # Split and extract request Id
    $reqIdParts = $response.Id.Split("/")
    $reqId = $reqIdParts[$reqIdParts.Count -1]

    # Poll if pending
    while($response.Metadata.Status -eq "Pending" -and $error.Count -eq 0) {
        $response = Get-AzOperationalInsightsSearchResult -WorkspaceName $wrkspace -ResourceGroupName $resGroup -Id $reqId
        $elapsedTime = $(get-date) - $script:StartTime
        Write-Host "Elapsed: " $elapsedTime "Status: " $response.Metadata.Status
    }

    Write-Host "Returned " $response.Value.Count " documents"
    Write-Host $error
  description: |-
    This script starts a search and waits until it completes before displaying the results.
  summary: ""
parameters:
- type: <xref href="Microsoft.Azure.Commands.Common.Authentication.Abstractions.Core.IAzureContextContainer" data-throw-if-not-resolved="False" />
  name: DefaultProfile
  description: |+
    The credentials, account, tenant, and subscription used for communication with azure

  defaultValue: None
  position: Named
  aliases: AzContext, AzureRmContext, AzureCredential
  parameterValueGroup: ""
- type: <xref href="System.Nullable`1" data-throw-if-not-resolved="False" /><span>[</span><xref href="System.DateTime" data-throw-if-not-resolved="False" /><span>]</span>
  name: End
  description: |+
    End of the queried time range.

  defaultValue: None
  pipelineInput: true
  position: "7"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Id
  description: |+
    If an id is given, the search results for that id will be retrieved using the original query parameters.

  defaultValue: None
  pipelineInput: true
  position: "8"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: PostHighlight
  description: ""
  defaultValue: None
  pipelineInput: true
  position: "4"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: PreHighlight
  description: ""
  defaultValue: None
  pipelineInput: true
  position: "3"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Query
  description: |+
    The search query that will be executed.

  defaultValue: None
  pipelineInput: true
  position: "5"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ResourceGroupName
  isRequired: true
  description: |+
    The name of the resource group that contains the workspace.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Nullable`1" data-throw-if-not-resolved="False" /><span>[</span><xref href="System.DateTime" data-throw-if-not-resolved="False" /><span>]</span>
  name: Start
  description: |+
    Start of the queried time range.

  defaultValue: None
  pipelineInput: true
  position: "6"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Int64" data-throw-if-not-resolved="False" />
  name: Top
  description: |+
    The maximum number of results to be returned, limited to 5000.

  defaultValue: "10"
  pipelineInput: true
  position: "2"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: WorkspaceName
  isRequired: true
  description: |+
    Specifies a workspace name.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: Name
  parameterValueGroup: ""
uid: Az.OperationalInsights.Get-AzOperationalInsightsSearchResult
name: Get-AzOperationalInsightsSearchResult
description: |-
  The **Get-AzOperationalInsightsSearchResult** cmdlet returns the search results based on the specified parameters.
  You can access the status of the search in the Metadata property of the returned object.
  If the status is Pending, then the search has not completed, and the results will be from the archive.
  You can retrieve the results of the search from the Value property of the returned object.
metadata:
  external help file: Microsoft.Azure.PowerShell.Cmdlets.OperationalInsights.dll-Help.xml
  Module Name: Az.OperationalInsights
  ms.assetid: 438F549D-1AF6-49FE-83AC-B45BAB701AB6
  online version: https://docs.microsoft.com/en-us/powershell/module/az.operationalinsights/get-azoperationalinsightssearchresult
  schema: 2.0.0
  content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/OperationalInsights/OperationalInsights/help/Get-AzOperationalInsightsSearchResult.md
  original_content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/OperationalInsights/OperationalInsights/help/Get-AzOperationalInsightsSearchResult.md
