### YamlMime:PowershellCmdlet
summary: |-
  Gets one or more databases.
module: Az.Sql
notes: ""
inputs:
- name: <xref href="System.String" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Azure.Commands.Sql.Database.Model.AzureSqlDatabaseModel" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: New-AzSqlDatabase
  href: ./New-AzSqlDatabase.yml
- text: Remove-AzSqlDatabase
  href: ./Remove-AzSqlDatabase.yml
- text: Resume-AzSqlDatabase
  href: ./Resume-AzSqlDatabase.yml
- text: Set-AzSqlDatabase
  href: ./Set-AzSqlDatabase.yml
- text: Suspend-AzSqlDatabase
  href: ./Suspend-AzSqlDatabase.yml
syntaxes:
- >-
  Get-AzSqlDatabase [[-DatabaseName] <String>] [-ServerName] <String> [-ResourceGroupName] <String>

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: 'Example 1: Get all databases on a server'
  code: |-
    PS C:\>Get-AzSqlDatabase -ResourceGroupName "resourcegroup01" -ServerName "server01"
    ResourceGroupName             : resourcegroup01
    ServerName                    : server01
    DatabaseName                  : master
    Location                      : Central US
    DatabaseId                    : a2a7f2db-7526-4d86-a7b2-36276ee10dc6
    Edition                       : None
    CollationName                 : SQL_Latin1_General_CP1_CI_AS
    CatalogCollation              : 
    MaxSizeBytes                  : 5368709120
    Status                        : Online
    CreationDate                  : 7/3/2015 7:32:44 AM
    CurrentServiceObjectiveId     : c99ac918-dbea-463f-a475-16ec020fdc12
    CurrentServiceObjectiveName   : System1
    RequestedServiceObjectiveId   : c99ac918-dbea-463f-a475-16ec020fdc12
    RequestedServiceObjectiveName : 
    ElasticPoolName               : 
    EarliestRestoreDate           : 
    Tags                          : 

    ResourceGroupName             : resourcegroup01
    ServerName                    : server01
    DatabaseName                  : database01
    Location                      : Central US
    DatabaseId                    : a1e6bd1a-735a-4d48-8b98-afead5ef1218
    Edition                       : Standard
    CollationName                 : SQL_Latin1_General_CP1_CI_AS
    CatalogCollation              : 
    MaxSizeBytes                  : 268435456000
    Status                        : Online
    CreationDate                  : 7/3/2015 7:33:37 AM
    CurrentServiceObjectiveId     : f1173c43-91bd-4aaa-973c-54e79e15235b
    CurrentServiceObjectiveName   : S0
    RequestedServiceObjectiveId   : f1173c43-91bd-4aaa-973c-54e79e15235b
    RequestedServiceObjectiveName : 
    ElasticPoolName               : 
    EarliestRestoreDate           : 
    Tags                          :
  description: |-
    This command gets all databases on the server named server01.
  summary: ""
- title: 'Example 2: Get a database by name on a server'
  code: |-
    PS C:\>Get-AzSqlDatabase -ResourceGroupName "ResourceGroup01" -ServerName "Server01" -DatabaseName "Database02"
    ResourceGroupName             : resourcegroup01
    ServerName                    : server01
    DatabaseName                  : database02
    Location                      : Central US
    DatabaseId                    : a1e6bd1a-735a-4d48-8b98-afead5ef1218
    Edition                       : Standard
    CollationName                 : SQL_Latin1_General_CP1_CI_AS
    CatalogCollation              : 
    MaxSizeBytes                  : 268435456000
    Status                        : Online
    CreationDate                  : 7/3/2015 7:33:37 AM
    CurrentServiceObjectiveId     : f1173c43-91bd-4aaa-973c-54e79e15235b
    CurrentServiceObjectiveName   : S0
    RequestedServiceObjectiveId   : f1173c43-91bd-4aaa-973c-54e79e15235b
    RequestedServiceObjectiveName : 
    ElasticPoolName               : 
    EarliestRestoreDate           : 
    Tags                          :
  description: |-
    This command gets a database named Database02 from a server named Server01.
  summary: ""
- title: 'Example 3: Get all databases on a server using filtering'
  code: |-
    PS C:\> Get-AzSqlDatabase -ResourceGroupName "resourcegroup01" -ServerName "server01" -DatabaseName "database*"
    ResourceGroupName             : resourcegroup01
    ServerName                    : server01
    DatabaseName                  : database01
    Location                      : Central US
    DatabaseId                    : a2a7f2db-7526-4d86-a7b2-36276ee10dc6
    Edition                       : None
    CollationName                 : SQL_Latin1_General_CP1_CI_AS
    CatalogCollation              : 
    MaxSizeBytes                  : 5368709120
    Status                        : Online
    CreationDate                  : 7/3/2015 7:32:44 AM
    CurrentServiceObjectiveId     : c99ac918-dbea-463f-a475-16ec020fdc12
    CurrentServiceObjectiveName   : System1
    RequestedServiceObjectiveId   : c99ac918-dbea-463f-a475-16ec020fdc12
    RequestedServiceObjectiveName : 
    ElasticPoolName               : 
    EarliestRestoreDate           : 
    Tags                          : 

    ResourceGroupName             : resourcegroup01
    ServerName                    : server01
    DatabaseName                  : database02
    Location                      : Central US
    DatabaseId                    : a1e6bd1a-735a-4d48-8b98-afead5ef1218
    Edition                       : Standard
    CollationName                 : SQL_Latin1_General_CP1_CI_AS
    CatalogCollation              : 
    MaxSizeBytes                  : 268435456000
    Status                        : Online
    CreationDate                  : 7/3/2015 7:33:37 AM
    CurrentServiceObjectiveId     : f1173c43-91bd-4aaa-973c-54e79e15235b
    CurrentServiceObjectiveName   : S0
    RequestedServiceObjectiveId   : f1173c43-91bd-4aaa-973c-54e79e15235b
    RequestedServiceObjectiveName : 
    ElasticPoolName               : 
    EarliestRestoreDate           : 
    Tags                          :
  description: |-
    This command gets all databases on the server named server01 that start with "database".
  summary: ""
parameters:
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: DatabaseName
  description: |+
    Specifies the name of the database to retrieve.

  defaultValue: None
  acceptWildcardCharacters: true
  pipelineInput: true
  position: "2"
  aliases: Name
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Common.Authentication.Abstractions.Core.IAzureContextContainer" data-throw-if-not-resolved="False" />
  name: DefaultProfile
  description: |+
    The credentials, account, tenant, and subscription used for communication with azure

  defaultValue: None
  position: Named
  aliases: AzContext, AzureRmContext, AzureCredential
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ResourceGroupName
  isRequired: true
  description: |+
    Specifies the name of the resource group to which the database server is assigned.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ServerName
  isRequired: true
  description: |+
    Specifies the name of the server to which the database is assigned.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Az.Sql.Get-AzSqlDatabase
name: Get-AzSqlDatabase
description: |-
  The **Get-AzSqlDatabase** cmdlet gets one or more Azure SQL databases from an Azure SQL Database Server.
  This cmdlet is also supported by the SQL Server Stretch Database service on Azure.
metadata:
  external help file: Microsoft.Azure.PowerShell.Cmdlets.Sql.dll-Help.xml
  Module Name: Az.Sql
  ms.assetid: 0C8AC52C-4E70-493C-A299-79CE32EC5EF1
  online version: https://docs.microsoft.com/en-us/powershell/module/az.sql/get-azsqldatabase
  schema: 2.0.0
  content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Sql/Sql/help/Get-AzSqlDatabase.md
  original_content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Sql/Sql/help/Get-AzSqlDatabase.md
