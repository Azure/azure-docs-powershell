### YamlMime:PowershellCmdlet
summary: |-
  Gets one or more long term retention backups.
module: Az.Sql
notes: ""
inputs:
- name: <xref href="Microsoft.Azure.Commands.Sql.Database.Model.AzureSqlDatabaseModel" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="System.String" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Azure.Commands.Sql.Backup.Model.AzureSqlDatabaseLongTermRetentionBackupModel" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Remove-AzSqlDatabaseLongTermRetentionBackup
  href: ./Remove-AzSqlDatabaseLongTermRetentionBackup.yml
- text: Get-AzSqlDatabaseBackupLongTermRetentionPolicy
  href: ./Get-AzSqlDatabaseBackupLongTermRetentionPolicy.yml
- text: Set-AzSqlDatabaseBackupLongTermRetentionPolicy
  href: ./Set-AzSqlDatabaseBackupLongTermRetentionPolicy.yml
- text: SQL Database Documentation
  href: https://docs.microsoft.com/azure/sql-database/
syntaxes:
- >-
  Get-AzSqlDatabaseLongTermRetentionBackup [-Location] <String> [[-ResourceGroupName] <String>]

   [-OnlyLatestPerDatabase] [-DatabaseState <String>] [-DefaultProfile <IAzureContextContainer>] [-WhatIf]

   [-Confirm] [<CommonParameters>]
- >-
  Get-AzSqlDatabaseLongTermRetentionBackup [-Location] <String> [-ServerName] <String> [-DatabaseName <String>]

   [[-ResourceGroupName] <String>] [-OnlyLatestPerDatabase] [-DatabaseState <String>]

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Get-AzSqlDatabaseLongTermRetentionBackup [-Location] <String> [-ServerName] <String> -DatabaseName <String>

   [-BackupName] <String> [[-ResourceGroupName] <String>] [-DefaultProfile <IAzureContextContainer>] [-WhatIf]

   [-Confirm] [<CommonParameters>]
- >-
  Get-AzSqlDatabaseLongTermRetentionBackup [-Location] <String> [-ResourceId] <String> [-BackupName] <String>

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Get-AzSqlDatabaseLongTermRetentionBackup [-Location] <String> [-ResourceId] <String> [-OnlyLatestPerDatabase]

   [-DatabaseState <String>] [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Get-AzSqlDatabaseLongTermRetentionBackup [-InputObject] <AzureSqlDatabaseModel> [-BackupName] <String>

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Get-AzSqlDatabaseLongTermRetentionBackup [-InputObject] <AzureSqlDatabaseModel> [-OnlyLatestPerDatabase]

   [-DatabaseState <String>] [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: 'Example 1: Get all backups for a location'
  code: |-
    PS C:\> Get-AzSqlDatabaseLongTermRetentionBackup -Location northeurope


    BackupExpirationTime : 3/22/2018 5:50:55 AM
    BackupName           : 601061b7-d10b-46e0-bf77-a2bfb16a6add;131655666550000000
    BackupTime           : 3/15/2018 5:50:55 AM
    DatabaseName         : database01
    DatabaseDeletionTime :
    Location         : northeurope
    ResourceId           : /subscriptions/371edd6d-9630-4558-a7bd-ee139498e6a1/resourceGroups/resourcegroup01/providers/Microsoft.Sql/locations/northeurope/longTermRetentionServers/server01/longTermRetentionDatabases/database01/longTermRetentionBackups/601061b7-d10b-46e0-bf77-a2bfb16a6add;131655666550000000
    ServerName           : server01
    ServerCreateTime     : 2/29/2018 12:12:19 AM

    BackupExpirationTime : 3/22/2018 11:43:18 PM
    BackupName           : 55970792-164c-4a4a-88e5-7158d092d503;131656309980000000
    BackupTime           : 3/15/2018 11:43:18 PM
    DatabaseName         : database02
    DatabaseDeletionTime : 3/18/2018 4:36:00 PM
    Location         : northeurope
    ResourceId           : /subscriptions/371edd6d-9630-4558-a7bd-ee139498e6a1/providers/Microsoft.Sql/locations/northeurope/longTermRetentionServers/server02/longTermRetentionDatabases/database02/longTermRetentionBackups/55970792-164c-4a4a-88e5-7158d092d503;131656309980000000
    ServerName           : server02
    ServerCreateTime     : 2/28/2018 12:12:19 AM
  description: |-
    This command gets all long term retention backups for all databases (which may be alive or deleted) in northeurope, resource group will be set only if server is live.
  summary: ""
- title: 'Example 2: Get all backups for a location under a resource group'
  code: |-
    PS C:\> Get-AzSqlDatabaseLongTermRetentionBackup -Location northeurope -ResourceGroup resourceGroup01


    BackupExpirationTime : 3/22/2018 5:50:55 AM
    BackupName           : 601061b7-d10b-46e0-bf77-a2bfb16a6add;131655666550000000
    BackupTime           : 3/15/2018 5:50:55 AM
    DatabaseName         : database01
    DatabaseDeletionTime :
    Location         : northeurope
    ResourceId           : /subscriptions/371edd6d-9630-4558-a7bd-ee139498e6a1/resourceGroups/resourcegroup01/providers/Microsoft.Sql/locations/northeurope/longTermRetentionServers/server01/longTermRetentionDatabases/database01/longTermRetentionBackups/601061b7-d10b-46e0-bf77-a2bfb16a6add;131655666550000000
    ServerName           : server01
    ServerCreateTime     : 2/29/2018 12:12:19 AM
  description: |-
    This command gets all long term retention backups for all databases (which may be alive or deleted) under a resource group in northeurope.
  summary: ""
- title: 'Example 3: Get a specific long term retention backup'
  code: |-
    PS C:\> Get-AzSqlDatabaseLongTermRetentionBackup -Location northeurope -ServerName server01 -DatabaseName database01 -BackupName "601061b7-d10b-46e0-bf77-a2bfb16a6add;131655666550000000"


    BackupExpirationTime : 3/22/2018 5:50:55 AM
    BackupName           : 601061b7-d10b-46e0-bf77-a2bfb16a6add;131655666550000000
    BackupTime           : 3/15/2018 5:50:55 AM
    DatabaseName         : database01
    DatabaseDeletionTime :
    Location         : northeurope
    ResourceId           : /subscriptions/371edd6d-9630-4558-a7bd-ee139498e6a1/resourceGroups/resourcegroup01/providers/Microsoft.Sql/locations/northeurope/longTermRetentionServers/server01/longTermRetentionDatabases/database01/longTermRetentionBackups/601061b7-d10b-46e0-bf77-a2bfb16a6add;131655666550000000
    ServerName           : server01
    ServerCreateTime     : 2/29/2018 12:12:19 AM
  description: |-
    This command gets the backup with name 601061b7-d10b-46e0-bf77-a2bfb16a6add;131655666550000000
  summary: ""
- title: 'Example 4: Get all long term retention backups for a database'
  code: |-
    PS C:\> Get-AzSqlDatabase -ResourceGroupName resourcegroup01 -ServerName server01 -DatabaseName database01 | Get-AzSqlDatabaseLongTermRetentionBackup


    BackupExpirationTime : 3/22/2018 5:50:55 AM
    BackupName           : 601061b7-d10b-46e0-bf77-a2bfb16a6add;131655666550000000
    BackupTime           : 3/15/2018 5:50:55 AM
    DatabaseName         : database01
    DatabaseDeletionTime :
    Location         : northeurope
    ResourceId           : /subscriptions/371edd6d-9630-4558-a7bd-ee139498e6a1/resourceGroups/resourcegroup01/providers/Microsoft.Sql/locations/northeurope/longTermRetentionServers/server01/longTermRetentionDatabases/database01/longTermRetentionBackups/601061b7-d10b-46e0-bf77-a2bfb16a6add;131655666550000000
    ServerName           : server01
    ServerCreateTime     : 2/29/2018 12:12:19 AM
  description: |-
    This command gets all long term retention backups for database01
  summary: ""
- title: 'Example 5: Get long term retention backups using filtering'
  code: |-
    PS C:\> Get-AzSqlDatabaseLongTermRetentionBackup -Location northeurope -ServerName server01 -DatabaseName database01 -BackupName "601061b7*"

    BackupExpirationTime : 3/22/2018 11:43:18 PM
    BackupName           : 601061b7-164c-4a4a-88e5-7158d092d503;131656309980000000
    BackupTime           : 3/15/2018 11:43:18 PM
    DatabaseName         : database02
    DatabaseDeletionTime : 3/18/2018 4:36:00 PM
    Location         : northeurope
    ResourceId           : /subscriptions/371edd6d-9630-4558-a7bd-ee139498e6a1/resourceGroups/resourcegroup01/Microsoft.Sql/locations/northeurope/longTermRetentionServers/server01/longTermRetentionDatabases/database02/longTermRetentionBackups/601061b7-164c-4a4a-88e5-7158d092d503;131656309980000000
    ServerName           : server01
    ServerCreateTime     : 2/28/2018 12:12:19 AM

    BackupExpirationTime : 3/22/2018 5:50:55 AM
    BackupName           : 601061b7-d10b-46e0-bf77-a2bfb16a6add;131655666550000000
    BackupTime           : 3/15/2018 5:50:55 AM
    DatabaseName         : database01
    DatabaseDeletionTime :
    Location         : northeurope
    ResourceId           : /subscriptions/371edd6d-9630-4558-a7bd-ee139498e6a1/resourceGroups/resourcegroup01/providers/Microsoft.Sql/locations/northeurope/longTermRetentionServers/server01/longTermRetentionDatabases/database01/longTermRetentionBackups/601061b7-d10b-46e0-bf77-a2bfb16a6add;131655666550000000
    ServerName           : server01
    ServerCreateTime     : 2/29/2018 12:12:19 AM
  description: |-
    This command gets all backups with name that starts with "601061b7"
  summary: ""
parameters:
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: BackupName
  isRequired: true
  description: |+
    The name of the backup.

  defaultValue: None
  pipelineInput: true
  position: "3"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: DatabaseName
  isRequired: true
  description: |+
    The name of the Azure SQL Database the backup is from.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: DatabaseState
  description: |+
    The state of the database whose backups you want to find, Alive, Deleted, or All.
    Defaults to All

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: All, Deleted, Live
- type: <xref href="Microsoft.Azure.Commands.Common.Authentication.Abstractions.Core.IAzureContextContainer" data-throw-if-not-resolved="False" />
  name: DefaultProfile
  description: |+
    The credentials, account, tenant, and subscription used for communication with Azure.

  defaultValue: None
  position: Named
  aliases: AzContext, AzureRmContext, AzureCredential
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Sql.Database.Model.AzureSqlDatabaseModel" data-throw-if-not-resolved="False" />
  name: InputObject
  isRequired: true
  description: |+
    The database object to get backups for.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Location
  isRequired: true
  description: |+
    The location of the backups' source server.

  defaultValue: None
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: OnlyLatestPerDatabase
  description: |+
    Whether or not to only get the latest backup per database.
    Defaults to false.

  defaultValue: "False"
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ResourceGroupName
  description: |+
    The name of the resource group.

  defaultValue: None
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ResourceId
  isRequired: true
  description: |+
    The database Resource ID to get backups for.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ServerName
  isRequired: true
  description: |+
    The name of the Azure SQL Server the backups are under.

  defaultValue: None
  position: "1"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Az.Sql.Get-AzSqlDatabaseLongTermRetentionBackup
name: Get-AzSqlDatabaseLongTermRetentionBackup
description: |-
  The **Get-AzSqlDatabaseLongTermRetentionBackup** cmdlet gets all long term retention backups for a location, server, or database or gets a specific long term retention backup.
metadata:
  external help file: Microsoft.Azure.PowerShell.Cmdlets.Sql.dll-Help.xml
  Module Name: Az.Sql
  online version: https://docs.microsoft.com/en-us/powershell/module/az.sql/get-azsqldatabaselongtermretentionbackup
  schema: 2.0.0
  content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Sql/Sql/help/Get-AzSqlDatabaseLongTermRetentionBackup.md
  original_content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Sql/Sql/help/Get-AzSqlDatabaseLongTermRetentionBackup.md
