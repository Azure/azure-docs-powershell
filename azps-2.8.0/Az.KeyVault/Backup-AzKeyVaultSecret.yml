### YamlMime:PowershellCmdlet
summary: |-
  Backs up a secret in a key vault.
module: Az.KeyVault
notes: ""
inputs:
- name: <xref href="Microsoft.Azure.Commands.KeyVault.Models.PSKeyVaultSecretIdentityItem" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="System.String" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Set-AzKeyVaultSecret
  href: ./Set-AzKeyVaultSecret.yml
- text: Get-AzKeyVaultSecret
  href: ./Get-AzKeyVaultSecret.yml
- text: Remove-AzKeyVaultSecret
  href: ./Remove-AzKeyVaultSecret.yml
- text: Restore-AzKeyVaultSecret
  href: ./Restore-AzKeyVaultSecret.yml
syntaxes:
- >-
  Backup-AzKeyVaultSecret [-VaultName] <String> [-Name] <String> [[-OutputFile] <String>] [-Force]

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Backup-AzKeyVaultSecret [-InputObject] <PSKeyVaultSecretIdentityItem> [[-OutputFile] <String>] [-Force]

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: 'Example 1: Back up a secret with an automatically generated file name'
  code: |-
    PS C:\Users\username\> Backup-AzKeyVaultSecret -VaultName 'MyKeyVault' -Name 'MySecret'

    C:\Users\username\mykeyvault-mysecret-1527029447.01191
  description: |-
    This command retrieves the secret named MySecret from the key vault named MyKeyVault and saves a backup of that secret to a file that is automatically named for you, and displays the file name.
  summary: ""
- title: 'Example 2: Back up a secret to a specified file name, overwriting the existing file without prompting'
  code: |-
    PS C:\> Backup-AzKeyVaultSecret -VaultName 'MyKeyVault' -Name 'MySecret' -OutputFile 'C:\Backup.blob' -Force

    C:\Backup.blob
  description: |-
    This command retrieves the secret named MySecret from the key vaultnamed MyKeyVault and saves a backup of that secret to a file named Backup.blob.
  summary: ""
- title: 'Example 3: Back up a secret previously retrieved to a specified file name'
  code: |-
    PS C:\> $secret = Get-AzKeyVaultSecret -VaultName 'MyKeyVault' -Name 'MySecret'
    PS C:\> Backup-AzKeyVaultSecret -Secret $secret -OutputFile 'C:\Backup.blob'

    C:\Backup.blob
  description: |-
    This command uses the $secret object's vault name and name to retrieves the secret and saves its backup to a file named Backup.blob.
  summary: ""
parameters:
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Common.Authentication.Abstractions.Core.IAzureContextContainer" data-throw-if-not-resolved="False" />
  name: DefaultProfile
  description: |+
    The credentials, account, tenant, and subscription used for communication with azure

  defaultValue: None
  position: Named
  aliases: AzContext, AzureRmContext, AzureCredential
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Force
  description: |+
    Prompts you for confirmation before overwriting the output file, if that exists.

  defaultValue: "False"
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.KeyVault.Models.PSKeyVaultSecretIdentityItem" data-throw-if-not-resolved="False" />
  name: InputObject
  isRequired: true
  description: |+
    Secret to be backed up, pipelined in from the output of a retrieval call.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: Secret
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Name
  isRequired: true
  description: |+
    Specifies the name of the secret to back up.

  defaultValue: None
  position: "1"
  aliases: SecretName
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: OutputFile
  description: |+
    Specifies the output file in which the backup blob is stored.
    If you do not specify this parameter, this cmdlet generates a file name for you.
    If you specify the name of an existing output file, the operation will not complete and returns an error message that the backup file already exists.

  defaultValue: None
  position: "2"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: VaultName
  isRequired: true
  description: |+
    Specifies the name of the key vault that contains the secret to back up.

  defaultValue: None
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Az.KeyVault.Backup-AzKeyVaultSecret
name: Backup-AzKeyVaultSecret
description: |-
  The **Backup-AzKeyVaultSecret** cmdlet backs up a specified secret in a key vault by downloading it and storing it in a file.
  If there are multiple versions of the secret, all versions are included in the backup.
  Because the downloaded content is encrypted, it cannot be used outside of Azure Key Vault.
  You can restore a backed-up secret to any key vault in the subscription that it was backed up from.
  Typical reasons to use this cmdlet are:
  - You want to escrow a copy of your secret, so that you have an offline copy in case you accidentally delete your secret in your key vault.
  - You added a secret to a key vault and now want to clone the secret into a different Azure region, so that you can use it from all instances of your distributed application. Use the Backup-AzKeyVaultSecret cmdlet to retrieve the secret in encrypted format and then use the Restore-AzKeyVaultSecret cmdlet and specify a key vault in the second region. (Note that the regions must belong to the same geography.)
metadata:
  external help file: Microsoft.Azure.PowerShell.Cmdlets.KeyVault.dll-Help.xml
  Module Name: Az.KeyVault
  ms.assetid: 80AAA327-77C6-4372-9461-FFED5A15E678
  online version: https://docs.microsoft.com/en-us/powershell/module/az.keyvault/backup-azkeyvaultsecret
  schema: 2.0.0
  content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/KeyVault/KeyVault/help/Backup-AzKeyVaultSecret.md
  original_content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/KeyVault/KeyVault/help/Backup-AzKeyVaultSecret.md
