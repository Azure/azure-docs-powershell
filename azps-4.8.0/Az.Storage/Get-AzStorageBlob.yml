### YamlMime:PowershellCmdlet
summary: |-
  Lists blobs in a container.
module: Az.Storage
notes: ""
inputs:
- name: <xref href="System.String" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="Microsoft.Azure.Commands.Common.Authentication.Abstractions.IStorageContext" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.WindowsAzure.Commands.Common.Storage.ResourceModel.AzureStorageBlob" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Get-AzStorageBlobContent
  href: ./Get-AzStorageBlobContent.yml
- text: Remove-AzStorageBlob
  href: ./Remove-AzStorageBlob.yml
- text: Set-AzStorageBlobContent
  href: ./Set-AzStorageBlobContent.yml
syntaxes:
- >-
  Get-AzStorageBlob [[-Blob] <String>] [-Container] <String> [-IncludeDeleted] [-MaxCount <Int32>]

   [-ContinuationToken <BlobContinuationToken>] [-Context <IStorageContext>] [-ServerTimeoutPerRequest <Int32>]

   [-ClientTimeoutPerRequest <Int32>] [-DefaultProfile <IAzureContextContainer>] [-ConcurrentTaskCount <Int32>]

   [<CommonParameters>]
- >-
  Get-AzStorageBlob [-Blob] <String> [-Container] <String> [-IncludeDeleted] -SnapshotTime <DateTimeOffset>

   [-MaxCount <Int32>] [-ContinuationToken <BlobContinuationToken>] [-Context <IStorageContext>]

   [-ServerTimeoutPerRequest <Int32>] [-ClientTimeoutPerRequest <Int32>]

   [-DefaultProfile <IAzureContextContainer>] [-ConcurrentTaskCount <Int32>] [<CommonParameters>]
- >-
  Get-AzStorageBlob [-Blob] <String> [-Container] <String> [-IncludeDeleted] -VersionId <String>

   [-MaxCount <Int32>] [-ContinuationToken <BlobContinuationToken>] [-Context <IStorageContext>]

   [-ServerTimeoutPerRequest <Int32>] [-ClientTimeoutPerRequest <Int32>]

   [-DefaultProfile <IAzureContextContainer>] [-ConcurrentTaskCount <Int32>] [<CommonParameters>]
- >-
  Get-AzStorageBlob [-Prefix <String>] [-Container] <String> [-IncludeDeleted] [-IncludeVersion]

   [-MaxCount <Int32>] [-ContinuationToken <BlobContinuationToken>] [-Context <IStorageContext>]

   [-ServerTimeoutPerRequest <Int32>] [-ClientTimeoutPerRequest <Int32>]

   [-DefaultProfile <IAzureContextContainer>] [-ConcurrentTaskCount <Int32>] [<CommonParameters>]
examples:
- title: 'Example 1: Get a blob by blob name'
  code: |-
    PS C:\>Get-AzStorageBlob -Container "ContainerName" -Blob blob*
  description: |-
    This command uses a blob name and wildcard to get a blob.
  summary: ""
- title: 'Example 2: Get blobs in a container by using the pipeline'
  code: |-
    PS C:\>Get-AzStorageContainer -Name container* | Get-AzStorageBlob -IncludeDeleted

       Container Uri: https://storageaccountname.blob.core.windows.net/container1

    Name                 BlobType  Length          ContentType                    LastModified         AccessTier SnapshotTime         IsDeleted 
    ----                 --------  ------          -----------                    ------------         ---------- ------------         --------- 
    test1                BlockBlob 403116          application/octet-stream       2017-11-08 07:53:19Z            2017-11-08 08:19:32Z True      
    test1                BlockBlob 403116          application/octet-stream       2017-11-08 09:00:29Z                                 True      
    test2                BlockBlob 403116          application/octet-stream       2017-11-08 07:53:00Z                                 False
  description: |-
    This command uses the pipeline to get all blobs (include blobs in Deleted status) in a container.
  summary: ""
- title: 'Example 3: Get blobs by name prefix'
  code: |-
    PS C:\>Get-AzStorageBlob -Container "ContainerName" -Prefix "blob"
  description: |-
    This command uses a name prefix to get blobs.
  summary: ""
- title: 'Example 4: List blobs in multiple batches'
  code: |-
    PS C:\>$MaxReturn = 10000
    PS C:\> $ContainerName = "abc"
    PS C:\> $Total = 0
    PS C:\> $Token = $Null
    PS C:\> do
     {
         $Blobs = Get-AzStorageBlob -Container $ContainerName -MaxCount $MaxReturn  -ContinuationToken $Token
         $Total += $Blobs.Count
         if($Blobs.Length -le 0) { Break;}
         $Token = $Blobs[$blobs.Count -1].ContinuationToken;
     }
     While ($Token -ne $Null)
    PS C:\> Echo "Total $Total blobs in container $ContainerName"
  description: |-
    This example uses the *MaxCount* and *ContinuationToken* parameters to list Azure Storage blobs in multiple batches.
    The first four commands assign values to variables to use in the example.
    The fifth command specifies a **Do-While** statement that uses the **Get-AzStorageBlob** cmdlet to get blobs.
    The statement includes the continuation token stored in the $Token variable.
    $Token changes value as the loop runs.
    For more information, type `Get-Help About_Do`.
    The final command uses the **Echo** command to display the total.
  summary: ""
- title: 'Example 5: Get all blobs in a container include blob version'
  code: |-
    PS C:\>Get-AzStorageBlob -Container "containername"  -IncludeVersion 

       AccountName: storageaccountname, ContainerName: containername

    Name                 BlobType  Length          ContentType                    LastModified         AccessTier SnapshotTime                 IsDeleted  VersionId                     
    ----                 --------  ------          -----------                    ------------         ---------- ------------                 ---------  ---------                     
    blob1                BlockBlob 2097152         application/octet-stream       2020-07-06 06:56:06Z Hot                                     False      2020-07-06T06:56:06.2432658Z  
    blob1                BlockBlob 2097152         application/octet-stream       2020-07-06 06:56:06Z Hot        2020-07-06T06:56:06.8588431Z False                                    
    blob1                BlockBlob 2097152         application/octet-stream       2020-07-06 06:56:06Z Hot                                     False      2020-07-06T06:56:06.8598431Z *  
    blob2                BlockBlob 2097152         application/octet-stream       2020-07-03 16:19:16Z Hot                                     False      2020-07-03T16:19:16.2883167Z  
    blob2                BlockBlob 2097152         application/octet-stream       2020-07-03 16:19:35Z Hot                                     False      2020-07-03T16:19:35.2381110Z *
  description: |-
    This command gets all blobs in a container include blob version.
  summary: ""
- title: 'Example 6: Get a single blob version'
  code: |-
    PS C:\> Get-AzStorageBlob -Container "containername" -Blob blob2 -VersionId "2020-07-03T16:19:16.2883167Z" 

       AccountName: storageaccountname, ContainerName: containername

    Name                 BlobType  Length          ContentType                    LastModified         AccessTier SnapshotTime                 IsDeleted  VersionId                     
    ----                 --------  ------          -----------                    ------------         ---------- ------------                 ---------  ---------                     
    blob2                BlockBlob 2097152         application/octet-stream       2020-07-03 16:19:16Z Hot                                     False      2020-07-03T16:19:16.2883167Z
  description: |-
    This command gets a single blobs verion with VersionId.
  summary: ""
- title: 'Example 7: Get a single blob snapshot'
  code: |-
    PS C:\> Get-AzStorageBlob -Container "containername" -Blob blob1 -SnapshotTime "2020-07-06T06:56:06.8588431Z"

       AccountName: storageaccountname, ContainerName: containername

    Name                 BlobType  Length          ContentType                    LastModified         AccessTier SnapshotTime                 IsDeleted  VersionId                     
    ----                 --------  ------          -----------                    ------------         ---------- ------------                 ---------  ---------                     
    blob1                BlockBlob 2097152         application/octet-stream       2020-07-06 06:56:06Z Hot        2020-07-06T06:56:06.8588431Z False
  description: |-
    This command gets a single blobs snapshot with SnapshotTime.
  summary: ""
parameters:
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Blob
  isRequired: true
  description: |+
    Specifies a name or name pattern, which can be used for a wildcard search.
    If no blob name is specified, the cmdlet lists all the blobs in the specified container.
    If a value is specified for this parameter, the cmdlet lists all blobs with names that match this parameter. This parameter supports wildcards anywhere in the string.

  defaultValue: None
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Nullable`1" data-throw-if-not-resolved="False" /><span>[</span><xref href="System.Int32" data-throw-if-not-resolved="False" /><span>]</span>
  name: ClientTimeoutPerRequest
  description: |+
    Specifies the client-side time-out interval, in seconds, for one service request.
    If the previous call fails in the specified interval, this cmdlet retries the request.
    If this cmdlet does not receive a successful response before the interval elapses, this cmdlet returns an error.

  defaultValue: None
  position: Named
  aliases: ClientTimeoutPerRequestInSeconds
  parameterValueGroup: ""
- type: <xref href="System.Nullable`1" data-throw-if-not-resolved="False" /><span>[</span><xref href="System.Int32" data-throw-if-not-resolved="False" /><span>]</span>
  name: ConcurrentTaskCount
  description: |+
    Specifies the maximum concurrent network calls.
    You can use this parameter to limit the concurrency to throttle local CPU and bandwidth usage by specifying the maximum number of concurrent network calls.
    The specified value is an absolute count and is not multiplied by the core count.
    This parameter can help reduce network connection problems in low bandwidth environments, such as 100 kilobits per second.
    The default value is 10.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Container
  isRequired: true
  description: |+
    Specifies the name of the container.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: N, Name
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Common.Authentication.Abstractions.IStorageContext" data-throw-if-not-resolved="False" />
  name: Context
  description: |+
    Specifies the Azure storage account from which you want to get a list of blobs.
    You can use the New-AzStorageContext cmdlet to create a storage context.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Storage.Blob.BlobContinuationToken" data-throw-if-not-resolved="False" />
  name: ContinuationToken
  description: |+
    Specifies a continuation token for the blob list.
    Use this parameter and the *MaxCount* parameter to list blobs in multiple batches.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Common.Authentication.Abstractions.Core.IAzureContextContainer" data-throw-if-not-resolved="False" />
  name: DefaultProfile
  description: |+
    The credentials, account, tenant, and subscription used for communication with Azure.

  defaultValue: None
  position: Named
  aliases: AzureRmContext, AzureCredential
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: IncludeDeleted
  description: |+
    Include Deleted Blob, by default get blob won't include deleted blob.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: IncludeVersion
  description: |+
    Blob versions will be listed only if this parameter is present, by default get blob won't include blob versions.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Nullable`1" data-throw-if-not-resolved="False" /><span>[</span><xref href="System.Int32" data-throw-if-not-resolved="False" /><span>]</span>
  name: MaxCount
  description: |+
    Specifies the maximum number of objects that this cmdlet returns.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Prefix
  description: |+
    Specifies a prefix for the blob names that you want to get.
    This parameter does not support using regular expressions or wildcard characters to search.
    This means that if the container has only blobs named "My", "MyBlob1", and "MyBlob2" and you specify "-Prefix My*", the cmdlet returns no blobs.
    However, if you specify "-Prefix My", the cmdlet returns "My", "MyBlob1", and "MyBlob2".

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Nullable`1" data-throw-if-not-resolved="False" /><span>[</span><xref href="System.Int32" data-throw-if-not-resolved="False" /><span>]</span>
  name: ServerTimeoutPerRequest
  description: |+
    Specifies the service side time-out interval, in seconds, for a request.
    If the specified interval elapses before the service processes the request, the storage service returns an error.

  defaultValue: None
  position: Named
  aliases: ServerTimeoutPerRequestInSeconds
  parameterValueGroup: ""
- type: <xref href="System.Nullable`1" data-throw-if-not-resolved="False" /><span>[</span><xref href="System.DateTimeOffset" data-throw-if-not-resolved="False" /><span>]</span>
  name: SnapshotTime
  isRequired: true
  description: |+
    Blob SnapshotTime

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: VersionId
  isRequired: true
  description: |+
    Blob VersionId

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
uid: Az.Storage.Get-AzStorageBlob
name: Get-AzStorageBlob
description: |-
  The **Get-AzStorageBlob** cmdlet lists blobs in the specified container in an Azure storage account.
metadata:
  external help file: Microsoft.Azure.PowerShell.Cmdlets.Storage.dll-Help.xml
  Module Name: Az.Storage
  ms.assetid: E54BFD3A-CD54-4E6B-9574-92B8D3E88FF3
  online version: https://docs.microsoft.com/en-us/powershell/module/az.storage/get-azstorageblob
  schema: 2.0.0
  content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Storage/Storage.Management/help/Get-AzStorageBlob.md
  original_content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Storage/Storage.Management/help/Get-AzStorageBlob.md
