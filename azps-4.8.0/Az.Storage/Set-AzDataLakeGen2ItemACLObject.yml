### YamlMime:PowershellCmdlet
summary: |-
  Creates/Updates a DataLake gen2 item ACL object, which can be used in Update-AzDataLakeGen2Item cmdlet.
module: Az.Storage
notes: ""
inputs:
- name: <xref href="None" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.WindowsAzure.Commands.Storage.Model.ResourceModel.PSPathAccessControlEntry" data-throw-if-not-resolved="False" />
  description: ""
syntaxes:
- >-
  Set-AzDataLakeGen2ItemAclObject [-EntityId <String>] [-DefaultScope] -Permission <String>

   [-InputObject <PSPathAccessControlEntry[]>] -AccessControlType <AccessControlType> [<CommonParameters>]
examples:
- title: 'Example 1: Create an ACL object with 3 ACL entry, and update ACL on a directory'
  code: |-
    PS C:\>$acl = Set-AzDataLakeGen2ItemAclObject -AccessControlType user -Permission rwx -DefaultScope
    PS C:\>$acl = Set-AzDataLakeGen2ItemAclObject -AccessControlType group -Permission rw- -InputObject $acl 
    PS C:\>$acl = Set-AzDataLakeGen2ItemAclObject -AccessControlType other -Permission "rw-" -InputObject $acl
    PS C:\>Update-AzDataLakeGen2Item -FileSystem "filesystem1" -Path "dir1/dir3" -ACL $acl

       FileSystem Name: filesystem1

    Path                 IsDirectory  Length          LastModified         Permissions  Owner                Group               
    ----                 -----------  ------          ------------         -----------  -----                -----               
    dir1/dir3            True                         2020-03-23 09:34:31Z rwxrw-rw-+   $superuser           $superuser
  description: |-
    This command creates an ACL object with 3 ACL entries (use -InputObject parameter to add acl entry to existing acl object), and updates ACL on a directory.
  summary: ""
- title: 'Example 2: Create an ACL object with 4 ACL entries, and update permission of an existing ACL entry'
  code: |-
    PS C:\>$acl = Set-AzDataLakeGen2ItemAclObject -AccessControlType user -Permission rwx -DefaultScope
    PS C:\>$acl = Set-AzDataLakeGen2ItemAclObject -AccessControlType group -Permission rw- -InputObject $acl 
    PS C:\>$acl = Set-AzDataLakeGen2ItemAclObject -AccessControlType other -Permission "rw-" -InputObject $acl
    PS C:\>$acl = Set-AzDataLakeGen2ItemAclObject -AccessControlType user -EntityId $id -Permission rwx -InputObject $acl 
    PS C:\>$acl

    DefaultScope AccessControlType EntityId                             Permissions
    ------------ ----------------- --------                             -----------
    True         User                                                   rwx        
    False        Group                                                  rw-        
    False        Other                                                  rw-        
    False        User              ********-****-****-****-************ rwx        

    PS C:\>$acl = Set-AzDataLakeGen2ItemAclObject -AccessControlType user -EntityId $id -Permission r-x -InputObject $acl 
    PS C:\>$acl  

    DefaultScope AccessControlType EntityId                             Permissions
    ------------ ----------------- --------                             -----------
    True         User                                                   rwx        
    False        Group                                                  rw-        
    False        Other                                                  rw-        
    False        User              ********-****-****-****-************ r-x
  description: |-
    This command first creates an ACL object with 4 ACL entries, then run the cmdlet again with different permission but same AccessControlType/EntityId/DefaultScope of an existing ACL entry.
    Then the permission of the ACL entry is updated, but no new ACL entry is added.
  summary: ""
parameters:
- type: <xref href="Azure.Storage.Files.DataLake.Models.AccessControlType" data-throw-if-not-resolved="False" />
  name: AccessControlType
  isRequired: true
  description: |+
    There are four types: "user" grants rights to the owner or a named user, "group" grants rights to the owning group or a named group, "mask" restricts rights granted to named users and the members of groups, and "other" grants rights to all users not found in any of the other entries.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: User, Group, Mask, Other
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: DefaultScope
  description: |+
    Set this parameter to indicate the ACE belongs to the default ACL for a directory; otherwise scope is implicit and the ACE belongs to the access ACL.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: EntityId
  description: |+
    The user or group identifier.
    It is omitted for entries of AccessControlType "mask" and "other".
    The user or group identifier is also omitted for the owner and owning group.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.WindowsAzure.Commands.Storage.Model.ResourceModel.PSPathAccessControlEntry" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: InputObject
  description: |+
    If input the PSPathAccessControlEntry\[\] object, will add the new ACL as a new element of the input PSPathAccessControlEntry\[\] object.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Permission
  isRequired: true
  description: |+
    The permission field is a 3-character sequence where the first character is 'r' to grant read access, the second character is 'w' to grant write access, and the third character is 'x' to grant execute permission.
    If access is not granted, the '-' character is used to denote that the permission is denied.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
uid: Az.Storage.Set-AzDataLakeGen2ItemACLObject
name: Set-AzDataLakeGen2ItemACLObject
description: |-
  The **Set-AzDataLakeGen2ItemAclObject** cmdlet creates/updates a DataLake gen2 item ACL object, which can be used in Update-AzDataLakeGen2Item cmdlet.
  If the new ACL entry with same AccessControlType/EntityId/DefaultScope not exist in the input ACL, will create a new ACL entry, else update permission of existing ACL entry.
metadata:
  external help file: Microsoft.Azure.PowerShell.Cmdlets.Storage.dll-Help.xml
  Module Name: Az.Storage
  online version: https://docs.microsoft.com/en-us/powershell/module/az.storage/set-azdatalakegen2itemaclobject
  schema: 2.0.0
  content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Storage/Storage.Management/help/Set-AzDataLakeGen2ItemACLObject.md
  original_content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Storage/Storage.Management/help/Set-AzDataLakeGen2ItemACLObject.md
