### YamlMime:PowershellCmdlet
summary: |-
  Modifies a Storage account.
module: Az.Storage
notes: ""
inputs:
- name: <xref href="System.String" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Azure.Commands.Management.Storage.Models.PSStorageAccount" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Get-AzStorageAccount
  href: ./Get-AzStorageAccount.yml
- text: New-AzStorageAccount
  href: ./New-AzStorageAccount.yml
- text: Remove-AzStorageAccount
  href: ./Remove-AzStorageAccount.yml
syntaxes:
- >-
  Set-AzStorageAccount [-ResourceGroupName] <String> [-Name] <String> [-Force] [-SkuName <String>]

   [-AccessTier <String>] [-CustomDomainName <String>] [-UseSubDomain <Boolean>] [-Tag <Hashtable>]

   [-EnableHttpsTrafficOnly <Boolean>] [-StorageEncryption] [-AssignIdentity]

   [-NetworkRuleSet <PSNetworkRuleSet>] [-UpgradeToStorageV2]

   [-EnableAzureActiveDirectoryDomainServicesForFile <Boolean>] [-EnableLargeFileShare]

   [-AllowBlobPublicAccess <Boolean>] [-MinimumTlsVersion <String>] [-AsJob]

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Set-AzStorageAccount [-ResourceGroupName] <String> [-Name] <String> [-Force] [-SkuName <String>]

   [-AccessTier <String>] [-CustomDomainName <String>] [-UseSubDomain <Boolean>] [-Tag <Hashtable>]

   [-EnableHttpsTrafficOnly <Boolean>] [-KeyvaultEncryption] -KeyName <String> [-KeyVersion <String>]

   -KeyVaultUri <String> [-AssignIdentity] [-NetworkRuleSet <PSNetworkRuleSet>] [-UpgradeToStorageV2]

   [-EnableAzureActiveDirectoryDomainServicesForFile <Boolean>] [-EnableLargeFileShare]

   [-AllowBlobPublicAccess <Boolean>] [-MinimumTlsVersion <String>] [-AsJob]

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Set-AzStorageAccount [-ResourceGroupName] <String> [-Name] <String> [-Force] [-SkuName <String>]

   [-AccessTier <String>] [-CustomDomainName <String>] [-UseSubDomain <Boolean>] [-Tag <Hashtable>]

   [-EnableHttpsTrafficOnly <Boolean>] [-AssignIdentity] [-NetworkRuleSet <PSNetworkRuleSet>]

   [-UpgradeToStorageV2] [-EnableLargeFileShare] -EnableActiveDirectoryDomainServicesForFile <Boolean>

   [-ActiveDirectoryDomainName <String>] [-ActiveDirectoryNetBiosDomainName <String>]

   [-ActiveDirectoryForestName <String>] [-ActiveDirectoryDomainGuid <String>]

   [-ActiveDirectoryDomainSid <String>] [-ActiveDirectoryAzureStorageSid <String>]

   [-AllowBlobPublicAccess <Boolean>] [-MinimumTlsVersion <String>] [-AsJob]

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: 'Example 1: Set the Storage account type'
  code: |-
    PS C:\>Set-AzStorageAccount -ResourceGroupName "MyResourceGroup" -AccountName "mystorageaccount" -Type "Standard_RAGRS"
  description: |-
    This command sets the Storage account type to Standard_RAGRS.
  summary: ""
- title: 'Example 2: Set a custom domain for a Storage account'
  code: |-
    PS C:\>Set-AzStorageAccount -ResourceGroupName "MyResourceGroup" -AccountName "mystorageaccount" -CustomDomainName "www.contoso.com" -UseSubDomain $True
  description: |-
    This command sets a custom domain for a Storage account.
  summary: ""
- title: 'Example 3: Set the access tier value'
  code: |-
    PS C:\>Set-AzStorageAccount -ResourceGroupName "MyResourceGroup" -AccountName "mystorageaccount" -AccessTier Cool
  description: |-
    The command sets the Access Tier value to be cool.
  summary: ""
- title: 'Example 4: Set the custom domain and tags'
  code: |-
    PS C:\>Set-AzStorageAccount -ResourceGroupName "MyResourceGroup" -AccountName "mystorageaccount" -CustomDomainName "www.domainname.com" -UseSubDomain $true -Tag @{tag0="value0";tag1="value1";tag2="value2"}
  description: |-
    The command sets the custom domain and tags for a Storage account.
  summary: ""
- title: 'Example 5: Set Encryption KeySource to Keyvault'
  code: |-
    PS C:\>Set-AzStorageAccount -ResourceGroupName "MyResourceGroup" -AccountName "mystorageaccount" -AssignIdentity
    PS C:\>$account = Get-AzStorageAccount -ResourceGroupName "MyResourceGroup" -AccountName "mystorageaccount"

    PS C:\>$keyVault = New-AzKeyVault -VaultName "MyKeyVault" -ResourceGroupName "MyResourceGroup" -Location "EastUS2"
    PS C:\>$key = Add-AzKeyVaultKey -VaultName "MyKeyVault" -Name "MyKey" -Destination 'Software'
    PS C:\>Set-AzKeyVaultAccessPolicy -VaultName "MyKeyVault" -ObjectId $account.Identity.PrincipalId -PermissionsToKeys wrapkey,unwrapkey,get

    PS C:\>Set-AzStorageAccount -ResourceGroupName "MyResourceGroup" -AccountName "mystorageaccount" -KeyvaultEncryption -KeyName $key.Name -KeyVersion $key.Version -KeyVaultUri $keyVault.VaultUri
  description: |-
    This command set Encryption KeySource with a new created Keyvault.
  summary: ""
- title: 'Example 6: Set Encryption KeySource to "Microsoft.Storage"'
  code: |-
    PS C:\>Set-AzStorageAccount -ResourceGroupName "MyResourceGroup" -AccountName "mystorageaccount" -StorageEncryption
  description: |-
    This command set Encryption KeySource to "Microsoft.Storage"
  summary: ""
- title: 'Example 7: Set NetworkRuleSet property of a Storage account with JSON'
  code: |-
    PS C:\>Set-AzStorageAccount -ResourceGroupName "MyResourceGroup" -AccountName "mystorageaccount" -NetworkRuleSet (@{bypass="Logging,Metrics";
        ipRules=(@{IPAddressOrRange="20.11.0.0/16";Action="allow"},
                @{IPAddressOrRange="10.0.0.0/7";Action="allow"});
        virtualNetworkRules=(@{VirtualNetworkResourceId="/subscriptions/s1/resourceGroups/g1/providers/Microsoft.Network/virtualNetworks/vnet1/subnets/subnet1";Action="allow"},
                            @{VirtualNetworkResourceId="/subscriptions/s1/resourceGroups/g1/providers/Microsoft.Network/virtualNetworks/vnet2/subnets/subnet2";Action="allow"});
        defaultAction="allow"})
  description: |-
    This command sets NetworkRuleSet property of a Storage account with JSON
  summary: ""
- title: 'Example 8: Get NetworkRuleSet property from a Storage account, and set it to another Storage account'
  code: |-
    PS C:\> $networkRuleSet = (Get-AzStorageAccount -ResourceGroupName "MyResourceGroup" -AccountName "mystorageaccount").NetworkRuleSet 
    PS C:\> Set-AzStorageAccount -ResourceGroupName "MyResourceGroup" -AccountName "mystorageaccount2" -NetworkRuleSet $networkRuleSet
  description: |-
    This first command gets NetworkRuleSet property from a Storage account, and the second command sets it to another Storage account
  summary: ""
- title: 'Example 9: Upgrade a Storage account with Kind "Storage" or "BlobStorage" to "StorageV2" kind Storage account'
  code: |-
    PS C:\> Set-AzStorageAccount -ResourceGroupName "MyResourceGroup" -AccountName "mystorageaccount" -UpgradeToStorageV2
  description: |-
    The command upgrade a Storage account with Kind "Storage" or "BlobStorage" to "StorageV2" kind Storage account.
  summary: ""
- title: 'Example 10: Update a Storage account by enable Azure Files AAD DS Authentication.'
  code: |-
    PS C:\> $account = Set-AzStorageAccount -ResourceGroupName "MyResourceGroup" -AccountName "mystorageaccount" -EnableAzureActiveDirectoryDomainServicesForFile $true PS

    PS C:\> $account.AzureFilesIdentityBasedAuth.DirectoryServiceOptions
    AADDS
  description: |-
    The command update a Storage account by enable Azure Files AAD DS Authentication.
  summary: ""
- title: 'Example 11: Update a Storage account by enable Files Active Directory Domain Service Authentication, and then show the File Identity Based authentication setting'
  code: |-
    PS C:\> $account = Set-AzStorageAccount -ResourceGroupName "MyResourceGroup" -AccountName "mystorageaccount" -EnableActiveDirectoryDomainServicesForFile $true `
            -ActiveDirectoryDomainName "mydomain.com" `
            -ActiveDirectoryNetBiosDomainName "mydomain.com" `
            -ActiveDirectoryForestName "mydomain.com" `
            -ActiveDirectoryDomainGuid "12345678-1234-1234-1234-123456789012" `
            -ActiveDirectoryDomainSid "S-1-5-21-1234567890-1234567890-1234567890" `
            -ActiveDirectoryAzureStorageSid "S-1-5-21-1234567890-1234567890-1234567890-1234"
    		
    PS C:\> $account.AzureFilesIdentityBasedAuth.DirectoryServiceOptions
    AD

    PS C:\> $account.AzureFilesIdentityBasedAuth.ActiveDirectoryProperties

    DomainName        : mydomain.com
    NetBiosDomainName : mydomain.com
    ForestName        : mydomain.com
    DomainGuid        : 12345678-1234-1234-1234-123456789012
    DomainSid         : S-1-5-21-1234567890-1234567890-1234567890
    AzureStorageSid   : S-1-5-21-1234567890-1234567890-1234567890-1234
  description: |-
    The command updates a Storage account by enable Azure Files Active Directory Domain Service Authentication, and then shows the File Identity Based authentication setting
  summary: ""
- title: 'Example 12: Set MinimumTlsVersion and AllowBlobPublicAccess'
  code: |-
    PS C:\> $account = Set-AzStorageAccount -ResourceGroupName "MyResourceGroup" -AccountName "mystorageaccount" -MinimumTlsVersion TLS1_1 -AllowBlobPublicAccess $false

    PS C:\> $account.MinimumTlsVersion
    TLS1_1

    PS C:\> $account.AllowBlobPublicAccess
    False
  description: |-
    The command sets MinimumTlsVersion  and AllowBlobPublicAccess, and then show the the 2 properties of the account
  summary: ""
parameters:
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: AccessTier
  description: |+
    Specifies the access tier of the Storage account that this cmdlet modifies.
    The acceptable values for this parameter are: Hot and Cool.
    If you change the access tier, it may result in additional charges. For more information, see
    [Azure Blob Storage: Hot and cool storage tiers](http://go.microsoft.com/fwlink/?LinkId=786482).
    If the Storage account has Kind as StorageV2 or BlobStorage, you can specify the *AccessTier* parameter. 
    If the Storage account has Kind as Storage, do not specify the *AccessTier* parameter.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: Hot, Cool
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ActiveDirectoryAzureStorageSid
  description: |+
    Specifies the security identifier (SID) for Azure Storage. This parameter must be set when -EnableActiveDirectoryDomainServicesForFile is set to true.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ActiveDirectoryDomainGuid
  description: |+
    Specifies the domain GUID. This parameter must be set when -EnableActiveDirectoryDomainServicesForFile is set to true.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ActiveDirectoryDomainName
  description: |+
    Specifies the primary domain that the AD DNS server is authoritative for. This parameter must be set when -EnableActiveDirectoryDomainServicesForFile is set to true.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ActiveDirectoryDomainSid
  description: |+
    Specifies the security identifier (SID). This parameter must be set when -EnableActiveDirectoryDomainServicesForFile is set to true.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ActiveDirectoryForestName
  description: |+
    Specifies the Active Directory forest to get. This parameter must be set when -EnableActiveDirectoryDomainServicesForFile is set to true.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ActiveDirectoryNetBiosDomainName
  description: |+
    Specifies the NetBIOS domain name. This parameter must be set when -EnableActiveDirectoryDomainServicesForFile is set to true.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Boolean" data-throw-if-not-resolved="False" />
  name: AllowBlobPublicAccess
  description: |+
    Allow or disallow public access to all blobs or containers in the storage account.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: AsJob
  description: |+
    Run cmdlet in the background

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: AssignIdentity
  description: |+
    Generate and assign a new Storage account Identity for this Storage account for use with key management services like Azure KeyVault.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: CustomDomainName
  description: |+
    Specifies the name of the custom domain.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Common.Authentication.Abstractions.Core.IAzureContextContainer" data-throw-if-not-resolved="False" />
  name: DefaultProfile
  description: |+
    The credentials, account, tenant, and subscription used for communication with Azure.

  defaultValue: None
  position: Named
  aliases: AzContext, AzureRmContext, AzureCredential
  parameterValueGroup: ""
- type: <xref href="System.Boolean" data-throw-if-not-resolved="False" />
  name: EnableActiveDirectoryDomainServicesForFile
  isRequired: true
  description: |+
    Enable Azure Files Active Directory Domain Service Authentication for the storage account.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Boolean" data-throw-if-not-resolved="False" />
  name: EnableAzureActiveDirectoryDomainServicesForFile
  description: |+
    Enable Azure Files Active Directory Domain Service Authentication for the storage account.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Boolean" data-throw-if-not-resolved="False" />
  name: EnableHttpsTrafficOnly
  description: |+
    Indicates whether or not the Storage account only enables HTTPS traffic.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: EnableLargeFileShare
  description: |+
    Indicates whether or not the storage account can support large file shares with more than 5 TiB capacity. 
    Once the account is enabled, the feature cannot be disabled. 
    Currently only supported for LRS and ZRS replication types, hence account conversions to geo-redundant accounts would not be possible. 
    Learn more in https://go.microsoft.com/fwlink/?linkid=2086047

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Force
  description: |+
    Forces the change to be written to the Storage account.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: KeyName
  isRequired: true
  description: |+
    If using -KeyvaultEncryption to enable encryption with Key Vault, specify the Keyname property with this option.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: KeyvaultEncryption
  description: |+
    Indicates whether or not to use Microsoft KeyVault for the encryption keys when using Storage Service Encryption. 
    If KeyName, KeyVersion, and KeyVaultUri are all set, KeySource will be set to Microsoft.Keyvault whether this parameter is set or not. 

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: KeyVaultUri
  isRequired: true
  description: |+
    When using Key Vault Encryption by specifying the -KeyvaultEncryption parameter, use this option to specify the URI to the Key Vault.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: KeyVersion
  description: |+
    When using Key Vault Encryption by specifying the -KeyvaultEncryption parameter, use this option to specify the URI to the Key Version.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: MinimumTlsVersion
  description: |+
    The minimum TLS version to be permitted on requests to storage.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: TLS1_0, TLS1_1, TLS1_2
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Name
  isRequired: true
  description: |+
    Specifies the name of the Storage account to modify.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: StorageAccountName, AccountName
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Management.Storage.Models.PSNetworkRuleSet" data-throw-if-not-resolved="False" />
  name: NetworkRuleSet
  description: |+
    NetworkRuleSet is used to define a set of configuration rules for firewalls and virtual networks, as well as to set values for network properties such as services allowed to bypass the rules and how to handle requests that don't match any of the defined rules.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ResourceGroupName
  isRequired: true
  description: |+
    Specifies the name of the resource group in which to modify the Storage account.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: SkuName
  description: |+
    Specifies the SKU name of the Storage account.
    The acceptable values for this parameter are:
    - Standard_LRS - Locally-redundant storage.
    - Standard_ZRS - Zone-redundant storage.
    - Standard_GRS - Geo-redundant storage.
    - Standard_RAGRS - Read access geo-redundant storage.
    - Premium_LRS - Premium locally-redundant storage.
    - Standard_GZRS - Geo-redundant zone-redundant storage.
    - Standard_RAGZRS - Read access geo-redundant zone-redundant storage.
    You cannot change Standard_ZRS and Premium_LRS types to other account types.
    You cannot change other account types to Standard_ZRS or Premium_LRS.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: StorageAccountType, AccountType, Type
  parameterValueGroup: Standard_LRS, Standard_ZRS, Standard_GRS, Standard_RAGRS, Premium_LRS, Standard_GZRS, Standard_RAGZRS
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: StorageEncryption
  description: |+
    Indicates whether or not to set the Storage account encryption to use Microsoft-managed keys.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="False" />
  name: Tag
  description: |+
    Key-value pairs in the form of a hash table set as tags on the server. For example:
    @{key0="value0";key1=$null;key2="value2"}

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: Tags
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: UpgradeToStorageV2
  description: |+
    Upgrade Storage account Kind from  Storage or BlobStorage to StorageV2.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Nullable`1" data-throw-if-not-resolved="False" /><span>[</span><xref href="System.Boolean" data-throw-if-not-resolved="False" /><span>]</span>
  name: UseSubDomain
  description: |+
    Indicates whether to enable indirect CName validation.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Az.Storage.Set-AzStorageAccount
name: Set-AzStorageAccount
description: |-
  The **Set-AzStorageAccount** cmdlet modifies an Azure Storage account.
  You can use this cmdlet to modify the account type, update a customer domain, or set tags on a Storage account.
metadata:
  external help file: Microsoft.Azure.PowerShell.Cmdlets.Storage.Management.dll-Help.xml
  Module Name: Az.Storage
  ms.assetid: 4D7EEDD7-89D4-4B1E-A9A1-B301E759CE72
  online version: https://docs.microsoft.com/en-us/powershell/module/az.storage/set-azstorageaccount
  schema: 2.0.0
  content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Storage/Storage.Management/help/Set-AzStorageAccount.md
  original_content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Storage/Storage.Management/help/Set-AzStorageAccount.md
