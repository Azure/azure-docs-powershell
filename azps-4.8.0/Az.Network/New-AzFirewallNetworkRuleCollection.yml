### YamlMime:PowershellCmdlet
summary: |-
  Creates a Azure Firewall Network Collection of Network rules.
module: Az.Network
notes: ""
inputs:
- name: <xref href="None" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Azure.Commands.Network.Models.PSAzureFirewallNetworkRuleCollection" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: New-AzFirewallNetworkRule
  href: ./New-AzFirewallNetworkRule.yml
- text: New-AzFirewall
  href: ./New-AzFirewall.yml
- text: Get-AzFirewall
  href: ./Get-AzFirewall.yml
syntaxes:
- >-
  New-AzFirewallNetworkRuleCollection -Name <String> -Priority <UInt32> -Rule <PSAzureFirewallNetworkRule[]>

   -ActionType <String> [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: 'Example 1: Create a network collection with two rules'
  code: |-
    $rule1 = New-AzFirewallNetworkRule -Name "all-udp-traffic" -Description "Rule for all UDP traffic" -Protocol UDP -SourceAddress "*" -DestinationAddress "*" -DestinationPort "*"
    $rule2 = New-AzFirewallNetworkRule -Name "partial-tcp-rule" -Description "Rule for all TCP traffic from 10.0.0.0 to 60.1.5.0:4040" -Protocol TCP -SourceAddress "10.0.0.0" -DestinationAddress "60.1.5.0" -DestinationPort "4040"
    New-AzFirewallNetworkRuleCollection -Name RC1 -Priority 100 -Rule $rule1, $rule2 -ActionType "Allow"
  description: |-
    This example creates a collection which will allow all traffic that matches either of the two rules.
    The first rule is for all UDP traffic.
    The second rule is for TCP traffic from 10.0.0.0 to 60.1.5.0:4040.
    If there is another Network rule collection with higher priority (smaller number) which also matches traffic identified in $rule1 or $rule2,
    the action of the rule collection with higher priority will take in effect instead.
  summary: ""
- title: 'Example 2: Add a rule to a rule collection'
  code: |-
    $rule1 = New-AzFirewallNetworkRule -Name "all-udp-traffic" -Description "Rule for all UDP traffic" -Protocol UDP -SourceAddress "*" -DestinationAddress "*" -DestinationPort "*"
    $ruleCollection = New-AzFirewallNetworkRuleCollection -Name "MyNetworkRuleCollection" -Priority 100 -Rule $rule1 -ActionType "Allow"

    $rule2 = New-AzFirewallNetworkRule -Name "partial-tcp-rule" -Description "Rule for all TCP traffic from 10.0.0.0 to 60.1.5.0:4040" -Protocol TCP -SourceAddress "10.0.0.0" -DestinationAddress "60.1.5.0" -DestinationPort "4040"
    $ruleCollection.AddRule($rule2)
  description: |-
    This example creates a new network rule collection with one rule and then adds a second rule to the rule collection using method
    AddRule on the rule collection object. Each rule name in a given rule collection must have a unique name and is case insensitive.
  summary: ""
- title: 'Example 3: Get a rule from a rule collection'
  code: |-
    $rule1 = New-AzFirewallNetworkRule -Name "all-udp-traffic" -Description "Rule for all UDP traffic" -Protocol UDP -SourceAddress "*" -DestinationAddress "*" -DestinationPort "*"
    $ruleCollection = New-AzFirewallNetworkRuleCollection -Name "MyNetworkRuleCollection" -Priority 100 -Rule $rule1 -ActionType "Allow"
    $getRule=$ruleCollection.GetRuleByName("ALL-UDP-traffic")
  description: |-
    This example creates a new network rule collection with one rule and then gets the rule by name, calling method GetRuleByName on the 
    rule collection object. The rule name for method GetRuleByName is case-insensitive.
  summary: ""
- title: 'Example 4: Remove a rule from a rule collection'
  code: |-
    $rule1 = New-AzFirewallNetworkRule -Name "all-udp-traffic" -Description "Rule for all UDP traffic" -Protocol UDP -SourceAddress "*" -DestinationAddress "*" -DestinationPort "*"
    $rule2 = New-AzFirewallNetworkRule -Name "partial-tcp-rule" -Description "Rule for all TCP traffic from 10.0.0.0 to 60.1.5.0:4040" -Protocol TCP -SourceAddress "10.0.0.0" -DestinationAddress "60.1.5.0" -DestinationPort "4040"
    $ruleCollection = New-AzFirewallNetworkRuleCollection -Name "MyNetworkRuleCollection" -Priority 100 -Rule $rule1, $rule2 -ActionType "Allow"
    $ruleCollection.RemoveRuleByName("ALL-udp-traffic")
  description: |-
    This example creates a new network rule collection with two rules and then removes the first rule from the rule collection by calling method
    RemoveRuleByName on the rule collection object. The rule name for method RemoveRuleByName is case-insensitive.
  summary: ""
parameters:
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ActionType
  isRequired: true
  description: |+
    Specifies the action to be taken for traffic matching conditions of this rule. Accepted actions are "Allow" or "Deny".

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: Allow, Deny
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: "False"
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Common.Authentication.Abstractions.Core.IAzureContextContainer" data-throw-if-not-resolved="False" />
  name: DefaultProfile
  description: |+
    The credentials, account, tenant, and subscription used for communication with azure.

  defaultValue: None
  position: Named
  aliases: AzContext, AzureRmContext, AzureCredential
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Name
  isRequired: true
  description: |+
    Specifies the name of this network rule collection. The name must be unique across all network rule collection.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.UInt32" data-throw-if-not-resolved="False" />
  name: Priority
  isRequired: true
  description: |+
    Specifies the priority of this rule collection. Priority is a number between 100 and 65000. The smaller the number, the higher the priority.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Network.Models.PSAzureFirewallNetworkRule" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Rule
  isRequired: true
  description: |+
    Specifies the list of rules to be grouped under this collection.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: "False"
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Az.Network.New-AzFirewallNetworkRuleCollection
name: New-AzFirewallNetworkRuleCollection
description: |-
  The **New-AzFirewallNetworkRuleCollection** cmdlet creates a collection of Firewall Network Rules.
metadata:
  external help file: Microsoft.Azure.PowerShell.Cmdlets.Network.dll-Help.xml
  Module Name: Az.Network
  ms.assetid: A29E9921-C1B9-42C2-B816-5D4873AC6688
  online version: https://docs.microsoft.com/en-us/powershell/module/az.network/new-azfirewallnetworkrulecollection
  schema: 2.0.0
  content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Network/Network/help/New-AzFirewallNetworkRuleCollection.md
  original_content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Network/Network/help/New-AzFirewallNetworkRuleCollection.md
