### YamlMime:PowershellCmdlet
summary: |-
  Updates a circuit connection configuration created in Private Peerings for an Express Route Circuit.
module: Az.Network
notes: ""
inputs:
- name: <xref href="Microsoft.Azure.Commands.Network.Models.PSExpressRouteCircuit" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="System.String" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Azure.Commands.Network.Models.PSExpressRouteCircuit" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Get-AzExpressRouteCircuitConnectionConfig
  href: Get-AzExpressRouteCircuitConnectionConfig.yml
- text: Remove-AzExpressRouteCircuitConnectionConfig
  href: Remove-AzExpressRouteCircuitConnectionConfig.yml
- text: Add-AzExpressRouteCircuitConnectionConfig
  href: Set-AzExpressRouteCircuitConnectionConfig.yml
- text: Set-AzExpressRouteCircuit
  href: Set-AzExpressRouteCircuit.yml
- text: Get-AzExpressRouteCircuit
  href: Get-AzExpressRouteCircuit.yml
syntaxes:
- >-
  Set-AzExpressRouteCircuitConnectionConfig [-Name] <String> [-ExpressRouteCircuit] <PSExpressRouteCircuit>

   [-AddressPrefix] <String> [-AddressPrefixType <String>] [-AuthorizationKey <String>] [-DefaultProfile <IAzureContextContainer>] [-WhatIf]

   [-Confirm] [<CommonParameters>]
- >-
  Set-AzExpressRouteCircuitConnectionConfig [-Name] <String> [-ExpressRouteCircuit] <PSExpressRouteCircuit>

   [-PeerExpressRouteCircuitPeering] <String> [-AddressPrefix] <String> -[AddressPrefixType <String>] [-AuthorizationKey <String>]

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: 'Example 1: Update a circuit connection resource to an existing ExpressRoute circuit'
  code: |-
    $circuit_init = Get-AzExpressRouteCircuit -Name $initiatingCircuitName -ResourceGroupName $rg
    $circuit_peer = Get-AzExpressRouteCircuit -Name $peeringCircuitName -ResourceGroupName $rg
    $addressSpace = 'aa:bb::0/125'
    $addressPrefixType = 'IPv6'
    Set-AzExpressRouteCircuitConnectionConfig -Name $circuitConnectionName -ExpressRouteCircuit $circuit_init -PeerExpressRouteCircuitPeering $circuit_peer.Peerings[0].Id -AddressPrefix $addressSpace -AddressPrefixType $addressPrefixType -AuthorizationKey $circuit_peer.Authorizations[0].AuthorizationKey
    Set-AzExpressRouteCircuit -ExpressRouteCircuit $circuit_init
  description: ""
  summary: ""
- title: 'Example 2: Set a circuit connection configuration using Piping to an existing ExpressRoute Circuit'
  code: |-
    $circuit_peer = Get-AzExpressRouteCircuit -Name $peeringCircuitName -ResourceGroupName $rg
    $addressSpace = '60.0.0.0/29'
    Get-AzExpressRouteCircuit -Name $initiatingCircuitName -ResourceGroupName $rg|Set-AzExpressRouteCircuitConnectionConfig -Name $circuitConnectionName -PeerExpressRouteCircuitPeering $circuit_peer.Peerings[0].Id -AddressPrefix $addressSpace -AuthorizationKey $circuit_peer.Authorizations[0].AuthorizationKey |Set-AzExpressRouteCircuit
  description: ""
  summary: ""
parameters:
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: AddressPrefix
  isRequired: true
  description: |+
    A minimum /29 customer address space to create VxLan tunnels between Express Route Circuits for IPv4 tunnels.
    or a minimum of /125 customer address space to create VxLan tunnels between Express Route Circuits for IPv6 tunnels.

  defaultValue: None
  position: "3"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: AddressPrefixType
  description: |+
    Specifies the address family that address prefix belongs to.

  defaultValue: IPv4
  position: Named
  aliases: ""
  parameterValueGroup: IPv4, IPv6
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: AuthorizationKey
  description: |+
    Authorization Key to peer Express Route Circuit in another subscription. Authorization on peer circuit can be created using existing commands.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: None
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Common.Authentication.Abstractions.Core.IAzureContextContainer" data-throw-if-not-resolved="False" />
  name: DefaultProfile
  description: |+
    The credentials, account, tenant, and subscription used for communication with azure.

  defaultValue: None
  position: Named
  aliases: AzContext, AzureRmContext, AzureCredential
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Network.Models.PSExpressRouteCircuit" data-throw-if-not-resolved="False" />
  name: ExpressRouteCircuit
  isRequired: true
  description: |+
    The ExpressRoute circuit being modified. This is Azure object returned by the
    **Get-AzExpressRouteCircuit** cmdlet.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Name
  isRequired: true
  description: |+
    The name of the circuit connection resource to be added.

  defaultValue: None
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: PeerExpressRouteCircuitPeering
  isRequired: true
  description: |+
    Resource Id for Private Peering of remote circuit which will be peered with the current circuit.

  defaultValue: None
  pipelineInput: true
  position: "2"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs. The cmdlet is not run.

  defaultValue: None
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Az.Network.Set-AzExpressRouteCircuitConnectionConfig
name: Set-AzExpressRouteCircuitConnectionConfig
description: |-
  The **Set-AzExpressRouteCircuitConnectionConfig** cmdlet updates a circuit connection configuration created in
  private peering for an ExpressRoute circuit. This allows peering two Express Route Circuits 
  across regions or subscriptions.
  Note that, before running **Set-AzExpressRouteCircuitConnectionConfig** you must add the circuit connection using 
  **Add-AzExpressRouteCircuitConnectionConfig**. 
  Also, after running **Set-AzExpressRouteCircuitPeeringConfig**, you must call the Set-AzExpressRouteCircuit cmdlet to activate the configuration.
metadata:
  external help file: Microsoft.Azure.PowerShell.Cmdlets.Network.dll-Help.xml
  Module Name: Az.Network
  ms.assetid: 8b4a8c9f-874c-4a27-b87e-c8ad7e73188d
  schema: 2.0.0
  content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Network/Network/help/Set-AzExpressRouteCircuitConnectionConfig.md
  original_content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Network/Network/help/Set-AzExpressRouteCircuitConnectionConfig.md
