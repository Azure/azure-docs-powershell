### YamlMime:PowershellCmdlet
summary: |-
  Get a private endpoint
module: Az.Network
notes: ""
inputs:
- name: <xref href="System.String" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Azure.Commands.Network.Models.PSVirtualNetwork" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: New-AzPrivateEndpoint
  href: ./New-AzPrivateEndpoint.yml
- text: Remove-AzPrivateEndpoint
  href: ./Remove-AzPrivateEndpoint.yml
syntaxes:
- >-
  Get-AzPrivateEndpoint [-Name <String>] [-ResourceGroupName <String>] [-DefaultProfile <IAzureContextContainer>]

   [<CommonParameters>]
- >-
  Get-AzPrivateEndpoint -Name <String> -ResourceGroupName <String> -ExpandResource <String>

   [-DefaultProfile <IAzureContextContainer>] [<CommonParameters>]
examples:
- title: 'Example 1: Retrieve a private endpoint'
  code: |-
    Get-AzPrivateEndpoint -Name MyPrivateEndpoint1 -ResourceGroupName TestResourceGroup

    Name                                : MyPrivateEndpoint1
    ResourceGroupName                   : TestResourceGroup
    Location                            : eastus2euap
    Id                                  : /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/TestResourceGroup/provi
                                          ders/Microsoft.Network/privateEndpoints/MyPrivateEndpoint1
    Etag                                : W/"00000000-0000-0000-0000-000000000000"
    ProvisioningState                   : Succeeded
    Subnet                              : {
                                            "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/TestResourceGroup/providers/Microsoft.Network/virtualNetworks/MyVirtualNetwork1/subnets/backendSubnet",
                                          }
    NetworkInterfaces                   : [
                                            {

                                              "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/TestResourceGroup/providers/Microsoft.Network/networkInterfaces/MyNic1",
                                            }
                                          ]
    PrivateLinkServiceConnections       : []
    ManualPrivateLinkServiceConnections : [
                                            {
                                              "Name": "MyPrivateLinkServiceConnection",
                                              "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/TestResourceGroup/providers/Microsoft.Network/privateEndpoints/MyPrivateEndpoint1/manualPrivateLinkServi
                                          ceConnections/MyPrivateLinkServiceConnection",
                                              "PrivateLinkServiceId": "/subscriptions/00000000-0000-0000-0000-000000000000/
                                          resourceGroups/TestResourceGroup/providers/Microsoft.Network/priv
                                          ateLinkServices/MyPrivateLinkService",
                                              "PrivateLinkServiceConnectionState": {
                                                "Status": "Pending",
                                                "Description": "Awaiting approval"
                                              }
                                            }
                                          ]
  description: |-
    This command gets the private endpoint named MyPrivateEndpoint1 in the resource group TestResourceGroup
  summary: ""
- title: 'Example 2: List all private endpoints in ResourceGroup'
  code: |-
    Get-AzPrivateEndpoint -ResourceGroupName TestResourceGroup

    Name                                : MyPrivateEndpoint1
    ResourceGroupName                   : TestResourceGroup
    Location                            : eastus2euap
    Id                                  : /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/TestResourceGroup/provi
                                          ders/Microsoft.Network/privateEndpoints/MyPrivateEndpoint1
    Etag                                : W/"00000000-0000-0000-0000-000000000000"
    ProvisioningState                   : Succeeded
    Subnet                              : {
                                            "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/TestResourceGroup/providers/Microsoft.Network/virtualNetworks/MyVirtualNetwork1/subnets/backendSubnet",
                                          }
    NetworkInterfaces                   : [
                                            {

                                              "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/TestResourceGroup/providers/Microsoft.Network/networkInterfaces/MyNic1",
                                            }
                                          ]
    PrivateLinkServiceConnections       : []
    ManualPrivateLinkServiceConnections : [
                                            {
                                              "Name": "MyPrivateLinkServiceConnection",
                                              "Id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/TestResourceGroup/providers/Microsoft.Network/privateEndpoints/MyPrivateEndpoint1/manualPrivateLinkServi
                                          ceConnections/MyPrivateLinkServiceConnection",
                                              "PrivateLinkServiceId": "/subscriptions/00000000-0000-0000-0000-000000000000/
                                          resourceGroups/TestResourceGroup/providers/Microsoft.Network/priv
                                          ateLinkServices/MyPrivateLinkService",
                                              "PrivateLinkServiceConnectionState": {
                                                "Status": "Pending",
                                                "Description": "Awaiting approval"
                                              }
                                            }
                                          ]
  description: |-
    This command gets all of private end points in the resource group TestResourceGroup
  summary: ""
parameters:
- type: <xref href="Microsoft.Azure.Commands.Common.Authentication.Abstractions.Core.IAzureContextContainer" data-throw-if-not-resolved="False" />
  name: DefaultProfile
  description: |+
    The credentials, account, tenant, and subscription used for communication with Azure.

  defaultValue: None
  position: Named
  aliases: AzContext, AzureRmContext, AzureCredential
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ExpandResource
  isRequired: true
  description: |+
    The resource reference to be expanded.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Name
  isRequired: true
  description: |+
    The resource name.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ResourceName
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ResourceGroupName
  isRequired: true
  description: |+
    The resource group name.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
uid: Az.Network.Get-AzPrivateEndpoint
name: Get-AzPrivateEndpoint
description: |-
  The **Get-AzPrivateEndpoint** cmdlet gets one or more private endpoints.
metadata:
  external help file: Microsoft.Azure.PowerShell.Cmdlets.Network.dll-Help.xml
  Module Name: Az.Network
  online version: https://docs.microsoft.com/en-us/powershell/module/az.network/get-azprivateendpoint
  schema: 2.0.0
  content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Network/Network/help/Get-AzPrivateEndpoint.md
  original_content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Network/Network/help/Get-AzPrivateEndpoint.md
