### YamlMime:PowershellCmdlet
summary: |-
  Modifies a resource group.
module: Az.Resources
notes: ""
inputs:
- name: <xref href="System.String" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Azure.Commands.ResourceManager.Cmdlets.SdkModels.PSResourceGroup" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Get-AzResource
  href: ./Get-AzResource.yml
- text: Get-AzResourceGroup
  href: ./Get-AzResourceGroup.yml
- text: New-AzResourceGroup
  href: ./New-AzResourceGroup.yml
- text: Remove-AzResourceGroup
  href: ./Remove-AzResourceGroup.yml
syntaxes:
- >-
  Set-AzResourceGroup -Name <String> [-Tag] <Hashtable> [-ApiVersion <String>] [-Pre]

   [-DefaultProfile <IAzureContextContainer>] [<CommonParameters>]
- >-
  Set-AzResourceGroup [-Tag] <Hashtable> -Id <String> [-ApiVersion <String>] [-Pre]

   [-DefaultProfile <IAzureContextContainer>] [<CommonParameters>]
examples:
- title: 'Example 1: Apply a tag to a resource group'
  code: |-
    PS C:\>Set-AzResourceGroup -Name "ContosoRG" -Tag @{Department="IT"}
  description: |-
    This command applies a Department tag with a value of IT to a resource group that has no existing tags.
  summary: ""
- title: 'Example 2: Add tags to a resource group'
  code: |-
    PS C:\>$Tags = (Get-AzResourceGroup -Name "ContosoRG").Tags
    PS C:\> $Tags
    PS C:\> $Tags += @{"Status"="Approved"; "FY2016"=$null}
    PS C:\> Set-AzResourceGroup -Name "ContosoRG" -Tag $Tags
    PS C:> (Get-AzResourceGroup -Name "ContosoRG").Tags
  description: |-
    This example adds a Status tag with a value of Approved and an FY2016 tag to a resource group that
    has existing tags. Because the tags you specify replace the existing tags, you must include the
    existing tags in the new tag collection or you will lose them.
    The first command gets the ContosoRG resource group and uses the dot method to get the value of its
    Tags property. The command stores the tags in the $Tags variable.
    The second command gets the tags in the $Tags variable.
    The third command uses the += assignment operator to add the Status and FY2016 tags to the array of
    tags in the $Tags variable.
    The fourth command uses the *Tag* parameter of **Set-AzResourceGroup** to apply the tags in
    the $Tags variable to the ContosoRG resource group.
    The fifth command gets all of the tags applied to the ContosoRG resource group. The output shows
    that the resource group has the Department tag and the two new tags, Status and FY2015.
  summary: ""
- title: 'Example 3: Delete all tags for a resource group'
  code: |-
    PS C:\>Set-AzResourceGroup -Name "ContosoRG" -Tag @{}
  description: |-
    This command specifies the *Tag* parameter with an empty hash table value to delete all tags from
    the ContosoRG resource group.
  summary: ""
parameters:
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ApiVersion
  description: |+
    Specifies the API version that is supported by the resource Provider.
    You can specify a different version than the default version.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Common.Authentication.Abstractions.Core.IAzureContextContainer" data-throw-if-not-resolved="False" />
  name: DefaultProfile
  description: |+
    The credentials, account, tenant, and subscription used for communication with azure

  defaultValue: None
  position: Named
  aliases: AzContext, AzureRmContext, AzureCredential
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Id
  isRequired: true
  description: |+
    Specifies the ID of the resource group to modify.

  defaultValue: None
  position: Named
  aliases: ResourceGroupId, ResourceId
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Name
  isRequired: true
  description: |+
    Specifies the name of the resource group to modify.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ResourceGroupName
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Pre
  description: |+
    Indicates that this cmdlet considers pre-release API versions when it automatically determines which version to use.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="False" />
  name: Tag
  isRequired: true
  description: |+
    Key-value pairs in the form of a hash table. For example:
    @{key0="value0";key1=$null;key2="value2"}
    A tag is a name-value pair that you can create and apply to resources and resource groups. After
    you assign tags to resources and groups, you can use the *Tag* parameter of Get-AzResource and
    Get-AzResourceGroup to search for resources and groups by tag name or name and value. You can
    use tags to categorize your resources, such as by department or cost center, or to track notes or
    comments about the resources.
    To add or change a tag, you must replace the collection of tags for the resource group. To delete a
    tag, enter a hash table with all tags currently applied to the resource group, from
    **Get-AzResourceGroup**, except for the tag you want to delete. To delete all tags from a
    resource group, specify an empty hash table: `@{}`.

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: Tags
  parameterValueGroup: ""
uid: Az.Resources.Set-AzResourceGroup
name: Set-AzResourceGroup
description: |-
  The **Set-AzResourceGroup** cmdlet modifies the properties of a resource group.
  You can use this cmdlet to add, change, or delete the Azure tags applied to a resource group.
  Specify the *Name* parameter to identify the resource group and the *Tag* parameter to modify the tags.
  You cannot use this cmdlet to change the name of a resource group.
metadata:
  external help file: Microsoft.Azure.PowerShell.Cmdlets.ResourceManager.dll-Help.xml
  Module Name: Az.Resources
  ms.assetid: 4E5C059B-36F3-41C8-9FDB-69F5318CF39B
  online version: https://docs.microsoft.com/en-us/powershell/module/az.resources/set-azresourcegroup
  schema: 2.0.0
  content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Resources/Resources/help/Set-AzResourceGroup.md
  original_content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Resources/Resources/help/Set-AzResourceGroup.md
