### YamlMime:PowershellCmdlet
summary: |-
  Creates a new Azure active directory service principal.
module: Az.Resources
notes: |-
  Keywords: azure, azurerm, arm, resource, management, manager, resource, group, template, deployment
inputs:
- name: <xref href="System.Guid" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="System.String" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="Microsoft.Azure.Commands.ActiveDirectory.PSADApplication" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="Microsoft.Azure.Commands.ActiveDirectory.PSADPasswordCredential" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  description: ""
- name: <xref href="Microsoft.Azure.Commands.ActiveDirectory.PSADKeyCredential" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  description: ""
- name: <xref href="System.DateTime" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Azure.Commands.ActiveDirectory.PSADServicePrincipal" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="Microsoft.Azure.Commands.Resources.Models.Authorization.PSADServicePrincipalWrapper" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Remove-AzADServicePrincipal
  href: ./Remove-AzADServicePrincipal.yml
- text: Get-AzADServicePrincipal
  href: ./Get-AzADServicePrincipal.yml
- text: New-AzADApplication
  href: ./New-AzADApplication.yml
- text: Remove-AzADApplication
  href: ./Remove-AzADApplication.yml
- text: Get-AzADSpCredential
  href: ./Get-AzADSpCredential.yml
- text: New-AzADSpCredential
  href: ./New-AzADSpCredential.yml
- text: Remove-AzADSpCredential
  href: ./Remove-AzADSpCredential.yml
syntaxes:
- >-
  New-AzADServicePrincipal [-ApplicationId <Guid>] [-DisplayName <String>] [-StartDate <DateTime>]

   [-EndDate <DateTime>] [-Scope <String>] [-Role <String>] [-SkipAssignment]

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  New-AzADServicePrincipal -ApplicationId <Guid> [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm]

   [<CommonParameters>]
- >-
  New-AzADServicePrincipal -ApplicationId <Guid> [-StartDate <DateTime>] [-EndDate <DateTime>]

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  New-AzADServicePrincipal -ApplicationId <Guid> -PasswordCredential <PSADPasswordCredential[]>

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  New-AzADServicePrincipal -ApplicationId <Guid> -CertValue <String> [-StartDate <DateTime>]

   [-EndDate <DateTime>] [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  New-AzADServicePrincipal -ApplicationId <Guid> -KeyCredential <PSADKeyCredential[]>

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  New-AzADServicePrincipal -DisplayName <String> [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm]

   [<CommonParameters>]
- >-
  New-AzADServicePrincipal -DisplayName <String> [-StartDate <DateTime>] [-EndDate <DateTime>]

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  New-AzADServicePrincipal -DisplayName <String> -PasswordCredential <PSADPasswordCredential[]>

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  New-AzADServicePrincipal -DisplayName <String> -CertValue <String> [-StartDate <DateTime>]

   [-EndDate <DateTime>] [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  New-AzADServicePrincipal -DisplayName <String> -KeyCredential <PSADKeyCredential[]>

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  New-AzADServicePrincipal -ApplicationObject <PSADApplication> [-StartDate <DateTime>] [-EndDate <DateTime>]

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  New-AzADServicePrincipal -ApplicationObject <PSADApplication> -PasswordCredential <PSADPasswordCredential[]>

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  New-AzADServicePrincipal -ApplicationObject <PSADApplication> -CertValue <String> [-StartDate <DateTime>]

   [-EndDate <DateTime>] [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  New-AzADServicePrincipal -ApplicationObject <PSADApplication> -KeyCredential <PSADKeyCredential[]>

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: 'Example 1: Simple AD service principal creation'
  code: |-
    New-AzADServicePrincipal

    Secret                : System.Security.SecureString
    ServicePrincipalNames : {00000000-0000-0000-0000-000000000000, http://azure-powershell-05-22-2018-18-23-43}
    ApplicationId         : 00000000-0000-0000-0000-000000000000
    DisplayName           : azure-powershell-05-22-2018-18-23-43
    Id                    : 00000000-0000-0000-0000-000000000000
    Type                  : ServicePrincipal
  description: ""
  summary: |+
    The following example creates an AD service principal using default values for parameters not
    specified. Since an application ID is not provided, an application is created for the service
    principal. Since no values are provided for **Role** or **Scope**, the created service principal is
    assigned the **contributor** role for the current subscription.

- title: 'Example 2: Simple AD service principal creation with a specified role and default scope'
  code: |-
    New-AzADServicePrincipal -Role Reader

    Secret                : System.Security.SecureString
    ServicePrincipalNames : {00000000-0000-0000-0000-000000000000, http://azure-powershell-05-22-2018-18-23-43}
    ApplicationId         : 00000000-0000-0000-0000-000000000000
    DisplayName           : azure-powershell-05-22-2018-18-23-43
    Id                    : 00000000-0000-0000-0000-000000000000
    Type                  : ServicePrincipal

    WARNING: Assigning role 'Reader' over scope '/subscriptions/00000000-0000-0000-0000-000000000000' to the new service principal.
  description: ""
  summary: |+
    The following example creates an AD service principal using the default values for parameters not
    specified. Since the application ID is not provided, an application is created for the service
    principal. The service principal is created with **Reader** permissions for the current subscription
    since no value is provided for the **Scope** parameter.

- title: 'Example 3: Simple AD service principal creation with a specified scope and default role'
  code: |-
    New-AzADServicePrincipal -Scope /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup

    Secret                : System.Security.SecureString
    ServicePrincipalNames : {00000000-0000-0000-0000-000000000000, http://azure-powershell-05-22-2018-18-23-43}
    ApplicationId         : 00000000-0000-0000-0000-000000000000
    DisplayName           : azure-powershell-05-22-2018-18-23-43
    Id                    : 00000000-0000-0000-0000-000000000000
    Type                  : ServicePrincipal

    WARNING: Assigning role 'Contributor' over scope '/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup' to the new service principal.
  description: ""
  summary: |+
    The following example creates an AD service principal using the default values for parameters not
    specified. Since the application ID is not provided, an application is created for the service
    principal. The service principal is created with **Contributor** permissions for the provided
    resource group scope since no value is provided for the **Role** parameter.

- title: 'Example 4: Simple AD service principal creation with a specified scope and role'
  code: |-
    New-AzADServicePrincipal -Role Reader -Scope /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup

    Secret                : System.Security.SecureString
    ServicePrincipalNames : {00000000-0000-0000-0000-000000000000, http://azure-powershell-05-22-2018-18-23-43}
    ApplicationId         : 00000000-0000-0000-0000-000000000000
    DisplayName           : azure-powershell-05-22-2018-18-23-43
    Id                    : 00000000-0000-0000-0000-000000000000
    Type                  : ServicePrincipal

    WARNING: Assigning role 'Reader' over scope '/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup' to the new service principal.
  description: ""
  summary: |+
    The following example creates an AD service principal using the default values for parameters not
    specified. Since the application ID is not provided, an application is created for the service
    principal. The service principal is created with **Reader** permissions for the provided resource
    group scope.

- title: 'Example 5: Create a new AD service principal using application ID with role assignment'
  code: |-
    New-AzADServicePrincipal -ApplicationId 00000000-0000-0000-0000-000000000000

    ServicePrincipalNames : {00000000-0000-0000-0000-000000000000, http://my-temp-app}
    ApplicationId         : 00000000-0000-0000-0000-000000000000
    DisplayName           : my-temp-app
    Id                    : 00000000-0000-0000-0000-000000000000
    Type                  : ServicePrincipal
  description: ""
  summary: |+
    The following example creates a new AD service principal for the application with application ID
    '00000000-0000-0000-0000-000000000000'. Since no values are provided for **Role** or **Scope**, the
    created service principal is assigned the **contributor** role for the current subscription.

- title: 'Example 6: Create a new AD service principal using piping'
  code: |-
    Get-AzADApplication -ObjectId 3ede3c26-b443-4e0b-9efc-b05e68338dc3 | New-AzADServicePrincipal
  description: ""
  summary: |+
    The following example retrieves the application with object ID
    '3ede3c26-b443-4e0b-9efc-b05e68338dc3' using the [Get-AzADApplication](./get-azadapplication.yml)
    cmdlet. The results are piped to the `New-AzADServicePrincipal` cmdlet to create a new AD service
    principal for that application.

- title: 'Example 7: Create a new AD service principal using DisplayName and password credential'
  code: |-
    $credentials = New-Object -TypeName Microsoft.Azure.Commands.ActiveDirectory.PSADPasswordCredential -Property @{
      StartDate=Get-Date; EndDate=Get-Date -Year 2024; Password='StrongPassworld!23'}
    $sp = New-AzAdServicePrincipal -DisplayName ServicePrincipalName -PasswordCredential $credentials

    ServicePrincipalNames : {00000000-0000-0000-0000-000000000000, http://ServicePrincipalName}
    ApplicationId         : 00000000-0000-0000-0000-000000000000c
    ObjectType            : ServicePrincipal
    DisplayName           : ServicePrincipalName
    Id                    : 00000000-0000-0000-0000-000000000000
    Type                  :
  description: ""
  summary: |+
    The following example creates a new application with the name **ServicePrincipalName** and a
    password of **StrongPassworld!23**. It creates the service principal based on the created
    application. The start date and end date are added to the password credential.

- title: 'Example 8: Create a new AD service principal using DisplayName and plain key credential'
  code: |-
    $cert = 'public certificate as Base64 encoded string'
    $sp = New-AzADServicePrincipal -DisplayName ServicePrincipalName -CertValue $cert  -EndDate '2021-01-01'

    ServicePrincipalNames : {00000000-0000-0000-0000-000000000000, http://ServicePrincipalName}
    ApplicationId         : 00000000-0000-0000-0000-000000000000
    ObjectType            : ServicePrincipal
    DisplayName           : ServicePrincipalName
    Id                    : 00000000-0000-0000-0000-000000000000
    Type                  :
  description: ""
  summary: |+
    The following example creates a new application with the name **ServicePrincipalName** and a
    certificate **$cert**. It creates the service principal based on the application created. The end
    date is added to key credential.

parameters:
- type: <xref href="System.Guid" data-throw-if-not-resolved="False" />
  name: ApplicationId
  isRequired: true
  description: |+
    The unique application ID for a service principal in a tenant. Once created this property cannot be
    changed. If an application ID for an existing application is not specified, an application is
    created.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.ActiveDirectory.PSADApplication" data-throw-if-not-resolved="False" />
  name: ApplicationObject
  isRequired: true
  description: |+
    The object representing the application for which the service principal is created.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: CertValue
  isRequired: true
  description: |+
    The value of the asymmetric credential type. It represents the Base64 encoded certificate.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: None
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Common.Authentication.Abstractions.Core.IAzureContextContainer" data-throw-if-not-resolved="False" />
  name: DefaultProfile
  description: |+
    The credentials, account, tenant, and subscription used for communication with Azure.

  defaultValue: None
  position: Named
  aliases: AzContext, AzureRmContext, AzureCredential
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: DisplayName
  isRequired: true
  description: |+
    The friendly name of the service principal. If a display name is not provided, this value will
    default to **azure-powershell-MM-dd-yyyy-HH-mm-ss** where the suffix is the time of application
    creation.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.DateTime" data-throw-if-not-resolved="False" />
  name: EndDate
  description: |+
    The effective end date of the credential usage. The default end date value is one year from today.
    For an asymmetric type credential, this must be set to on or before the date that the X509
    certificate is valid.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.ActiveDirectory.PSADKeyCredential" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: KeyCredential
  isRequired: true
  description: |+
    The collection of key credentials associated with the application.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: KeyCredentials
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.ActiveDirectory.PSADPasswordCredential" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: PasswordCredential
  isRequired: true
  description: |+
    The collection of password credentials associated with the application.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: PasswordCredentials
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Role
  description: |+
    The role that the service principal has over the scope. If no value is provided, **Role** defaults
    to the **Contributor** role.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Scope
  description: |+
    The scope that the service principal has permissions for. If no value is provided, **Scope**
    defaults to the current subscription.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: SkipAssignment
  description: |+
    If set, skip creating the default role assignment for the service principal.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.DateTime" data-throw-if-not-resolved="False" />
  name: StartDate
  description: |+
    The effective start date of the credential usage. The default start date value is today. For an
    asymmetric type credential, this must be set to on or after the date that the X509 certificate is
    valid from.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs. The cmdlet is not run.

  defaultValue: None
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Az.Resources.New-AzADServicePrincipal
name: New-AzADServicePrincipal
description: |-
  Creates a new Azure active directory service principal. The default parameter set uses default
  values for parameters if they are not provided. For more information on default values, see the
  description for each parameter. This cmdlet has the ability to assign a role to the service
  principal with the **Role** and **Scope** parameters. If both are omitted, the contributor role is
  assigned to the service principal. The default values for the **Role** and **Scope** parameters are
  **Contributor** for the current subscription. The cmdlet creates an application and sets its
  properties if an ApplicationId is not provided. To update the application-specific parameters, use
  the [Update-AzADApplication](./update-azadapplication.yml) cmdlet.

  > [!WARNING]
  > When you create a service principal using the **New-AzADServicePrincipal** command, the output includes credentials that you must protect. As an alternative, consider using [managed identities](/azure/active-directory/managed-identities-azure-resources/overview) to avoid the need to use credentials.
  >
  > By default, **New-AzADServicePrincipal** assigns the [Contributor](/azure/role-based-access-control/built-in-roles#contributor) role to the service principal at the subscription scope. To reduce your risk of a compromised service principal, assign a more specific role and narrow the scope to a resource or resource group. See [Steps to add a role assignment](/azure/role-based-access-control/role-assignments-steps) for more information.
metadata:
  external help file: Microsoft.Azure.PowerShell.Cmdlets.Resources.dll-Help.xml
  Module Name: Az.Resources
  ms.assetid: D602F910-B26F-473D-B5B6-C7BDFB0A14CB
  online version: https://docs.microsoft.com/en-us/powershell/module/az.resources/new-azadserviceprincipal
  schema: 2.0.0
  content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Resources/Resources/help/New-AzADServicePrincipal.md
  original_content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Resources/Resources/help/New-AzADServicePrincipal.md
