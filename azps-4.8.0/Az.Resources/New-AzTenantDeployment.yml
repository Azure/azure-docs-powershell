### YamlMime:PowershellCmdlet
summary: |-
  Create a deployment at tenant scope
module: Az.Resources
notes: ""
inputs:
- name: <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="System.String" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Azure.Commands.ResourceManager.Cmdlets.SdkModels.PSDeployment" data-throw-if-not-resolved="False" />
  description: ""
syntaxes:
- >-
  New-AzTenantDeployment [-Name <String>] -Location <String> [-DeploymentDebugLogLevel <String>]

   [-Tag <Hashtable>] [-WhatIfResultFormat <WhatIfResultFormat>] [-WhatIfExcludeChangeType <String[]>] [-AsJob]

   -TemplateFile <String> [-SkipTemplateParameterPrompt] [-ApiVersion <String>] [-Pre]

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  New-AzTenantDeployment [-Name <String>] -Location <String> [-DeploymentDebugLogLevel <String>]

   [-Tag <Hashtable>] [-WhatIfResultFormat <WhatIfResultFormat>] [-WhatIfExcludeChangeType <String[]>] [-AsJob]

   -TemplateParameterObject <Hashtable> -TemplateObject <Hashtable> [-SkipTemplateParameterPrompt]

   [-ApiVersion <String>] [-Pre] [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm]

   [<CommonParameters>]
- >-
  New-AzTenantDeployment [-Name <String>] -Location <String> [-DeploymentDebugLogLevel <String>]

   [-Tag <Hashtable>] [-WhatIfResultFormat <WhatIfResultFormat>] [-WhatIfExcludeChangeType <String[]>] [-AsJob]

   -TemplateParameterObject <Hashtable> -TemplateFile <String> [-SkipTemplateParameterPrompt]

   [-ApiVersion <String>] [-Pre] [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm]

   [<CommonParameters>]
- >-
  New-AzTenantDeployment [-Name <String>] -Location <String> [-DeploymentDebugLogLevel <String>]

   [-Tag <Hashtable>] [-WhatIfResultFormat <WhatIfResultFormat>] [-WhatIfExcludeChangeType <String[]>] [-AsJob]

   -TemplateParameterObject <Hashtable> -TemplateUri <String> [-SkipTemplateParameterPrompt]

   [-ApiVersion <String>] [-Pre] [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm]

   [<CommonParameters>]
- >-
  New-AzTenantDeployment [-Name <String>] -Location <String> [-DeploymentDebugLogLevel <String>]

   [-Tag <Hashtable>] [-WhatIfResultFormat <WhatIfResultFormat>] [-WhatIfExcludeChangeType <String[]>] [-AsJob]

   -TemplateParameterFile <String> -TemplateObject <Hashtable> [-SkipTemplateParameterPrompt]

   [-ApiVersion <String>] [-Pre] [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm]

   [<CommonParameters>]
- >-
  New-AzTenantDeployment [-Name <String>] -Location <String> [-DeploymentDebugLogLevel <String>]

   [-Tag <Hashtable>] [-WhatIfResultFormat <WhatIfResultFormat>] [-WhatIfExcludeChangeType <String[]>] [-AsJob]

   -TemplateParameterFile <String> -TemplateFile <String> [-SkipTemplateParameterPrompt] [-ApiVersion <String>]

   [-Pre] [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  New-AzTenantDeployment [-Name <String>] -Location <String> [-DeploymentDebugLogLevel <String>]

   [-Tag <Hashtable>] [-WhatIfResultFormat <WhatIfResultFormat>] [-WhatIfExcludeChangeType <String[]>] [-AsJob]

   -TemplateParameterFile <String> -TemplateUri <String> [-SkipTemplateParameterPrompt] [-ApiVersion <String>]

   [-Pre] [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  New-AzTenantDeployment [-Name <String>] -Location <String> [-DeploymentDebugLogLevel <String>]

   [-Tag <Hashtable>] [-WhatIfResultFormat <WhatIfResultFormat>] [-WhatIfExcludeChangeType <String[]>] [-AsJob]

   -TemplateParameterUri <String> -TemplateObject <Hashtable> [-SkipTemplateParameterPrompt]

   [-ApiVersion <String>] [-Pre] [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm]

   [<CommonParameters>]
- >-
  New-AzTenantDeployment [-Name <String>] -Location <String> [-DeploymentDebugLogLevel <String>]

   [-Tag <Hashtable>] [-WhatIfResultFormat <WhatIfResultFormat>] [-WhatIfExcludeChangeType <String[]>] [-AsJob]

   -TemplateParameterUri <String> -TemplateFile <String> [-SkipTemplateParameterPrompt] [-ApiVersion <String>]

   [-Pre] [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  New-AzTenantDeployment [-Name <String>] -Location <String> [-DeploymentDebugLogLevel <String>]

   [-Tag <Hashtable>] [-WhatIfResultFormat <WhatIfResultFormat>] [-WhatIfExcludeChangeType <String[]>] [-AsJob]

   -TemplateParameterUri <String> -TemplateUri <String> [-SkipTemplateParameterPrompt] [-ApiVersion <String>]

   [-Pre] [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  New-AzTenantDeployment [-Name <String>] -Location <String> [-DeploymentDebugLogLevel <String>]

   [-Tag <Hashtable>] [-WhatIfResultFormat <WhatIfResultFormat>] [-WhatIfExcludeChangeType <String[]>] [-AsJob]

   -TemplateObject <Hashtable> [-SkipTemplateParameterPrompt] [-ApiVersion <String>] [-Pre]

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  New-AzTenantDeployment [-Name <String>] -Location <String> [-DeploymentDebugLogLevel <String>]

   [-Tag <Hashtable>] [-WhatIfResultFormat <WhatIfResultFormat>] [-WhatIfExcludeChangeType <String[]>] [-AsJob]

   -TemplateUri <String> [-SkipTemplateParameterPrompt] [-ApiVersion <String>] [-Pre]

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: 'Example 1: Use a custom template and parameter file to create a deployment'
  code: |-
    PS C:\> New-AzTenantDeployment -Location "West US" -TemplateFile "D:\Azure\Templates\OrgSetup.json" -TemplateParameterFile "D:\Azure\Templates\OrgParms.json" -Tag @{"key1"="value1"; "key2"="value2";}
  description: |-
    This command creates a new deployment at the current tenant scope by using a custom template and a template file on disk, with defined tags parameter.
    The command uses the *TemplateFile* parameter to specify the template and the *TemplateParameterFile* parameter to specify a file that contains parameters and parameter values.
  summary: ""
- title: 'Example 2: Use a custom template object and parameter file to create a deployment'
  code: |-
    PS C:\> $TemplateFileText = [System.IO.File]::ReadAllText("D:\Azure\Templates\OrgSetup.json")
    PS C:\> $TemplateObject = ConvertFrom-Json $TemplateFileText -AsHashtable
    PS C:\> New-AzTenantDeployment -Location "West US" -TemplateObject $TemplateObject -TemplateParameterFile "D:\Azure\Templates\OrgParams.json"
  description: |-
    This command creates a new deployment at the current tenant by using a custom template and a template file on disk that has been converted to an in-memory hashtable.
    The first two commands read the text for the template file on disk and convert it to an in-memory hashtable.
    The last command uses the *TemplateObject* parameter to specify this hashtable and the *TemplateParameterFile* parameter to specify a file that contains parameters and parameter values.
  summary: ""
parameters:
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ApiVersion
  description: |+
    When set, indicates the version of the resource provider API to use.
    If not specified, the API version is automatically determined as the latest available.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: AsJob
  description: |+
    Run cmdlet in the background

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: None
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Common.Authentication.Abstractions.Core.IAzureContextContainer" data-throw-if-not-resolved="False" />
  name: DefaultProfile
  description: |+
    The credentials, account, tenant, and subscription used for communication with Azure.

  defaultValue: None
  position: Named
  aliases: AzContext, AzureRmContext, AzureCredential
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: DeploymentDebugLogLevel
  description: |+
    The deployment debug log level.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Location
  isRequired: true
  description: |+
    The location to store deployment data.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Name
  description: |+
    The name of the deployment it's going to create. If not specified, defaults to the template file name when a template file is provided; defaults to the current time when a template object is provided, e.g. "20131223140835".

  defaultValue: None
  position: Named
  aliases: DeploymentName
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Pre
  description: |+
    When set, indicates that the cmdlet should use pre-release API versions when automatically determining which version to use.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: SkipTemplateParameterPrompt
  description: |+
    Skips the PowerShell dynamic parameter processing that checks if the provided template parameter contains all necessary parameters used by the template.
    This check would prompt the user to provide a value for the missing parameters, but providing the -SkipTemplateParameterPrompt will ignore this prompt and error out immediately if a parameter was found not to be bound in the template.
    For non-interactive scripts, -SkipTemplateParameterPrompt can be provided to provide a better error message in the case where not all required parameters are satisfied.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="False" />
  name: Tag
  description: |+
    The tags to put on the deployment.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: TemplateFile
  isRequired: true
  description: |+
    Local path to the template file.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="False" />
  name: TemplateObject
  isRequired: true
  description: |+
    A hash table which represents the template.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: TemplateParameterFile
  isRequired: true
  description: |+
    A file that has the template parameters.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="False" />
  name: TemplateParameterObject
  isRequired: true
  description: |+
    A hash table which represents the parameters.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: TemplateParameterUri
  isRequired: true
  description: |+
    Uri to the template parameter file.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: TemplateUri
  isRequired: true
  description: |+
    Uri to the template file.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: None
  position: Named
  aliases: wi
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: WhatIfExcludeChangeType
  description: |+
    Comma-separated resource change types to be excluded from What-If results. Applicable when the -WhatIf or -Confirm switch is set.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Management.ResourceManager.Models.WhatIfResultFormat" data-throw-if-not-resolved="False" />
  name: WhatIfResultFormat
  description: |+
    The What-If result format. Applicable when the -WhatIf or -Confirm switch is set.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ResourceIdOnly, FullResourcePayloads
uid: Az.Resources.New-AzTenantDeployment
name: New-AzTenantDeployment
description: |-
  The **New-AzTenantDeployment** cmdlet adds a deployment at the current tenant scope.

  To add a deployment at tenant scope, specify the location and a template.
  The location tells Azure Resource Manager where to store the deployment data. The template is a JSON string that contains individual resources to be deployed.
  The template includes parameter placeholders for required resources and configurable property values, such as names and sizes.

  To use a custom template for the deployment, specify the *TemplateFile* parameter or *TemplateUri* parameter.
  Each template has parameters for configurable properties.
  To specify values for the template parameters, specify the *TemplateParameterFile* parameter or the *TemplateParameterObject* parameter.
  Alternatively, you can use the template parameters that are dynamically added to the command when you specify a template.
  To use dynamic parameters, type them at the command prompt, or type a minus sign (-) to indicate a parameter and use the Tab key to cycle through available parameters.
  Template parameter values that you enter at the command prompt take precedence over values in a template parameter object or file.

  To add resources to a resource group, use the **New-AzResourceGroupDeployment** which creates a deployment at a resource group.
  To add resources to a subscription, use the **New-AzSubscriptionDeployment** which creates a deployment at subscription scope, which deploys subscription level resources.
  To add resources at a management group, use the **New-AzManagementGroupDeployment** which creates a deployment at a management group.
metadata:
  external help file: Microsoft.Azure.PowerShell.Cmdlets.ResourceManager.dll-Help.xml
  Module Name: Az.Resources
  online version: https://docs.microsoft.com/en-us/powershell/module/az.resources/new-aztenantdeployment
  schema: 2.0.0
  content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Resources/Resources/help/New-AzTenantDeployment.md
  original_content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Resources/Resources/help/New-AzTenantDeployment.md
