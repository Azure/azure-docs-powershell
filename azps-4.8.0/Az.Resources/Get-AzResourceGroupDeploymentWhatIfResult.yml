### YamlMime:PowershellCmdlet
summary: |-
  Gets an ARM template What-If result for a deployment at resource group scope.
module: Az.Resources
notes: ""
inputs:
- name: <xref href="System.String" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="Microsoft.Azure.Management.ResourceManager.Models.DeploymentMode" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Azure.Commands.ResourceManager.Cmdlets.SdkModels.Deployments.PSWhatIfOperationResult" data-throw-if-not-resolved="False" />
  description: ""
syntaxes:
- >-
  Get-AzResourceGroupDeploymentWhatIfResult [-Name <String>] -ResourceGroupName <String> [-Mode <DeploymentMode>]

   [-ResultFormat <WhatIfResultFormat>] [-ExcludeChangeType <String[]>] -TemplateFile <String>

   [-SkipTemplateParameterPrompt] [-ApiVersion <String>] [-Pre] [-DefaultProfile <IAzureContextContainer>]

   [<CommonParameters>]
- >-
  Get-AzResourceGroupDeploymentWhatIfResult [-Name <String>] -ResourceGroupName <String> [-Mode <DeploymentMode>]

   [-ResultFormat <WhatIfResultFormat>] [-ExcludeChangeType <String[]>] -TemplateParameterObject <Hashtable>

   -TemplateObject <Hashtable> [-SkipTemplateParameterPrompt] [-ApiVersion <String>] [-Pre]

   [-DefaultProfile <IAzureContextContainer>] [<CommonParameters>]
- >-
  Get-AzResourceGroupDeploymentWhatIfResult [-Name <String>] -ResourceGroupName <String> [-Mode <DeploymentMode>]

   [-ResultFormat <WhatIfResultFormat>] [-ExcludeChangeType <String[]>] -TemplateParameterObject <Hashtable>

   -TemplateFile <String> [-SkipTemplateParameterPrompt] [-ApiVersion <String>] [-Pre]

   [-DefaultProfile <IAzureContextContainer>] [<CommonParameters>]
- >-
  Get-AzResourceGroupDeploymentWhatIfResult [-Name <String>] -ResourceGroupName <String> [-Mode <DeploymentMode>]

   [-ResultFormat <WhatIfResultFormat>] [-ExcludeChangeType <String[]>] -TemplateParameterObject <Hashtable>

   -TemplateUri <String> [-SkipTemplateParameterPrompt] [-ApiVersion <String>] [-Pre]

   [-DefaultProfile <IAzureContextContainer>] [<CommonParameters>]
- >-
  Get-AzResourceGroupDeploymentWhatIfResult [-Name <String>] -ResourceGroupName <String> [-Mode <DeploymentMode>]

   [-ResultFormat <WhatIfResultFormat>] [-ExcludeChangeType <String[]>] -TemplateParameterFile <String>

   -TemplateObject <Hashtable> [-SkipTemplateParameterPrompt] [-ApiVersion <String>] [-Pre]

   [-DefaultProfile <IAzureContextContainer>] [<CommonParameters>]
- >-
  Get-AzResourceGroupDeploymentWhatIfResult [-Name <String>] -ResourceGroupName <String> [-Mode <DeploymentMode>]

   [-ResultFormat <WhatIfResultFormat>] [-ExcludeChangeType <String[]>] -TemplateParameterFile <String>

   -TemplateFile <String> [-SkipTemplateParameterPrompt] [-ApiVersion <String>] [-Pre]

   [-DefaultProfile <IAzureContextContainer>] [<CommonParameters>]
- >-
  Get-AzResourceGroupDeploymentWhatIfResult [-Name <String>] -ResourceGroupName <String> [-Mode <DeploymentMode>]

   [-ResultFormat <WhatIfResultFormat>] [-ExcludeChangeType <String[]>] -TemplateParameterFile <String>

   -TemplateUri <String> [-SkipTemplateParameterPrompt] [-ApiVersion <String>] [-Pre]

   [-DefaultProfile <IAzureContextContainer>] [<CommonParameters>]
- >-
  Get-AzResourceGroupDeploymentWhatIfResult [-Name <String>] -ResourceGroupName <String> [-Mode <DeploymentMode>]

   [-ResultFormat <WhatIfResultFormat>] [-ExcludeChangeType <String[]>] -TemplateParameterUri <String>

   -TemplateObject <Hashtable> [-SkipTemplateParameterPrompt] [-ApiVersion <String>] [-Pre]

   [-DefaultProfile <IAzureContextContainer>] [<CommonParameters>]
- >-
  Get-AzResourceGroupDeploymentWhatIfResult [-Name <String>] -ResourceGroupName <String> [-Mode <DeploymentMode>]

   [-ResultFormat <WhatIfResultFormat>] [-ExcludeChangeType <String[]>] -TemplateParameterUri <String>

   -TemplateFile <String> [-SkipTemplateParameterPrompt] [-ApiVersion <String>] [-Pre]

   [-DefaultProfile <IAzureContextContainer>] [<CommonParameters>]
- >-
  Get-AzResourceGroupDeploymentWhatIfResult [-Name <String>] -ResourceGroupName <String> [-Mode <DeploymentMode>]

   [-ResultFormat <WhatIfResultFormat>] [-ExcludeChangeType <String[]>] -TemplateParameterUri <String>

   -TemplateUri <String> [-SkipTemplateParameterPrompt] [-ApiVersion <String>] [-Pre]

   [-DefaultProfile <IAzureContextContainer>] [<CommonParameters>]
- >-
  Get-AzResourceGroupDeploymentWhatIfResult [-Name <String>] -ResourceGroupName <String> [-Mode <DeploymentMode>]

   [-ResultFormat <WhatIfResultFormat>] [-ExcludeChangeType <String[]>] -TemplateObject <Hashtable>

   [-SkipTemplateParameterPrompt] [-ApiVersion <String>] [-Pre] [-DefaultProfile <IAzureContextContainer>]

   [<CommonParameters>]
- >-
  Get-AzResourceGroupDeploymentWhatIfResult [-Name <String>] -ResourceGroupName <String> [-Mode <DeploymentMode>]

   [-ResultFormat <WhatIfResultFormat>] [-ExcludeChangeType <String[]>] -TemplateUri <String>

   [-SkipTemplateParameterPrompt] [-ApiVersion <String>] [-Pre] [-DefaultProfile <IAzureContextContainer>]

   [<CommonParameters>]
examples:
- title: 'Example 1: Get a What-If result at resource group scope'
  code: |-
    PS C:\> Get-AzResourceGroupDeploymentWhatIfResult `
        -DeploymentName "deploy-01" `
        -ResourceGroupName "myRG1" `
        -TemplateFile "D:\Azure\Templates\ServiceTemplate.json" `
        -TemplateParameterFile "D:\Azure\Templates\ServiceParameters.json" `
        -ResultFormat "FullResourcePayloads"
  description: |-
    This command gets a What-If result at the specified resource group scope by using a custom template file and a parameter file on disk.
    The command uses the *ResourceGroupName* parameter to specify a resource group where the template will be deployed.
    The command uses the *TemplateFile* parameter to specify a template file.
    The command uses the *TemplateParameterFile* parameter to specify a template parameter file.
    The command uses the *ResultFormat* parameter to set the What-If result to include full resource payloads.
  summary: ""
- title: 'Example 2: Get a What-If result at resource group scope with ResourceIdOnly'
  code: |-
    PS C:\> Get-AzResourceGroupDeploymentWhatIfResult `
        -DeploymentName "deploy-01" `
        -ResourceGroupName "myRG1" `
        -TemplateFile "D:\Azure\Templates\ServiceTemplate.json" `
        -TemplateParameterFile "D:\Azure\Templates\ServiceParameters.json" `
        -ResultFormat "ResourceIdOnly"
  description: |-
    This command gets a What-If result at the specified resource group scope by using a custom template file and a parameter file on disk.
    The command uses the *ResourceGroupName* parameter to specify a resource group where the template will be deployed.
    The command uses the *TemplateFile* parameter to specify a template file.
    The command uses the *TemplateParameterFile* parameter to specify a template parameter file.
    The command uses the *ResultFormat* parameter to set the What-If result to only contain resource IDs.
  summary: ""
parameters:
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ApiVersion
  description: |+
    When set, indicates the version of the resource provider API to use.
    If not specified, the API version is automatically determined as the latest available.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Common.Authentication.Abstractions.Core.IAzureContextContainer" data-throw-if-not-resolved="False" />
  name: DefaultProfile
  description: |+
    The credentials, account, tenant, and subscription used for communication with Azure.

  defaultValue: None
  position: Named
  aliases: AzContext, AzureRmContext, AzureCredential
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: ExcludeChangeType
  description: |+
    Comma-separated resource change types to be excluded from What-If results.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Management.ResourceManager.Models.DeploymentMode" data-throw-if-not-resolved="False" />
  name: Mode
  description: |+
    The deployment mode.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: Incremental, Complete
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Name
  description: |+
    The name of the deployment it's going to create. If not specified, defaults to the template file name when a template file is provided; defaults to the current time when a template object is provided, e.g. "20131223140835".

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: DeploymentName
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Pre
  description: |+
    When set, indicates that the cmdlet should use pre-release API versions when automatically determining which version to use.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ResourceGroupName
  isRequired: true
  description: |+
    The resource group name.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Management.ResourceManager.Models.WhatIfResultFormat" data-throw-if-not-resolved="False" />
  name: ResultFormat
  description: |+
    The What-If result format.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ResourceIdOnly, FullResourcePayloads
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: SkipTemplateParameterPrompt
  description: |+
    Skips the PowerShell dynamic parameter processing that checks if the provided template parameter contains all necessary parameters used by the template.
    This check would prompt the user to provide a value for the missing parameters, but providing the -SkipTemplateParameterPrompt will ignore this prompt and error out immediately if a parameter was found not to be bound in the template.
    For non-interactive scripts, -SkipTemplateParameterPrompt can be provided to provide a better error message in the case where not all required parameters are satisfied.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: TemplateFile
  isRequired: true
  description: |+
    Local path to the template file.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="False" />
  name: TemplateObject
  isRequired: true
  description: |+
    A hash table which represents the template.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: TemplateParameterFile
  isRequired: true
  description: |+
    A file that has the template parameters.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="False" />
  name: TemplateParameterObject
  isRequired: true
  description: |+
    A hash table which represents the parameters.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: TemplateParameterUri
  isRequired: true
  description: |+
    Uri to the template parameter file.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: TemplateUri
  isRequired: true
  description: |+
    Uri to the template file.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
uid: Az.Resources.Get-AzResourceGroupDeploymentWhatIfResult
name: Get-AzResourceGroupDeploymentWhatIfResult
description: |-
  The **Get-AzResourceGroupDeploymentWhatIfResult** cmdlet gets the ARM template What-If result for a template deployment at the specified resource group scope. It returns a list of changes indicating what resources will be updated if the deployment is applied without making any changes to real resources. To specify the format for the returning result, use the *ResultFormat* parameter.
metadata:
  external help file: Microsoft.Azure.PowerShell.Cmdlets.ResourceManager.dll-Help.xml
  Module Name: Az.Resources
  online version: https://docs.microsoft.com/en-us/powershell/module/az.resources/get-azresourcegroupdeploymentwhatifresult
  schema: 2.0.0
  content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Resources/Resources/help/Get-AzResourceGroupDeploymentWhatIfResult.md
  original_content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/Resources/Resources/help/Get-AzResourceGroupDeploymentWhatIfResult.md
