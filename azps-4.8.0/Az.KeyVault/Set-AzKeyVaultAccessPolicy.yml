### YamlMime:PowershellCmdlet
summary: |-
  Grants or modifies existing permissions for a user, application, or security group to perform operations with a key vault.
module: Az.KeyVault
notes: ""
inputs:
- name: <xref href="Microsoft.Azure.Commands.KeyVault.Models.PSKeyVaultIdentityItem" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="System.String" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Azure.Commands.KeyVault.Models.PSKeyVault" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Get-AzKeyVault
  href: ./Get-AzKeyVault.yml
- text: Remove-AzKeyVaultAccessPolicy
  href: ./Remove-AzKeyVaultAccessPolicy.yml
syntaxes:
- >-
  Set-AzKeyVaultAccessPolicy [-VaultName] <String> [[-ResourceGroupName] <String>] -UserPrincipalName <String>

   [-PermissionsToKeys <String[]>] [-PermissionsToSecrets <String[]>] [-PermissionsToCertificates <String[]>]

   [-PermissionsToStorage <String[]>] [-PassThru] [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm]

   [<CommonParameters>]
- >-
  Set-AzKeyVaultAccessPolicy [-VaultName] <String> [[-ResourceGroupName] <String>] -ObjectId <String>

   [-ApplicationId <Guid>] [-PermissionsToKeys <String[]>] [-PermissionsToSecrets <String[]>]

   [-PermissionsToCertificates <String[]>] [-PermissionsToStorage <String[]>] [-BypassObjectIdValidation]

   [-PassThru] [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Set-AzKeyVaultAccessPolicy [-VaultName] <String> [[-ResourceGroupName] <String>] -ServicePrincipalName <String>

   [-PermissionsToKeys <String[]>] [-PermissionsToSecrets <String[]>] [-PermissionsToCertificates <String[]>]

   [-PermissionsToStorage <String[]>] [-PassThru] [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm]

   [<CommonParameters>]
- >-
  Set-AzKeyVaultAccessPolicy [-VaultName] <String> [[-ResourceGroupName] <String>] -EmailAddress <String>

   [-PermissionsToKeys <String[]>] [-PermissionsToSecrets <String[]>] [-PermissionsToCertificates <String[]>]

   [-PermissionsToStorage <String[]>] [-PassThru] [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm]

   [<CommonParameters>]
- >-
  Set-AzKeyVaultAccessPolicy [-VaultName] <String> [[-ResourceGroupName] <String>] [-EnabledForDeployment]

   [-EnabledForTemplateDeployment] [-EnabledForDiskEncryption] [-PassThru]

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Set-AzKeyVaultAccessPolicy [-InputObject] <PSKeyVaultIdentityItem> -ObjectId <String> [-ApplicationId <Guid>]

   [-PermissionsToKeys <String[]>] [-PermissionsToSecrets <String[]>] [-PermissionsToCertificates <String[]>]

   [-PermissionsToStorage <String[]>] [-BypassObjectIdValidation] [-PassThru]

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Set-AzKeyVaultAccessPolicy [-InputObject] <PSKeyVaultIdentityItem> -ServicePrincipalName <String>

   [-PermissionsToKeys <String[]>] [-PermissionsToSecrets <String[]>] [-PermissionsToCertificates <String[]>]

   [-PermissionsToStorage <String[]>] [-PassThru] [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm]

   [<CommonParameters>]
- >-
  Set-AzKeyVaultAccessPolicy [-InputObject] <PSKeyVaultIdentityItem> -UserPrincipalName <String>

   [-PermissionsToKeys <String[]>] [-PermissionsToSecrets <String[]>] [-PermissionsToCertificates <String[]>]

   [-PermissionsToStorage <String[]>] [-PassThru] [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm]

   [<CommonParameters>]
- >-
  Set-AzKeyVaultAccessPolicy [-InputObject] <PSKeyVaultIdentityItem> -EmailAddress <String>

   [-PermissionsToKeys <String[]>] [-PermissionsToSecrets <String[]>] [-PermissionsToCertificates <String[]>]

   [-PermissionsToStorage <String[]>] [-PassThru] [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm]

   [<CommonParameters>]
- >-
  Set-AzKeyVaultAccessPolicy [-InputObject] <PSKeyVaultIdentityItem> [-EnabledForDeployment]

   [-EnabledForTemplateDeployment] [-EnabledForDiskEncryption] [-PassThru]

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Set-AzKeyVaultAccessPolicy [-ResourceId] <String> -ObjectId <String> [-ApplicationId <Guid>]

   [-PermissionsToKeys <String[]>] [-PermissionsToSecrets <String[]>] [-PermissionsToCertificates <String[]>]

   [-PermissionsToStorage <String[]>] [-BypassObjectIdValidation] [-PassThru]

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Set-AzKeyVaultAccessPolicy [-ResourceId] <String> -ServicePrincipalName <String>

   [-PermissionsToKeys <String[]>] [-PermissionsToSecrets <String[]>] [-PermissionsToCertificates <String[]>]

   [-PermissionsToStorage <String[]>] [-PassThru] [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm]

   [<CommonParameters>]
- >-
  Set-AzKeyVaultAccessPolicy [-ResourceId] <String> -UserPrincipalName <String> [-PermissionsToKeys <String[]>]

   [-PermissionsToSecrets <String[]>] [-PermissionsToCertificates <String[]>] [-PermissionsToStorage <String[]>]

   [-PassThru] [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Set-AzKeyVaultAccessPolicy [-ResourceId] <String> -EmailAddress <String> [-PermissionsToKeys <String[]>]

   [-PermissionsToSecrets <String[]>] [-PermissionsToCertificates <String[]>] [-PermissionsToStorage <String[]>]

   [-PassThru] [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Set-AzKeyVaultAccessPolicy [-ResourceId] <String> [-EnabledForDeployment] [-EnabledForTemplateDeployment]

   [-EnabledForDiskEncryption] [-PassThru] [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm]

   [<CommonParameters>]
examples:
- title: 'Example 1: Grant permissions to a user for a key vault and modify the permissions'
  code: |-
    PS C:\> Set-AzKeyVaultAccessPolicy -VaultName 'Contoso03Vault' -UserPrincipalName 'PattiFuller@contoso.com' -PermissionsToKeys create,import,delete,list -PermissionsToSecrets set,delete -PassThru

    Vault Name                       : Contoso03Vault
    Resource Group Name              : myrg
    Location                         : westus
    Resource ID                      : /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx/resourceGroups/myrg/providers
                                       /Microsoft.KeyVault/vaults/contoso03vault
    Vault URI                        : https://contoso03vault.vault.azure.net/
    Tenant ID                        : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx
    SKU                              : Standard
    Enabled For Deployment?          : True
    Enabled For Template Deployment? : False
    Enabled For Disk Encryption?     : False
    Soft Delete Enabled?             : True
    Access Policies                  :
                                       Tenant ID                                  : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx
                                       Object ID                                  : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx
                                       Application ID                             :
                                       Display Name                               : User Name (username@microsoft.com)
                                       Permissions to Keys                        : create, import, delete, list
                                       Permissions to Secrets                     : set, delete
                                       Permissions to Certificates                :
                                       Permissions to (Key Vault Managed) Storage :

    Tags                             :

    PS C:\> Set-AzKeyVaultAccessPolicy -VaultName 'Contoso03Vault' -UserPrincipalName 'PattiFuller@contoso.com' -PermissionsToSecrets set,delete,get -PassThru

    Vault Name                       : Contoso03Vault
    Resource Group Name              : myrg
    Location                         : westus
    Resource ID                      : /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx/resourceGroups/myrg/providers
                                       /Microsoft.KeyVault/vaults/contoso03vault
    Vault URI                        : https://contoso03vault.vault.azure.net/
    Tenant ID                        : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx
    SKU                              : Standard
    Enabled For Deployment?          : True
    Enabled For Template Deployment? : False
    Enabled For Disk Encryption?     : False
    Soft Delete Enabled?             : True
    Access Policies                  :
                                       Tenant ID                                  : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx
                                       Object ID                                  : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx
                                       Application ID                             :
                                       Display Name                               : User Name (username@microsoft.com)
                                       Permissions to Keys                        : create, import, delete, list
                                       Permissions to Secrets                     : set, delete, get
                                       Permissions to Certificates                :
                                       Permissions to (Key Vault Managed) Storage :

    Tags                             :

    PS C:\> Set-AzKeyVaultAccessPolicy -VaultName 'Contoso03Vault' -UserPrincipalName 'PattiFuller@contoso.com' -PermissionsToKeys @() -PassThru

    Vault Name                       : Contoso03Vault
    Resource Group Name              : myrg
    Location                         : westus
    Resource ID                      : /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx/resourceGroups/myrg/providers
                                       /Microsoft.KeyVault/vaults/contoso03vault
    Vault URI                        : https://contoso03vault.vault.azure.net/
    Tenant ID                        : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx
    SKU                              : Standard
    Enabled For Deployment?          : True
    Enabled For Template Deployment? : False
    Enabled For Disk Encryption?     : False
    Soft Delete Enabled?             : True
    Access Policies                  :
                                       Tenant ID                                  : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx
                                       Object ID                                  : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxxx
                                       Application ID                             :
                                       Display Name                               : User Name (username@microsoft.com)
                                       Permissions to Keys                        :
                                       Permissions to Secrets                     : set, delete, get
                                       Permissions to Certificates                :
                                       Permissions to (Key Vault Managed) Storage :

    Tags                             :
  description: |-
    The first command grants permissions for a user in your Azure Active Directory, PattiFuller@contoso.com, to perform operations on keys and secrets with a key vault named Contoso03Vault. The *PassThru* parameter results in the updated object being returned by the cmdlet.
    The second command modifies the permissions that were granted to PattiFuller@contoso.com in the first command, to now allow getting secrets in addition to setting and deleting them. The permissions to key operations remain unchanged after this command.
    The final command further modifies the existing permissions for PattiFuller@contoso.com to remove all permissions to key operations. The permissions to secret operations remain unchanged after this command.
  summary: ""
- title: 'Example 2: Grant permissions for an application service principal to read and write secrets'
  code: |-
    PS C:\> Set-AzKeyVaultAccessPolicy -VaultName 'Contoso03Vault' -ServicePrincipalName 'http://payroll.contoso.com' -PermissionsToSecrets Get,Set
  description: |-
    This command grants permissions for an application for a key vault named Contoso03Vault.
    The *ServicePrincipalName* parameter specifies the application. The application must be registered in your Azure Active Directory. The value of the *ServicePrincipalName* parameter must be either the service principal name of the application or the application ID GUID.
    This example specifies the service principal name `http://payroll.contoso.com`, and the command grants the application permissions to read and write secrets.
  summary: ""
- title: 'Example 3: Grant permissions for an application using its object ID'
  code: |-
    PS C:\> Set-AzKeyVaultAccessPolicy -VaultName 'Contoso03Vault' -ObjectId 34595082-9346-41b6-8d6b-295a2808b8db -PermissionsToSecrets Get,Set
  description: |-
    This command grants the application permissions to read and write secrets.
    This example specifies the application using the object ID of the service principal of the application.
  summary: ""
- title: 'Example 4: Grant permissions for a user principal name'
  code: |-
    PS C:\> Set-AzKeyVaultAccessPolicy -VaultName 'Contoso03Vault' -UserPrincipalName 'PattiFuller@contoso.com' -PermissionsToSecrets Get,List,Set
  description: |-
    This command grants get, list, and set permissions for the specified user principal name for access to secrets.
  summary: ""
- title: 'Example 5: Enable secrets to be retrieved from a key vault by the Microsoft.Compute resource provider'
  code: |-
    PS C:\> Set-AzKeyVaultAccessPolicy -VaultName 'Contoso03Vault' -ResourceGroupName 'Group14' -EnabledForDeployment
  description: |-
    This command grants the permissions for secrets to be retrieved from the Contoso03Vault key vault by the Microsoft.Compute resource provider.
  summary: ""
- title: 'Example 6: Grant permissions to a security group'
  code: |-
    PS C:\> Get-AzADGroup
    PS C:\> Set-AzKeyVaultAccessPolicy -VaultName 'myownvault' -ObjectId (Get-AzADGroup -SearchString 'group2')[0].Id -PermissionsToKeys get, set -PermissionsToSecrets get, set
  description: |-
    The first command uses the Get-AzADGroup cmdlet to get all Active Directory groups. From the output, you see 3 groups returned, named **group1**, **group2**, and **group3**. Multiple groups can have the same name but always have a unique ObjectId. When more than one group that has the same name is returned, use the ObjectId in the output to identify the one you want to use.
    You then use the output of this command with Set-AzKeyVaultAccessPolicy to grant permissions to group2 for your key vault, named **myownvault**. This example enumerates the groups named 'group2' inline in the same command line.
    There may be multiple groups in the returned list that are named 'group2'.
    This example picks the first one, indicated by index \[0\] in the returned list.
  summary: ""
- title: 'Example 7: Grant Azure Information Protection access to the customer-managed tenant key (BYOK)'
  code: |-
    PS C:\> Set-AzKeyVaultAccessPolicy -VaultName 'Contoso04Vault' -ServicePrincipalName 00000012-0000-0000-c000-000000000000 -PermissionsToKeys decrypt,sign,get
  description: |-
    This command authorizes Azure Information Protection to use a customer-managed key (the bring your own key, or "BYOK" scenario) as the Azure Information Protection tenant key.
    When you run this command, specify your own key vault name but you must specify the *ServicePrincipalName* parameter with the GUID **00000012-0000-0000-c000-000000000000** and specify the permissions in the example.
  summary: ""
parameters:
- type: <xref href="System.Nullable`1" data-throw-if-not-resolved="False" /><span>[</span><xref href="System.Guid" data-throw-if-not-resolved="False" /><span>]</span>
  name: ApplicationId
  description: |+
    For future use.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: BypassObjectIdValidation
  description: |+
    Enables you to specify an object ID without validating that the object exists in Azure Active Directory.
    Use this parameter only if you want to grant access to your key vault to an object ID that refers to a delegated security group from another Azure tenant.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: None
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Common.Authentication.Abstractions.Core.IAzureContextContainer" data-throw-if-not-resolved="False" />
  name: DefaultProfile
  description: |+
    The credentials, account, tenant, and subscription used for communication with azure

  defaultValue: None
  position: Named
  aliases: AzContext, AzureRmContext, AzureCredential
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: EmailAddress
  isRequired: true
  description: |+
    Specifies the user email address of the user to whom to grant permissions.
    This email address must exist in the directory associated with the current subscription and be unique.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: EnabledForDeployment
  description: |+
    Enables the Microsoft.Compute resource provider to retrieve secrets from this key vault when this key vault is referenced in resource creation, for example when creating a virtual machine.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: EnabledForDiskEncryption
  description: |+
    Enables the Azure disk encryption service to get secrets and unwrap keys from this key vault.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: EnabledForTemplateDeployment
  description: |+
    Enables Azure Resource Manager to get secrets from this key vault when this key vault is referenced in a template deployment.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.KeyVault.Models.PSKeyVaultIdentityItem" data-throw-if-not-resolved="False" />
  name: InputObject
  isRequired: true
  description: |+
    Key Vault Object

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ObjectId
  isRequired: true
  description: |+
    Specifies the object ID of the user or service principal in Azure Active Directory for which to grant permissions.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: PassThru
  description: |+
    Returns an object representing the item with which you are working.
    By default, this cmdlet does not generate any output.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: PermissionsToCertificates
  description: |+
    Specifies an array of certificate permissions to grant to a user or service principal.
    The acceptable values for this parameter:
    - Get
    - List
    - Delete
    - Create
    - Import
    - Update
    - Managecontacts
    - Getissuers
    - Listissuers
    - Setissuers
    - Deleteissuers
    - Manageissuers
    - Recover
    - Backup
    - Restore
    - Purge

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: get, list, delete, create, import, update, managecontacts, getissuers, listissuers, setissuers, deleteissuers, manageissuers, recover, purge, backup, restore
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: PermissionsToKeys
  description: |+
    Specifies an array of key operation permissions to grant to a user or service principal.
    The acceptable values for this parameter:
    - Decrypt
    - Encrypt
    - UnwrapKey
    - WrapKey
    - Verify
    - Sign
    - Get
    - List
    - Update
    - Create
    - Import
    - Delete
    - Backup
    - Restore
    - Recover
    - Purge

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: decrypt, encrypt, unwrapKey, wrapKey, verify, sign, get, list, update, create, import, delete, backup, restore, recover, purge
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: PermissionsToSecrets
  description: |+
    Specifies an array of secret operation permissions to grant to a user or service principal.
    The acceptable values for this parameter:
    - Get
    - List
    - Set
    - Delete
    - Backup
    - Restore
    - Recover
    - Purge

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: get, list, set, delete, backup, restore, recover, purge
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: PermissionsToStorage
  description: |+
    Specifies managed storage account and SaS-definition operation permissions to grant to a user or service principal.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: get, list, delete, set, update, regeneratekey, getsas, listsas, deletesas, setsas, recover, backup, restore, purge
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ResourceGroupName
  description: |+
    Specifies the name of a resource group.

  defaultValue: None
  position: "1"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ResourceId
  isRequired: true
  description: |+
    Key Vault Resource Id

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ServicePrincipalName
  isRequired: true
  description: |+
    Specifies the service principal name of the application to which to grant permissions.
    Specify the application ID, also known as client ID, registered for the application in AzureActive Directory. The application with the service principal name that this parameter specifies must be registered in the Azure directory that contains your current subscription.

  defaultValue: None
  position: Named
  aliases: SPN
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: UserPrincipalName
  isRequired: true
  description: |+
    Specifies the user principal name of the user to whom to grant permissions.
    This user principal name must exist in the directory associated with the current subscription.

  defaultValue: None
  position: Named
  aliases: UPN
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: VaultName
  isRequired: true
  description: |+
    Specifies the name of a key vault.
    This cmdlet modifies the access policy for the key vault that this parameter specifies.

  defaultValue: None
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs. The cmdlet is not run.

  defaultValue: None
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Az.KeyVault.Set-AzKeyVaultAccessPolicy
name: Set-AzKeyVaultAccessPolicy
description: |-
  The **Set-AzKeyVaultAccessPolicy** cmdlet grants or modifies existing permissions for a user, application, or security group to perform the specified operations with a key vault. It does not modify the permissions that other users, applications, or security groups have on the key vault.
  If you are setting permissions for a security group, this operation affects only users in that security group.
  The following directories must all be the same Azure directory:
  - The default directory of the Azure subscription in which the key vault resides.
  - The Azure directory that contains the user or application group that you are granting permissions to.
  Examples of scenarios when these conditions are not met and this cmdlet will not work are:
  - Authorizing a user from a different organization to manage your key vault.
  Each organization has its own directory.
  - Your Azure account has multiple directories.
  If you register an application in a directory other than the default directory, you cannot authorize that application to use your key vault.
  The application must be in the default directory.
  Note that although specifying the resource group is optional for this cmdlet, you should do so for better performance.

  > [!NOTE]
  > When using a service principal to grant access policy permissions, you must use the `-BypassObjectIdValidation` parameter.
metadata:
  external help file: Microsoft.Azure.PowerShell.Cmdlets.KeyVault.dll-Help.xml
  Module Name: Az.KeyVault
  ms.assetid: 636FAD5B-8C39-4E5C-8978-6845C6B89BC0
  online version: https://docs.microsoft.com/en-us/powershell/module/az.keyvault/set-azkeyvaultaccesspolicy
  schema: 2.0.0
  content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/KeyVault/KeyVault/help/Set-AzKeyVaultAccessPolicy.md
  original_content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/KeyVault/KeyVault/help/Set-AzKeyVaultAccessPolicy.md
