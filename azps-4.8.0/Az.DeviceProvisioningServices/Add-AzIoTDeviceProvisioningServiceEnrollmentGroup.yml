### YamlMime:PowershellCmdlet
summary: |-
  Create a device enrollment group.
module: Az.DeviceProvisioningServices
notes: ""
inputs:
- name: <xref href="Microsoft.Azure.Commands.Management.DeviceProvisioningServices.Models.PSProvisioningServiceDescription" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="System.String" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Azure.Commands.Management.DeviceProvisioningServices.Models.PSEnrollmentGroup" data-throw-if-not-resolved="False" />
  description: ""
syntaxes:
- >-
  Add-AzIoTDeviceProvisioningServiceEnrollmentGroup [-ResourceGroupName] <String> [-DpsName] <String>

   -Name <String> -AttestationType <PSAttestationMechanismType> [-PrimaryKey <String>] [-SecondaryKey <String>]

   [-PrimaryCertificate <String>] [-SecondaryCertificate <String>] [-RootCertificate] [-PrimaryCAName <String>]

   [-SecondaryCAName <String>] [-ReprovisionPolicy <PSReprovisionType>] [-EdgeEnabled] [-Tag <Hashtable>]

   [-Desired <Hashtable>] [-AllocationPolicy <PSAllocationPolicy>] [-ProvisioningStatus <PSProvisioningStatus>]

   [-IotHubHostName <String>] [-IotHub <String[]>] [-WebhookUrl <String>] [-ApiVersion <String>]

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Add-AzIoTDeviceProvisioningServiceEnrollmentGroup [-DpsObject] <PSProvisioningServiceDescription>

   -Name <String> -AttestationType <PSAttestationMechanismType> [-PrimaryKey <String>] [-SecondaryKey <String>]

   [-PrimaryCertificate <String>] [-SecondaryCertificate <String>] [-RootCertificate] [-PrimaryCAName <String>]

   [-SecondaryCAName <String>] [-ReprovisionPolicy <PSReprovisionType>] [-EdgeEnabled] [-Tag <Hashtable>]

   [-Desired <Hashtable>] [-AllocationPolicy <PSAllocationPolicy>] [-ProvisioningStatus <PSProvisioningStatus>]

   [-IotHubHostName <String>] [-IotHub <String[]>] [-WebhookUrl <String>] [-ApiVersion <String>]

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Add-AzIoTDeviceProvisioningServiceEnrollmentGroup [-ResourceId] <String> -Name <String>

   -AttestationType <PSAttestationMechanismType> [-PrimaryKey <String>] [-SecondaryKey <String>]

   [-PrimaryCertificate <String>] [-SecondaryCertificate <String>] [-RootCertificate] [-PrimaryCAName <String>]

   [-SecondaryCAName <String>] [-ReprovisionPolicy <PSReprovisionType>] [-EdgeEnabled] [-Tag <Hashtable>]

   [-Desired <Hashtable>] [-AllocationPolicy <PSAllocationPolicy>] [-ProvisioningStatus <PSProvisioningStatus>]

   [-IotHubHostName <String>] [-IotHub <String[]>] [-WebhookUrl <String>] [-ApiVersion <String>]

   [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: Example 1
  code: |-
    PS C:\> Add-AzIoTDeviceProvisioningServiceEnrollmentGroup -ResourceGroupName "myresourcegroup" -DpsName "mydps" -Name "enroll1" -AttestationType SymmetricKey
  description: |-
    Create an enrollment with attestation type SymmetricKey
  summary: ""
- title: Example 2
  code: |-
    PS C:\> Add-AzIoTDeviceProvisioningServiceEnrollmentGroup -ResourceGroupName "myresourcegroup" -DpsName "mydps" -Name "enroll1" -AttestationType X509 -PrimaryCertificate "D:/primary.cer"
  description: |-
    Create an enrollment with attestation type X509
  summary: ""
- title: Example 3
  code: |-
    PS C:\> $tag = @{}
    PS C:\> $tag.Add("environment","test")
    PS C:\> Add-AzIoTDeviceProvisioningServiceEnrollmentGroup -ResourceGroupName "myresourcegroup" -DpsName "mydps" -Name "enroll1" -AttestationType SymmetricKey -tag $tag
  description: |-
    Create an enrollment with attestation type SymmetricKey and initial twin state.
  summary: ""
parameters:
- type: <xref href="Microsoft.Azure.Commands.Management.DeviceProvisioningServices.Models.PSAllocationPolicy" data-throw-if-not-resolved="False" />
  name: AllocationPolicy
  description: |+
    Type of allocation for device assigned to the Hub.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: Hashed, GeoLatency, Static, Custom
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ApiVersion
  description: |+
    The API version of the provisioning service in the custom allocation request.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Management.DeviceProvisioningServices.Models.PSAttestationMechanismType" data-throw-if-not-resolved="False" />
  name: AttestationType
  isRequired: true
  description: |+
    Attestation Mechanism.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: None, Tpm, X509, SymmetricKey
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: None
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Common.Authentication.Abstractions.Core.IAzureContextContainer" data-throw-if-not-resolved="False" />
  name: DefaultProfile
  description: |+
    The credentials, account, tenant, and subscription used for communication with Azure.

  defaultValue: None
  position: Named
  aliases: AzContext, AzureRmContext, AzureCredential
  parameterValueGroup: ""
- type: <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="False" />
  name: Desired
  description: |+
    Initial twin desired properties.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: DpsName
  isRequired: true
  description: |+
    Name of the IoT Device Provisioning Service

  defaultValue: None
  position: "1"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Management.DeviceProvisioningServices.Models.PSProvisioningServiceDescription" data-throw-if-not-resolved="False" />
  name: DpsObject
  isRequired: true
  description: |+
    IoT Device Provisioning Service Object

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: EdgeEnabled
  description: |+
    Flag indicating edge enablement.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: IotHub
  description: |+
    Host name of target IoT Hub.
    Use space-separated list for multiple IoT Hubs.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: IotHubHostName
  description: |+
    Host name of the target IoT Hub.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Name
  isRequired: true
  description: |+
    Name of the enrollment group.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: PrimaryCAName
  description: |+
    The name of the primary root CA certificate.
    If attestation with a root CA certificate is desired then a root ca name must be provided.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: PrimaryCertificate
  description: |+
    The path to the file containing the primary certificate.
    Base-64 representation of X509 certificate .cer file or .pem file path.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: PrimaryKey
  description: |+
    The primary symmetric shared access key stored in base64 format.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Management.DeviceProvisioningServices.Models.PSProvisioningStatus" data-throw-if-not-resolved="False" />
  name: ProvisioningStatus
  description: |+
    Enable or disable enrollment entry.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: Enabled, Disabled
- type: <xref href="Microsoft.Azure.Commands.Management.DeviceProvisioningServices.Models.PSReprovisionType" data-throw-if-not-resolved="False" />
  name: ReprovisionPolicy
  description: |+
    Device data to be handled on re-provision to different Iot Hub.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: reprovisionandmigratedata, reprovisionandresetdata, never
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ResourceGroupName
  isRequired: true
  description: |+
    Name of the Resource Group

  defaultValue: None
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: ResourceId
  isRequired: true
  description: |+
    IoT Device Provisioning Service Resource Id

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: RootCertificate
  description: |+
    Allows to create X509attestation using root certificates.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: SecondaryCAName
  description: |+
    The name of the secondary root CA certificate.
    If attestation with a root CA certificate is desired then a root ca name must be provided.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: SecondaryCertificate
  description: |+
    The path to the file containing the secondary certificate.
    Base-64 representation of X509 certificate .cer file or .pem file path.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: SecondaryKey
  description: |+
    The secondary symmetric shared access key stored in base64 format.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Collections.Hashtable" data-throw-if-not-resolved="False" />
  name: Tag
  description: |+
    Initial twin tags.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: WebhookUrl
  description: |+
    The webhook URL used for custom allocation requests.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: None
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Az.DeviceProvisioningServices.Add-AzIoTDeviceProvisioningServiceEnrollmentGroup
name: Add-AzIoTDeviceProvisioningServiceEnrollmentGroup
description: |-
  Create an enrollment group in an Azure IoT Hub Device Provisioning Service.
metadata:
  external help file: Microsoft.Azure.PowerShell.Cmdlets.DeviceProvisioningServices.dll-Help.xml
  Module Name: Az.DeviceProvisioningServices
  online version: https://docs.microsoft.com/en-us/powershell/module/az.deviceprovisioningservices/add-aziotdeviceprovisioningserviceenrollmentgroup
  schema: 2.0.0
  content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/DeviceProvisioningServices/DeviceProvisioningServices/help/Add-AzIoTDeviceProvisioningServiceEnrollmentGroup.md
  original_content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/DeviceProvisioningServices/DeviceProvisioningServices/help/Add-AzIoTDeviceProvisioningServiceEnrollmentGroup.md
