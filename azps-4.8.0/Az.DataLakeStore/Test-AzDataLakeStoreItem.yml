### YamlMime:PowershellCmdlet
summary: |-
  Tests the existence of a file or folder in Data Lake Store.
module: Az.DataLakeStore
notes: ""
inputs:
- name: <xref href="System.String" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="Microsoft.Azure.Commands.DataLakeStore.Models.DataLakeStorePathInstance" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="Microsoft.Azure.Commands.DataLakeStore.Models.DataLakeStoreEnums+PathType" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="System.Boolean" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Export-AzDataLakeStoreItem
  href: ./Export-AzDataLakeStoreItem.yml
- text: Get-AzDataLakeStoreItem
  href: ./Get-AzDataLakeStoreItem.yml
- text: Import-AzDataLakeStoreItem
  href: ./Import-AzDataLakeStoreItem.yml
- text: Join-AzDataLakeStoreItem
  href: ./Join-AzDataLakeStoreItem.yml
- text: Move-AzDataLakeStoreItem
  href: ./Move-AzDataLakeStoreItem.yml
- text: Remove-AzDataLakeStoreItem
  href: ./Remove-AzDataLakeStoreItem.yml
syntaxes:
- >-
  Test-AzDataLakeStoreItem [-Account] <String> [-Path] <DataLakeStorePathInstance> [[-PathType] <PathType>]

   [-DefaultProfile <IAzureContextContainer>] [<CommonParameters>]
examples:
- title: 'Example 1: Test a file'
  code: |-
    PS C:\>Test-AzDataLakeStoreItem -AccountName "ContosoADL" -Path "/MyFiles/Test.csv"
  description: |-
    This command tests whether the file Test.csv exists in the ContosoADL account.
  summary: ""
- title: Example 2
  code: |-
    Test-AzDataLakeStoreItem -Account 'ContosoADL' -Path '/MyFiles/Test.csv' -PathType Any
  description: ""
  summary: |+
    Tests the existence of a file or folder in Data Lake Store. (autogenerated)

    <!-- Aladdin Generated Example -->
parameters:
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: Account
  isRequired: true
  description: |+
    Specifies the name of the Data Lake Store account.

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: AccountName
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Common.Authentication.Abstractions.Core.IAzureContextContainer" data-throw-if-not-resolved="False" />
  name: DefaultProfile
  description: |+
    The credentials, account, tenant, and subscription used for communication with azure.

  defaultValue: None
  position: Named
  aliases: AzContext, AzureRmContext, AzureCredential
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.DataLakeStore.Models.DataLakeStorePathInstance" data-throw-if-not-resolved="False" />
  name: Path
  isRequired: true
  description: |+
    Specifies the Data Lake Store path of the item to test, starting with the root directory (/).

  defaultValue: None
  pipelineInput: true
  position: "1"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.DataLakeStore.Models.DataLakeStoreEnums+PathType" data-throw-if-not-resolved="False" />
  name: PathType
  description: |+
    Specifies the type of item to test.
    The acceptable values for this parameter are:
    - Any 
    - File 
    - Folder

  defaultValue: None
  pipelineInput: true
  position: "2"
  aliases: ""
  parameterValueGroup: Any, File, Folder
uid: Az.DataLakeStore.Test-AzDataLakeStoreItem
name: Test-AzDataLakeStoreItem
description: |-
  The **Test-AzDataLakeStoreItem** cmdlet tests the existence of a file or folder in Data Lake Store.
metadata:
  external help file: Microsoft.Azure.PowerShell.Cmdlets.DataLakeStore.dll-Help.xml
  Module Name: Az.DataLakeStore
  ms.assetid: 0937A390-6AC2-4611-AA6C-99936AC0ABFD
  online version: https://docs.microsoft.com/en-us/powershell/module/az.datalakestore/test-azdatalakestoreitem
  schema: 2.0.0
  content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/DataLakeStore/DataLakeStore/help/Test-AzDataLakeStoreItem.md
  original_content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/DataLakeStore/DataLakeStore/help/Test-AzDataLakeStoreItem.md
