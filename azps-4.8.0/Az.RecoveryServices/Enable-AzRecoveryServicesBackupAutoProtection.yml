### YamlMime:PowershellCmdlet
summary: |-
  The **Enable-AzRecoveryServicesBackupAutoProtection** cmdlet sets up automatic protection of current and any future SQL DBs within the given instance with the supplied policy.
module: Az.RecoveryServices
notes: ""
inputs:
- name: <xref href="System.String" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="System.Object" data-throw-if-not-resolved="False" />
  description: ""
syntaxes:
- >-
  Enable-AzRecoveryServicesBackupAutoProtection [-InputItem] <ProtectableItemBase>

   [-BackupManagementType] <BackupManagementType> [-WorkloadType] <WorkloadType> [-Policy] <PolicyBase>

   [-PassThru] [-VaultId <String>] [-DefaultProfile <IAzureContextContainer>] [-WhatIf] [-Confirm]

   [<CommonParameters>]
examples:
- title: Example 1
  code: |-
    PS C:\> $Pol = Get-AzRecoveryServicesBackupProtectionPolicy -Name "DefaultSQLPolicy"
    PS C:\> $SQLInstance = Get-AzRecoveryServicesBackupProtectableItem -workloadType MSSQL -ItemType SQLInstance -VaultId $targetVault.ID -Name "MSSQLInstance" -ServerName "TestSQLServer" 
    PS C:\> Enable-AzRecoveryServicesBackupAutoProtection -InputItem $SQLInstance -BackupManagementType AzureWorkload -WorkloadType MSSQL -Policy $Pol -VaultId $targetvault.ID
  description: |-
    The first cmdlet gets a default policy object, and then stores it in the $Pol variable.
    The second cmdlet fetches the relevant SQLInstance which is a protectable item. The 3rd command then sets up auto protection for this instance using the policy in $Pol.
  summary: ""
- title: Example 2
  code: |-
    <!-- Aladdin Generated Example --> 
    Enable-AzRecoveryServicesBackupAutoProtection -BackupManagementType AzureVM -InputItem <ProtectableItemBase> -Policy $Pol -VaultId $vault.ID -WorkloadType AzureVM
  description: ""
  summary: |+
    This commands allows users to automatically protect all existing unprotected DBs and any DB which will be added later with the given policy. (autogenerated)

parameters:
- type: <xref href="Microsoft.Azure.Commands.RecoveryServices.Backup.Cmdlets.Models.BackupManagementType" data-throw-if-not-resolved="False" />
  name: BackupManagementType
  isRequired: true
  description: |+
    The class of resources being protected. Currently the values supported for this cmdlet are MAB, AzureWorkload, AzureVM

  defaultValue: None
  position: "1"
  aliases: ""
  parameterValueGroup: AzureVM, MARS, SCDPM, AzureBackupServer, AzureSQL, AzureStorage, AzureWorkload
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: None
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.Common.Authentication.Abstractions.Core.IAzureContextContainer" data-throw-if-not-resolved="False" />
  name: DefaultProfile
  description: |+
    The credentials, account, tenant, and subscription used for communication with Azure.

  defaultValue: None
  position: Named
  aliases: AzContext, AzureRmContext, AzureCredential
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.RecoveryServices.Backup.Cmdlets.Models.ProtectableItemBase" data-throw-if-not-resolved="False" />
  name: InputItem
  isRequired: true
  description: |+
    Specifies the protectable item object that can be passed as an input. The current supported value is a protectableItem object of type "SQLInstance". 

  defaultValue: None
  pipelineInput: true
  position: "0"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: PassThru
  description: |+
    Return the result for auto protection.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.RecoveryServices.Backup.Cmdlets.Models.PolicyBase" data-throw-if-not-resolved="False" />
  name: Policy
  isRequired: true
  description: |+
    Protection policy object.

  defaultValue: None
  position: "3"
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.String" data-throw-if-not-resolved="False" />
  name: VaultId
  description: |+
    ARM ID of the Recovery Services Vault.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="System.Management.Automation.SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.


  defaultValue: None
  position: Named
  aliases: wi
  parameterValueGroup: ""
- type: <xref href="Microsoft.Azure.Commands.RecoveryServices.Backup.Cmdlets.Models.WorkloadType" data-throw-if-not-resolved="False" />
  name: WorkloadType
  isRequired: true
  description: |+
    Workload type of the resource. The current supported values are AzureVM, WindowsServer, MSSQL

  defaultValue: None
  position: "2"
  aliases: ""
  parameterValueGroup: AzureVM, AzureSQLDatabase, AzureFiles, MSSQL
uid: Az.RecoveryServices.Enable-AzRecoveryServicesBackupAutoProtection
name: Enable-AzRecoveryServicesBackupAutoProtection
description: |-
  This command allows users to automatically protect all existing unprotected SQL DBs and any DB which will be added later with the given policy.  Since the instruction is to back up all future DBs, the operation is done at a SQLInstance level, Azure backup service will then regularly scan auto-protected containers for any new DBs and automatically protect them.
metadata:
  external help file: Microsoft.Azure.PowerShell.Cmdlets.RecoveryServices.Backup.dll-Help.xml
  Module Name: Az.RecoveryServices
  online version: https://docs.microsoft.com/en-us/powershell/module/az.recoveryservices/enable-azrecoveryservicesbackupautoprotection
  schema: 2.0.0
  content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/RecoveryServices/RecoveryServices/help/Enable-AzRecoveryServicesBackupAutoProtection.md
  original_content_git_url: https://github.com/Azure/azure-powershell/blob/master/src/RecoveryServices/RecoveryServices/help/Enable-AzRecoveryServicesBackupAutoProtection.md
